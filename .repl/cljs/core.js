// Compiled by ClojureScript 0.0-2727 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2727";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,"readably","readably",1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,"meta","meta",1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,"dup","dup",556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,"print-length","print-length",1931866356),cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__11349__delegate = function (args){
return console.log.apply(console,(function (){var G__11348 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__11348) : cljs.core.into_array.call(null,G__11348));
})());
};
var G__11349 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__11350__i = 0, G__11350__a = new Array(arguments.length -  0);
while (G__11350__i < G__11350__a.length) {G__11350__a[G__11350__i] = arguments[G__11350__i + 0]; ++G__11350__i;}
  args = new cljs.core.IndexedSeq(G__11350__a,0);
} 
return G__11349__delegate.call(this,args);};
G__11349.cljs$lang$maxFixedArity = 0;
G__11349.cljs$lang$applyTo = (function (arglist__11351){
var args = cljs.core.seq(arglist__11351);
return G__11349__delegate(args);
});
G__11349.cljs$core$IFn$_invoke$arity$variadic = G__11349__delegate;
return G__11349;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__11353 = x;
return goog.isString(G__11353);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__11355 = x__$1;
return goog.typeOf(G__11355);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3799__auto__ = ty;
if(cljs.core.truth_(and__3799__auto__)){
return ty.cljs$lang$type;
} else {
return and__3799__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__11357 = obj;
return goog.typeOf(G__11357);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__11359 = Symbol;
return goog.typeOf(G__11359);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4698__auto___11361 = len;
var i_11362 = (0);
while(true){
if((i_11362 < n__4698__auto___11361)){
(new_arr[i_11362] = (arr[i_11362]));

var G__11363 = (i_11362 + (1));
i_11362 = G__11363;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__11364 = (i + (1));
i = G__11364;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__11373__delegate = function (array,i,idxs){
var G__11370 = aget;
var G__11371 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__11372 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__11370,G__11371,G__11372) : cljs.core.apply.call(null,G__11370,G__11371,G__11372));
};
var G__11373 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__11374__i = 0, G__11374__a = new Array(arguments.length -  2);
while (G__11374__i < G__11374__a.length) {G__11374__a[G__11374__i] = arguments[G__11374__i + 2]; ++G__11374__i;}
  idxs = new cljs.core.IndexedSeq(G__11374__a,0);
} 
return G__11373__delegate.call(this,array,i,idxs);};
G__11373.cljs$lang$maxFixedArity = 2;
G__11373.cljs$lang$applyTo = (function (arglist__11375){
var array = cljs.core.first(arglist__11375);
arglist__11375 = cljs.core.next(arglist__11375);
var i = cljs.core.first(arglist__11375);
var idxs = cljs.core.rest(arglist__11375);
return G__11373__delegate(array,i,idxs);
});
G__11373.cljs$core$IFn$_invoke$arity$variadic = G__11373__delegate;
return G__11373;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__11376 = null;
if (arguments.length > 2) {
var G__11377__i = 0, G__11377__a = new Array(arguments.length -  2);
while (G__11377__i < G__11377__a.length) {G__11377__a[G__11377__i] = arguments[G__11377__i + 2]; ++G__11377__i;}
G__11376 = new cljs.core.IndexedSeq(G__11377__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__11376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__11386__delegate = function (array,idx,idx2,idxv){
var G__11382 = aset;
var G__11383 = (array[idx]);
var G__11384 = idx2;
var G__11385 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__11382,G__11383,G__11384,G__11385) : cljs.core.apply.call(null,G__11382,G__11383,G__11384,G__11385));
};
var G__11386 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__11387__i = 0, G__11387__a = new Array(arguments.length -  3);
while (G__11387__i < G__11387__a.length) {G__11387__a[G__11387__i] = arguments[G__11387__i + 3]; ++G__11387__i;}
  idxv = new cljs.core.IndexedSeq(G__11387__a,0);
} 
return G__11386__delegate.call(this,array,idx,idx2,idxv);};
G__11386.cljs$lang$maxFixedArity = 3;
G__11386.cljs$lang$applyTo = (function (arglist__11388){
var array = cljs.core.first(arglist__11388);
arglist__11388 = cljs.core.next(arglist__11388);
var idx = cljs.core.first(arglist__11388);
arglist__11388 = cljs.core.next(arglist__11388);
var idx2 = cljs.core.first(arglist__11388);
var idxv = cljs.core.rest(arglist__11388);
return G__11386__delegate(array,idx,idx2,idxv);
});
G__11386.cljs$core$IFn$_invoke$arity$variadic = G__11386__delegate;
return G__11386;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__11389 = null;
if (arguments.length > 3) {
var G__11390__i = 0, G__11390__a = new Array(arguments.length -  3);
while (G__11390__i < G__11390__a.length) {G__11390__a[G__11390__i] = arguments[G__11390__i + 3]; ++G__11390__i;}
G__11389 = new cljs.core.IndexedSeq(G__11390__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__11389);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__11396 = (function (a,x){
a.push(x);

return a;
});
var G__11397 = [];
var G__11398 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11396,G__11397,G__11398) : cljs.core.reduce.call(null,G__11396,G__11397,G__11398));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__11399__i = 0, G__11399__a = new Array(arguments.length -  2);
while (G__11399__i < G__11399__a.length) {G__11399__a[G__11399__i] = arguments[G__11399__i + 2]; ++G__11399__i;}
  args = new cljs.core.IndexedSeq(G__11399__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__11400){
var obj = cljs.core.first(arglist__11400);
arglist__11400 = cljs.core.next(arglist__11400);
var s = cljs.core.first(arglist__11400);
var args = cljs.core.rest(arglist__11400);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj11402 = {};
return obj11402;
})();


cljs.core.IFn = (function (){var obj11404 = {};
return obj11404;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11450 = x__4455__auto__;
return goog.typeOf(G__11450);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11452 = x__4455__auto__;
return goog.typeOf(G__11452);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11454 = x__4455__auto__;
return goog.typeOf(G__11454);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11456 = x__4455__auto__;
return goog.typeOf(G__11456);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11458 = x__4455__auto__;
return goog.typeOf(G__11458);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11460 = x__4455__auto__;
return goog.typeOf(G__11460);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11462 = x__4455__auto__;
return goog.typeOf(G__11462);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11464 = x__4455__auto__;
return goog.typeOf(G__11464);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11466 = x__4455__auto__;
return goog.typeOf(G__11466);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11468 = x__4455__auto__;
return goog.typeOf(G__11468);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11470 = x__4455__auto__;
return goog.typeOf(G__11470);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11472 = x__4455__auto__;
return goog.typeOf(G__11472);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11474 = x__4455__auto__;
return goog.typeOf(G__11474);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11476 = x__4455__auto__;
return goog.typeOf(G__11476);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11478 = x__4455__auto__;
return goog.typeOf(G__11478);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11480 = x__4455__auto__;
return goog.typeOf(G__11480);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11482 = x__4455__auto__;
return goog.typeOf(G__11482);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11484 = x__4455__auto__;
return goog.typeOf(G__11484);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11486 = x__4455__auto__;
return goog.typeOf(G__11486);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11488 = x__4455__auto__;
return goog.typeOf(G__11488);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11490 = x__4455__auto__;
return goog.typeOf(G__11490);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._invoke[(function (){var G__11492 = x__4455__auto__;
return goog.typeOf(G__11492);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._invoke["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj11494 = {};
return obj11494;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3799__auto__ = value;
if(and__3799__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3799__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4455__auto__ = (((value == null))?null:value);
return (function (){var or__3811__auto__ = (cljs.core._clone[(function (){var G__11498 = x__4455__auto__;
return goog.typeOf(G__11498);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._clone["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj11500 = {};
return obj11500;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._count[(function (){var G__11504 = x__4455__auto__;
return goog.typeOf(G__11504);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._count["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj11506 = {};
return obj11506;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._empty[(function (){var G__11510 = x__4455__auto__;
return goog.typeOf(G__11510);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._empty["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj11512 = {};
return obj11512;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._conj[(function (){var G__11516 = x__4455__auto__;
return goog.typeOf(G__11516);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._conj["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj11518 = {};
return obj11518;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._nth[(function (){var G__11524 = x__4455__auto__;
return goog.typeOf(G__11524);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._nth["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._nth[(function (){var G__11526 = x__4455__auto__;
return goog.typeOf(G__11526);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._nth["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj11528 = {};
return obj11528;
})();


cljs.core.ISeq = (function (){var obj11530 = {};
return obj11530;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._first[(function (){var G__11534 = x__4455__auto__;
return goog.typeOf(G__11534);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._first["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._rest[(function (){var G__11538 = x__4455__auto__;
return goog.typeOf(G__11538);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._rest["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj11540 = {};
return obj11540;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._next[(function (){var G__11544 = x__4455__auto__;
return goog.typeOf(G__11544);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._next["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj11546 = {};
return obj11546;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._lookup[(function (){var G__11552 = x__4455__auto__;
return goog.typeOf(G__11552);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._lookup["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._lookup[(function (){var G__11554 = x__4455__auto__;
return goog.typeOf(G__11554);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._lookup["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj11556 = {};
return obj11556;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__11560 = x__4455__auto__;
return goog.typeOf(G__11560);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._assoc[(function (){var G__11564 = x__4455__auto__;
return goog.typeOf(G__11564);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._assoc["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj11566 = {};
return obj11566;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._dissoc[(function (){var G__11570 = x__4455__auto__;
return goog.typeOf(G__11570);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj11572 = {};
return obj11572;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._key[(function (){var G__11576 = x__4455__auto__;
return goog.typeOf(G__11576);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._key["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._val[(function (){var G__11580 = x__4455__auto__;
return goog.typeOf(G__11580);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._val["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj11582 = {};
return obj11582;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._disjoin[(function (){var G__11586 = x__4455__auto__;
return goog.typeOf(G__11586);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj11588 = {};
return obj11588;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._peek[(function (){var G__11592 = x__4455__auto__;
return goog.typeOf(G__11592);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._peek["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._pop[(function (){var G__11596 = x__4455__auto__;
return goog.typeOf(G__11596);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._pop["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj11598 = {};
return obj11598;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._assoc_n[(function (){var G__11602 = x__4455__auto__;
return goog.typeOf(G__11602);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj11604 = {};
return obj11604;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._deref[(function (){var G__11608 = x__4455__auto__;
return goog.typeOf(G__11608);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._deref["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj11610 = {};
return obj11610;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._deref_with_timeout[(function (){var G__11614 = x__4455__auto__;
return goog.typeOf(G__11614);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj11616 = {};
return obj11616;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._meta[(function (){var G__11620 = x__4455__auto__;
return goog.typeOf(G__11620);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._meta["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj11622 = {};
return obj11622;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._with_meta[(function (){var G__11626 = x__4455__auto__;
return goog.typeOf(G__11626);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj11628 = {};
return obj11628;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._reduce[(function (){var G__11634 = x__4455__auto__;
return goog.typeOf(G__11634);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._reduce["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._reduce[(function (){var G__11636 = x__4455__auto__;
return goog.typeOf(G__11636);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._reduce["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj11638 = {};
return obj11638;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._kv_reduce[(function (){var G__11642 = x__4455__auto__;
return goog.typeOf(G__11642);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj11644 = {};
return obj11644;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._equiv[(function (){var G__11648 = x__4455__auto__;
return goog.typeOf(G__11648);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._equiv["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj11650 = {};
return obj11650;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._hash[(function (){var G__11654 = x__4455__auto__;
return goog.typeOf(G__11654);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._hash["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj11656 = {};
return obj11656;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._seq[(function (){var G__11660 = x__4455__auto__;
return goog.typeOf(G__11660);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._seq["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj11662 = {};
return obj11662;
})();


cljs.core.IList = (function (){var obj11664 = {};
return obj11664;
})();


cljs.core.IRecord = (function (){var obj11666 = {};
return obj11666;
})();


cljs.core.IReversible = (function (){var obj11668 = {};
return obj11668;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._rseq[(function (){var G__11672 = x__4455__auto__;
return goog.typeOf(G__11672);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._rseq["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj11674 = {};
return obj11674;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._sorted_seq[(function (){var G__11678 = x__4455__auto__;
return goog.typeOf(G__11678);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._sorted_seq_from[(function (){var G__11682 = x__4455__auto__;
return goog.typeOf(G__11682);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._entry_key[(function (){var G__11686 = x__4455__auto__;
return goog.typeOf(G__11686);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._comparator[(function (){var G__11690 = x__4455__auto__;
return goog.typeOf(G__11690);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._comparator["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj11692 = {};
return obj11692;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3799__auto__ = writer;
if(and__3799__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3799__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4455__auto__ = (((writer == null))?null:writer);
return (function (){var or__3811__auto__ = (cljs.core._write[(function (){var G__11696 = x__4455__auto__;
return goog.typeOf(G__11696);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._write["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3799__auto__ = writer;
if(and__3799__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3799__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4455__auto__ = (((writer == null))?null:writer);
return (function (){var or__3811__auto__ = (cljs.core._flush[(function (){var G__11700 = x__4455__auto__;
return goog.typeOf(G__11700);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._flush["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj11702 = {};
return obj11702;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._pr_writer[(function (){var G__11706 = x__4455__auto__;
return goog.typeOf(G__11706);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj11708 = {};
return obj11708;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3799__auto__ = d;
if(and__3799__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3799__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4455__auto__ = (((d == null))?null:d);
return (function (){var or__3811__auto__ = (cljs.core._realized_QMARK_[(function (){var G__11712 = x__4455__auto__;
return goog.typeOf(G__11712);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj11714 = {};
return obj11714;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._notify_watches[(function (){var G__11718 = x__4455__auto__;
return goog.typeOf(G__11718);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._add_watch[(function (){var G__11722 = x__4455__auto__;
return goog.typeOf(G__11722);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3799__auto__ = this$;
if(and__3799__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3799__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4455__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3811__auto__ = (cljs.core._remove_watch[(function (){var G__11726 = x__4455__auto__;
return goog.typeOf(G__11726);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj11728 = {};
return obj11728;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._as_transient[(function (){var G__11732 = x__4455__auto__;
return goog.typeOf(G__11732);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj11734 = {};
return obj11734;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._conj_BANG_[(function (){var G__11738 = x__4455__auto__;
return goog.typeOf(G__11738);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._persistent_BANG_[(function (){var G__11742 = x__4455__auto__;
return goog.typeOf(G__11742);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj11744 = {};
return obj11744;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._assoc_BANG_[(function (){var G__11748 = x__4455__auto__;
return goog.typeOf(G__11748);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj11750 = {};
return obj11750;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__11754 = x__4455__auto__;
return goog.typeOf(G__11754);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj11756 = {};
return obj11756;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__11760 = x__4455__auto__;
return goog.typeOf(G__11760);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._pop_BANG_[(function (){var G__11764 = x__4455__auto__;
return goog.typeOf(G__11764);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj11766 = {};
return obj11766;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3799__auto__ = tcoll;
if(and__3799__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4455__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3811__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__11770 = x__4455__auto__;
return goog.typeOf(G__11770);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj11772 = {};
return obj11772;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._compare[(function (){var G__11776 = x__4455__auto__;
return goog.typeOf(G__11776);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._compare["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj11778 = {};
return obj11778;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._drop_first[(function (){var G__11782 = x__4455__auto__;
return goog.typeOf(G__11782);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj11784 = {};
return obj11784;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._chunked_first[(function (){var G__11788 = x__4455__auto__;
return goog.typeOf(G__11788);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._chunked_rest[(function (){var G__11792 = x__4455__auto__;
return goog.typeOf(G__11792);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj11794 = {};
return obj11794;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._chunked_next[(function (){var G__11798 = x__4455__auto__;
return goog.typeOf(G__11798);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj11800 = {};
return obj11800;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._name[(function (){var G__11804 = x__4455__auto__;
return goog.typeOf(G__11804);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._name["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._namespace[(function (){var G__11808 = x__4455__auto__;
return goog.typeOf(G__11808);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._namespace["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj11810 = {};
return obj11810;
})();


cljs.core.IReset = (function (){var obj11812 = {};
return obj11812;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._reset_BANG_[(function (){var G__11816 = x__4455__auto__;
return goog.typeOf(G__11816);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj11818 = {};
return obj11818;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._swap_BANG_[(function (){var G__11828 = x__4455__auto__;
return goog.typeOf(G__11828);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._swap_BANG_[(function (){var G__11830 = x__4455__auto__;
return goog.typeOf(G__11830);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._swap_BANG_[(function (){var G__11832 = x__4455__auto__;
return goog.typeOf(G__11832);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._swap_BANG_[(function (){var G__11834 = x__4455__auto__;
return goog.typeOf(G__11834);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj11836 = {};
return obj11836;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3799__auto__ = o;
if(and__3799__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3799__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4455__auto__ = (((o == null))?null:o);
return (function (){var or__3811__auto__ = (cljs.core._vreset_BANG_[(function (){var G__11840 = x__4455__auto__;
return goog.typeOf(G__11840);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj11842 = {};
return obj11842;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3799__auto__ = coll;
if(and__3799__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3799__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4455__auto__ = (((coll == null))?null:coll);
return (function (){var or__3811__auto__ = (cljs.core._iterator[(function (){var G__11846 = x__4455__auto__;
return goog.typeOf(G__11846);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._iterator["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__11849 = (4294967295);
var G__11850 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11849,G__11850) : Math.imul.call(null,G__11849,G__11850));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__11853 = a;
var G__11854 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__11853,G__11854) : Math.imul.call(null,G__11853,G__11854));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__11855 = (i + (2));
var G__11856 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__11855;
h1 = G__11856;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj11858 = {};
return obj11858;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__11859 = (i + (1));
var G__11860 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__11859;
hash = G__11860;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj11864 = {};
return obj11864;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__11867 = o;
if(G__11867){
var bit__4485__auto__ = (G__11867.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4485__auto__) || (G__11867.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__11868 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11868) : Math.floor.call(null,G__11868));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3799__auto__ = cljs.core.not(a.ns);
if(and__3799__auto__){
return b.ns;
} else {
return and__3799__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__11875 = a.ns;
var G__11876 = b.ns;
return goog.array.defaultCompare(G__11875,G__11876);
})();
if(((0) === nsc)){
var G__11877 = a.name;
var G__11878 = b.name;
return goog.array.defaultCompare(G__11877,G__11878);
} else {
return nsc;
}
}
} else {
var G__11879 = a.name;
var G__11880 = b.name;
return goog.array.defaultCompare(G__11879,G__11880);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4232__auto__ = self__._hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__11882 = null;
var G__11882__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__11882__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__11882 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__11882__2.call(this,self__,coll);
case 3:
return G__11882__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11882.cljs$core$IFn$_invoke$arity$2 = G__11882__2;
G__11882.cljs$core$IFn$_invoke$arity$3 = G__11882__3;
return G__11882;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args11881){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11881)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__11930 = null;
var G__11930__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__11930__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__11930__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__11930__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__11930__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__11930__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__11930__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__11930__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__11930__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__11930__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__11930__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__11930__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__11930__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__11930__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__11930__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__11930__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__11930__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__11930__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__11930__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__11930__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__11930__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__11930__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__11886 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__11887 = a;
var G__11888 = b;
var G__11889 = c;
var G__11890 = d;
var G__11891 = e;
var G__11892 = f;
var G__11893 = g;
var G__11894 = h;
var G__11895 = i;
var G__11896 = j;
var G__11897 = k;
var G__11898 = l;
var G__11899 = m;
var G__11900 = n;
var G__11901 = o;
var G__11902 = p;
var G__11903 = q;
var G__11904 = r;
var G__11905 = s;
var G__11906 = t;
var G__11907 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11886,G__11887,G__11888,G__11889,G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906,G__11907) : cljs.core.apply.call(null,G__11886,G__11887,G__11888,G__11889,G__11890,G__11891,G__11892,G__11893,G__11894,G__11895,G__11896,G__11897,G__11898,G__11899,G__11900,G__11901,G__11902,G__11903,G__11904,G__11905,G__11906,G__11907));
});
G__11930 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__11930__1.call(this,self__);
case 2:
return G__11930__2.call(this,self__,a);
case 3:
return G__11930__3.call(this,self__,a,b);
case 4:
return G__11930__4.call(this,self__,a,b,c);
case 5:
return G__11930__5.call(this,self__,a,b,c,d);
case 6:
return G__11930__6.call(this,self__,a,b,c,d,e);
case 7:
return G__11930__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__11930__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__11930__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__11930__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__11930__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__11930__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__11930__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__11930__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__11930__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__11930__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__11930__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__11930__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__11930__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__11930__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__11930__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__11930__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__11930.cljs$core$IFn$_invoke$arity$1 = G__11930__1;
G__11930.cljs$core$IFn$_invoke$arity$2 = G__11930__2;
G__11930.cljs$core$IFn$_invoke$arity$3 = G__11930__3;
G__11930.cljs$core$IFn$_invoke$arity$4 = G__11930__4;
G__11930.cljs$core$IFn$_invoke$arity$5 = G__11930__5;
G__11930.cljs$core$IFn$_invoke$arity$6 = G__11930__6;
G__11930.cljs$core$IFn$_invoke$arity$7 = G__11930__7;
G__11930.cljs$core$IFn$_invoke$arity$8 = G__11930__8;
G__11930.cljs$core$IFn$_invoke$arity$9 = G__11930__9;
G__11930.cljs$core$IFn$_invoke$arity$10 = G__11930__10;
G__11930.cljs$core$IFn$_invoke$arity$11 = G__11930__11;
G__11930.cljs$core$IFn$_invoke$arity$12 = G__11930__12;
G__11930.cljs$core$IFn$_invoke$arity$13 = G__11930__13;
G__11930.cljs$core$IFn$_invoke$arity$14 = G__11930__14;
G__11930.cljs$core$IFn$_invoke$arity$15 = G__11930__15;
G__11930.cljs$core$IFn$_invoke$arity$16 = G__11930__16;
G__11930.cljs$core$IFn$_invoke$arity$17 = G__11930__17;
G__11930.cljs$core$IFn$_invoke$arity$18 = G__11930__18;
G__11930.cljs$core$IFn$_invoke$arity$19 = G__11930__19;
G__11930.cljs$core$IFn$_invoke$arity$20 = G__11930__20;
G__11930.cljs$core$IFn$_invoke$arity$21 = G__11930__21;
G__11930.cljs$core$IFn$_invoke$arity$22 = G__11930__22;
return G__11930;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args11885){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11885)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__11908 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__11909 = a;
var G__11910 = b;
var G__11911 = c;
var G__11912 = d;
var G__11913 = e;
var G__11914 = f;
var G__11915 = g;
var G__11916 = h;
var G__11917 = i;
var G__11918 = j;
var G__11919 = k;
var G__11920 = l;
var G__11921 = m;
var G__11922 = n;
var G__11923 = o;
var G__11924 = p;
var G__11925 = q;
var G__11926 = r;
var G__11927 = s;
var G__11928 = t;
var G__11929 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929) : cljs.core.apply.call(null,G__11908,G__11909,G__11910,G__11911,G__11912,G__11913,G__11914,G__11915,G__11916,G__11917,G__11918,G__11919,G__11920,G__11921,G__11922,G__11923,G__11924,G__11925,G__11926,G__11927,G__11928,G__11929));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__11932 = x;
if(G__11932){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto__ = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return G__11932.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__11932.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11932);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__11932);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__11934 = value;
if(G__11934){
var bit__4492__auto__ = (G__11934.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4492__auto__) || (G__11934.cljs$core$ICloneable$)){
return true;
} else {
if((!G__11934.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11934);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__11934);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11936 = coll;
if(G__11936){
var bit__4485__auto__ = (G__11936.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4485__auto__) || (G__11936.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11938 = coll;
if(G__11938){
var bit__4485__auto__ = (G__11938.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4485__auto__) || (G__11938.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__11940 = coll;
if(G__11940){
var bit__4485__auto__ = (G__11940.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4485__auto__) || (G__11940.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__11942 = coll;
if(G__11942){
var bit__4485__auto__ = (G__11942.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4485__auto__) || (G__11942.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__11947__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__11948 = y;
var G__11949 = cljs.core.first(more);
var G__11950 = cljs.core.next(more);
x = G__11948;
y = G__11949;
more = G__11950;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__11947 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__11951__i = 0, G__11951__a = new Array(arguments.length -  2);
while (G__11951__i < G__11951__a.length) {G__11951__a[G__11951__i] = arguments[G__11951__i + 2]; ++G__11951__i;}
  more = new cljs.core.IndexedSeq(G__11951__a,0);
} 
return G__11947__delegate.call(this,x,y,more);};
G__11947.cljs$lang$maxFixedArity = 2;
G__11947.cljs$lang$applyTo = (function (arglist__11952){
var x = cljs.core.first(arglist__11952);
arglist__11952 = cljs.core.next(arglist__11952);
var y = cljs.core.first(arglist__11952);
var more = cljs.core.rest(arglist__11952);
return G__11947__delegate(x,y,more);
});
G__11947.cljs$core$IFn$_invoke$arity$variadic = G__11947__delegate;
return G__11947;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__11953 = null;
if (arguments.length > 2) {
var G__11954__i = 0, G__11954__a = new Array(arguments.length -  2);
while (G__11954__i < G__11954__a.length) {G__11954__a[G__11954__i] = arguments[G__11954__i + 2]; ++G__11954__i;}
G__11953 = new cljs.core.IndexedSeq(G__11954__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__11953);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__11955 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__11955) : cljs.core.es6_iterator_seq.call(null,G__11955));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11956 = (n + (1));
var G__11957 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11958 = cljs.core.next(coll__$1);
n = G__11956;
hash_code = G__11957;
coll__$1 = G__11958;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__11959 = (n + (1));
var G__11960 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__11961 = cljs.core.next(coll__$1);
n = G__11959;
hash_code = G__11960;
coll__$1 = G__11961;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__11962 = o;
return goog.getUid(G__11962);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__11964 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11964) : cljs.core.deref.call(null,G__11964));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11971 = val;
var G__11972 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11971,G__11972) : f.call(null,G__11971,G__11972));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11977 = nval;
var G__11978 = (n + (1));
val = G__11977;
n = G__11978;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11973 = val__$1;
var G__11974 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11973,G__11974) : f.call(null,G__11973,G__11974));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11979 = nval;
var G__11980 = (n + (1));
val__$1 = G__11979;
n = G__11980;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11975 = val__$1;
var G__11976 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11975,G__11976) : f.call(null,G__11975,G__11976));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11981 = nval;
var G__11982 = (n + (1));
val__$1 = G__11981;
n = G__11982;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__11989 = val;
var G__11990 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11989,G__11990) : f.call(null,G__11989,G__11990));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11995 = nval;
var G__11996 = (n + (1));
val = G__11995;
n = G__11996;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__11991 = val__$1;
var G__11992 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11991,G__11992) : f.call(null,G__11991,G__11992));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11997 = nval;
var G__11998 = (n + (1));
val__$1 = G__11997;
n = G__11998;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__11993 = val__$1;
var G__11994 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11993,G__11994) : f.call(null,G__11993,G__11994));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__11999 = nval;
var G__12000 = (n + (1));
val__$1 = G__11999;
n = G__12000;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__12002 = x;
if(G__12002){
var bit__4492__auto__ = (G__12002.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4492__auto__) || (G__12002.cljs$core$ICounted$)){
return true;
} else {
if((!G__12002.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__12002);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__12002);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__12004 = x;
if(G__12004){
var bit__4492__auto__ = (G__12004.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4492__auto__) || (G__12004.cljs$core$IIndexed$)){
return true;
} else {
if((!G__12004.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__12004);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__12004);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__12005 = coll__$1;
var G__12006 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__12005,G__12006) : cljs.core.equiv_sequential.call(null,G__12005,G__12006));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__12007 = o;
var G__12008 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__12007,G__12008) : cljs.core.cons.call(null,G__12007,G__12008));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__12011 = coll__$1;
var G__12012 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__12011,G__12012) : cljs.core.equiv_sequential.call(null,G__12011,G__12012));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__12013 = cljs.core.List.EMPTY;
var G__12014 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__12013,G__12014) : cljs.core.with_meta.call(null,G__12013,G__12014));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__12015 = f;
var G__12016 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__12015,G__12016) : cljs.core.seq_reduce.call(null,G__12015,G__12016));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__12017 = f;
var G__12018 = start;
var G__12019 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__12017,G__12018,G__12019) : cljs.core.seq_reduce.call(null,G__12017,G__12018,G__12019));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__12020 = o;
var G__12021 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__12020,G__12021) : cljs.core.cons.call(null,G__12020,G__12021));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__12022 = sn;
s = G__12022;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__12027__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__12028 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__12029 = cljs.core.first(xs);
var G__12030 = cljs.core.next(xs);
coll = G__12028;
x = G__12029;
xs = G__12030;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__12027 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__12031__i = 0, G__12031__a = new Array(arguments.length -  2);
while (G__12031__i < G__12031__a.length) {G__12031__a[G__12031__i] = arguments[G__12031__i + 2]; ++G__12031__i;}
  xs = new cljs.core.IndexedSeq(G__12031__a,0);
} 
return G__12027__delegate.call(this,coll,x,xs);};
G__12027.cljs$lang$maxFixedArity = 2;
G__12027.cljs$lang$applyTo = (function (arglist__12032){
var coll = cljs.core.first(arglist__12032);
arglist__12032 = cljs.core.next(arglist__12032);
var x = cljs.core.first(arglist__12032);
var xs = cljs.core.rest(arglist__12032);
return G__12027__delegate(coll,x,xs);
});
G__12027.cljs$core$IFn$_invoke$arity$variadic = G__12027__delegate;
return G__12027;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__12033 = null;
if (arguments.length > 2) {
var G__12034__i = 0, G__12034__a = new Array(arguments.length -  2);
while (G__12034__i < G__12034__a.length) {G__12034__a[G__12034__i] = arguments[G__12034__i + 2]; ++G__12034__i;}
G__12033 = new cljs.core.IndexedSeq(G__12034__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__12033);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__12035 = cljs.core.next(s);
var G__12036 = (acc + (1));
s = G__12035;
acc = G__12036;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__12038 = coll;
if(G__12038){
var bit__4485__auto__ = (G__12038.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4485__auto__) || (G__12038.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__12039 = cljs.core.next(coll);
var G__12040 = (n - (1));
coll = G__12039;
n = G__12040;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__12041 = cljs.core.next(coll);
var G__12042 = (n - (1));
var G__12043 = not_found;
coll = G__12041;
n = G__12042;
not_found = G__12043;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__12048 = coll;
if(G__12048){
var bit__4485__auto__ = (G__12048.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4485__auto__) || (G__12048.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__12049 = coll;
if(G__12049){
var bit__4492__auto__ = (G__12049.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4492__auto__) || (G__12049.cljs$core$ISeq$)){
return true;
} else {
if((!G__12049.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12049);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12049);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__12050 = coll;
if(G__12050){
var bit__4485__auto__ = (G__12050.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4485__auto__) || (G__12050.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__12051 = coll;
if(G__12051){
var bit__4492__auto__ = (G__12051.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4492__auto__) || (G__12051.cljs$core$ISeq$)){
return true;
} else {
if((!G__12051.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12051);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12051);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__12052 = (n__$1 - (1));
var G__12053 = cljs.core.rest(xs);
n__$1 = G__12052;
xs = G__12053;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__12056 = o;
if(G__12056){
var bit__4485__auto__ = (G__12056.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4485__auto__) || (G__12056.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__12057 = o;
if(G__12057){
var bit__4485__auto__ = (G__12057.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4485__auto__) || (G__12057.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__12061__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__12062 = ret;
var G__12063 = cljs.core.first(kvs);
var G__12064 = cljs.core.second(kvs);
var G__12065 = cljs.core.nnext(kvs);
coll = G__12062;
k = G__12063;
v = G__12064;
kvs = G__12065;
continue;
} else {
return ret;
}
break;
}
};
var G__12061 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__12066__i = 0, G__12066__a = new Array(arguments.length -  3);
while (G__12066__i < G__12066__a.length) {G__12066__a[G__12066__i] = arguments[G__12066__i + 3]; ++G__12066__i;}
  kvs = new cljs.core.IndexedSeq(G__12066__a,0);
} 
return G__12061__delegate.call(this,coll,k,v,kvs);};
G__12061.cljs$lang$maxFixedArity = 3;
G__12061.cljs$lang$applyTo = (function (arglist__12067){
var coll = cljs.core.first(arglist__12067);
arglist__12067 = cljs.core.next(arglist__12067);
var k = cljs.core.first(arglist__12067);
arglist__12067 = cljs.core.next(arglist__12067);
var v = cljs.core.first(arglist__12067);
var kvs = cljs.core.rest(arglist__12067);
return G__12061__delegate(coll,k,v,kvs);
});
G__12061.cljs$core$IFn$_invoke$arity$variadic = G__12061__delegate;
return G__12061;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__12068 = null;
if (arguments.length > 3) {
var G__12069__i = 0, G__12069__a = new Array(arguments.length -  3);
while (G__12069__i < G__12069__a.length) {G__12069__a[G__12069__i] = arguments[G__12069__i + 3]; ++G__12069__i;}
G__12068 = new cljs.core.IndexedSeq(G__12069__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__12068);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__12072__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__12073 = ret;
var G__12074 = cljs.core.first(ks);
var G__12075 = cljs.core.next(ks);
coll = G__12073;
k = G__12074;
ks = G__12075;
continue;
} else {
return ret;
}
}
break;
}
};
var G__12072 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12076__i = 0, G__12076__a = new Array(arguments.length -  2);
while (G__12076__i < G__12076__a.length) {G__12076__a[G__12076__i] = arguments[G__12076__i + 2]; ++G__12076__i;}
  ks = new cljs.core.IndexedSeq(G__12076__a,0);
} 
return G__12072__delegate.call(this,coll,k,ks);};
G__12072.cljs$lang$maxFixedArity = 2;
G__12072.cljs$lang$applyTo = (function (arglist__12077){
var coll = cljs.core.first(arglist__12077);
arglist__12077 = cljs.core.next(arglist__12077);
var k = cljs.core.first(arglist__12077);
var ks = cljs.core.rest(arglist__12077);
return G__12072__delegate(coll,k,ks);
});
G__12072.cljs$core$IFn$_invoke$arity$variadic = G__12072__delegate;
return G__12072;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__12078 = null;
if (arguments.length > 2) {
var G__12079__i = 0, G__12079__a = new Array(arguments.length -  2);
while (G__12079__i < G__12079__a.length) {G__12079__a[G__12079__i] = arguments[G__12079__i + 2]; ++G__12079__i;}
G__12078 = new cljs.core.IndexedSeq(G__12079__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__12078);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3811__auto__ = (function (){var G__12084 = f;
return goog.isFunction(G__12084);
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__12085 = f;
if(G__12085){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto____$1 = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
return G__12085.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__12085.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__12085);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__12085);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__12551 = null;
var G__12551__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__12551__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12087 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12087) : self__.afn.call(null,G__12087));
});
var G__12551__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12088 = a;
var G__12089 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12088,G__12089) : self__.afn.call(null,G__12088,G__12089));
});
var G__12551__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12090 = a;
var G__12091 = b;
var G__12092 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12090,G__12091,G__12092) : self__.afn.call(null,G__12090,G__12091,G__12092));
});
var G__12551__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12093 = a;
var G__12094 = b;
var G__12095 = c;
var G__12096 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12093,G__12094,G__12095,G__12096) : self__.afn.call(null,G__12093,G__12094,G__12095,G__12096));
});
var G__12551__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12097 = a;
var G__12098 = b;
var G__12099 = c;
var G__12100 = d;
var G__12101 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12097,G__12098,G__12099,G__12100,G__12101) : self__.afn.call(null,G__12097,G__12098,G__12099,G__12100,G__12101));
});
var G__12551__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12102 = a;
var G__12103 = b;
var G__12104 = c;
var G__12105 = d;
var G__12106 = e;
var G__12107 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12102,G__12103,G__12104,G__12105,G__12106,G__12107) : self__.afn.call(null,G__12102,G__12103,G__12104,G__12105,G__12106,G__12107));
});
var G__12551__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12108 = a;
var G__12109 = b;
var G__12110 = c;
var G__12111 = d;
var G__12112 = e;
var G__12113 = f;
var G__12114 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114) : self__.afn.call(null,G__12108,G__12109,G__12110,G__12111,G__12112,G__12113,G__12114));
});
var G__12551__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12115 = a;
var G__12116 = b;
var G__12117 = c;
var G__12118 = d;
var G__12119 = e;
var G__12120 = f;
var G__12121 = g;
var G__12122 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122) : self__.afn.call(null,G__12115,G__12116,G__12117,G__12118,G__12119,G__12120,G__12121,G__12122));
});
var G__12551__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12123 = a;
var G__12124 = b;
var G__12125 = c;
var G__12126 = d;
var G__12127 = e;
var G__12128 = f;
var G__12129 = g;
var G__12130 = h;
var G__12131 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131) : self__.afn.call(null,G__12123,G__12124,G__12125,G__12126,G__12127,G__12128,G__12129,G__12130,G__12131));
});
var G__12551__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12132 = a;
var G__12133 = b;
var G__12134 = c;
var G__12135 = d;
var G__12136 = e;
var G__12137 = f;
var G__12138 = g;
var G__12139 = h;
var G__12140 = i;
var G__12141 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12132,G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141) : self__.afn.call(null,G__12132,G__12133,G__12134,G__12135,G__12136,G__12137,G__12138,G__12139,G__12140,G__12141));
});
var G__12551__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12142 = a;
var G__12143 = b;
var G__12144 = c;
var G__12145 = d;
var G__12146 = e;
var G__12147 = f;
var G__12148 = g;
var G__12149 = h;
var G__12150 = i;
var G__12151 = j;
var G__12152 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152) : self__.afn.call(null,G__12142,G__12143,G__12144,G__12145,G__12146,G__12147,G__12148,G__12149,G__12150,G__12151,G__12152));
});
var G__12551__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12153 = a;
var G__12154 = b;
var G__12155 = c;
var G__12156 = d;
var G__12157 = e;
var G__12158 = f;
var G__12159 = g;
var G__12160 = h;
var G__12161 = i;
var G__12162 = j;
var G__12163 = k;
var G__12164 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160,G__12161,G__12162,G__12163,G__12164) : self__.afn.call(null,G__12153,G__12154,G__12155,G__12156,G__12157,G__12158,G__12159,G__12160,G__12161,G__12162,G__12163,G__12164));
});
var G__12551__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12165 = a;
var G__12166 = b;
var G__12167 = c;
var G__12168 = d;
var G__12169 = e;
var G__12170 = f;
var G__12171 = g;
var G__12172 = h;
var G__12173 = i;
var G__12174 = j;
var G__12175 = k;
var G__12176 = l;
var G__12177 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177) : self__.afn.call(null,G__12165,G__12166,G__12167,G__12168,G__12169,G__12170,G__12171,G__12172,G__12173,G__12174,G__12175,G__12176,G__12177));
});
var G__12551__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12178 = a;
var G__12179 = b;
var G__12180 = c;
var G__12181 = d;
var G__12182 = e;
var G__12183 = f;
var G__12184 = g;
var G__12185 = h;
var G__12186 = i;
var G__12187 = j;
var G__12188 = k;
var G__12189 = l;
var G__12190 = m;
var G__12191 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191) : self__.afn.call(null,G__12178,G__12179,G__12180,G__12181,G__12182,G__12183,G__12184,G__12185,G__12186,G__12187,G__12188,G__12189,G__12190,G__12191));
});
var G__12551__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12192 = a;
var G__12193 = b;
var G__12194 = c;
var G__12195 = d;
var G__12196 = e;
var G__12197 = f;
var G__12198 = g;
var G__12199 = h;
var G__12200 = i;
var G__12201 = j;
var G__12202 = k;
var G__12203 = l;
var G__12204 = m;
var G__12205 = n;
var G__12206 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203,G__12204,G__12205,G__12206) : self__.afn.call(null,G__12192,G__12193,G__12194,G__12195,G__12196,G__12197,G__12198,G__12199,G__12200,G__12201,G__12202,G__12203,G__12204,G__12205,G__12206));
});
var G__12551__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12207 = a;
var G__12208 = b;
var G__12209 = c;
var G__12210 = d;
var G__12211 = e;
var G__12212 = f;
var G__12213 = g;
var G__12214 = h;
var G__12215 = i;
var G__12216 = j;
var G__12217 = k;
var G__12218 = l;
var G__12219 = m;
var G__12220 = n;
var G__12221 = o;
var G__12222 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12207,G__12208,G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218,G__12219,G__12220,G__12221,G__12222) : self__.afn.call(null,G__12207,G__12208,G__12209,G__12210,G__12211,G__12212,G__12213,G__12214,G__12215,G__12216,G__12217,G__12218,G__12219,G__12220,G__12221,G__12222));
});
var G__12551__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12223 = a;
var G__12224 = b;
var G__12225 = c;
var G__12226 = d;
var G__12227 = e;
var G__12228 = f;
var G__12229 = g;
var G__12230 = h;
var G__12231 = i;
var G__12232 = j;
var G__12233 = k;
var G__12234 = l;
var G__12235 = m;
var G__12236 = n;
var G__12237 = o;
var G__12238 = p;
var G__12239 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234,G__12235,G__12236,G__12237,G__12238,G__12239) : self__.afn.call(null,G__12223,G__12224,G__12225,G__12226,G__12227,G__12228,G__12229,G__12230,G__12231,G__12232,G__12233,G__12234,G__12235,G__12236,G__12237,G__12238,G__12239));
});
var G__12551__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12240 = a;
var G__12241 = b;
var G__12242 = c;
var G__12243 = d;
var G__12244 = e;
var G__12245 = f;
var G__12246 = g;
var G__12247 = h;
var G__12248 = i;
var G__12249 = j;
var G__12250 = k;
var G__12251 = l;
var G__12252 = m;
var G__12253 = n;
var G__12254 = o;
var G__12255 = p;
var G__12256 = q;
var G__12257 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249,G__12250,G__12251,G__12252,G__12253,G__12254,G__12255,G__12256,G__12257) : self__.afn.call(null,G__12240,G__12241,G__12242,G__12243,G__12244,G__12245,G__12246,G__12247,G__12248,G__12249,G__12250,G__12251,G__12252,G__12253,G__12254,G__12255,G__12256,G__12257));
});
var G__12551__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12258 = a;
var G__12259 = b;
var G__12260 = c;
var G__12261 = d;
var G__12262 = e;
var G__12263 = f;
var G__12264 = g;
var G__12265 = h;
var G__12266 = i;
var G__12267 = j;
var G__12268 = k;
var G__12269 = l;
var G__12270 = m;
var G__12271 = n;
var G__12272 = o;
var G__12273 = p;
var G__12274 = q;
var G__12275 = r;
var G__12276 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268,G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276) : self__.afn.call(null,G__12258,G__12259,G__12260,G__12261,G__12262,G__12263,G__12264,G__12265,G__12266,G__12267,G__12268,G__12269,G__12270,G__12271,G__12272,G__12273,G__12274,G__12275,G__12276));
});
var G__12551__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12277 = a;
var G__12278 = b;
var G__12279 = c;
var G__12280 = d;
var G__12281 = e;
var G__12282 = f;
var G__12283 = g;
var G__12284 = h;
var G__12285 = i;
var G__12286 = j;
var G__12287 = k;
var G__12288 = l;
var G__12289 = m;
var G__12290 = n;
var G__12291 = o;
var G__12292 = p;
var G__12293 = q;
var G__12294 = r;
var G__12295 = s;
var G__12296 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12277,G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286,G__12287,G__12288,G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296) : self__.afn.call(null,G__12277,G__12278,G__12279,G__12280,G__12281,G__12282,G__12283,G__12284,G__12285,G__12286,G__12287,G__12288,G__12289,G__12290,G__12291,G__12292,G__12293,G__12294,G__12295,G__12296));
});
var G__12551__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__12297 = self__.afn;
var G__12298 = a;
var G__12299 = b;
var G__12300 = c;
var G__12301 = d;
var G__12302 = e;
var G__12303 = f;
var G__12304 = g;
var G__12305 = h;
var G__12306 = i;
var G__12307 = j;
var G__12308 = k;
var G__12309 = l;
var G__12310 = m;
var G__12311 = n;
var G__12312 = o;
var G__12313 = p;
var G__12314 = q;
var G__12315 = r;
var G__12316 = s;
var G__12317 = t;
var G__12318 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12297,G__12298,G__12299,G__12300,G__12301,G__12302,G__12303,G__12304,G__12305,G__12306,G__12307,G__12308,G__12309,G__12310,G__12311,G__12312,G__12313,G__12314,G__12315,G__12316,G__12317,G__12318) : cljs.core.apply.call(null,G__12297,G__12298,G__12299,G__12300,G__12301,G__12302,G__12303,G__12304,G__12305,G__12306,G__12307,G__12308,G__12309,G__12310,G__12311,G__12312,G__12313,G__12314,G__12315,G__12316,G__12317,G__12318));
});
G__12551 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__12551__1.call(this,self__);
case 2:
return G__12551__2.call(this,self__,a);
case 3:
return G__12551__3.call(this,self__,a,b);
case 4:
return G__12551__4.call(this,self__,a,b,c);
case 5:
return G__12551__5.call(this,self__,a,b,c,d);
case 6:
return G__12551__6.call(this,self__,a,b,c,d,e);
case 7:
return G__12551__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__12551__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__12551__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__12551__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__12551__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__12551__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__12551__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__12551__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__12551__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__12551__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__12551__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__12551__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__12551__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__12551__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__12551__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__12551__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12551.cljs$core$IFn$_invoke$arity$1 = G__12551__1;
G__12551.cljs$core$IFn$_invoke$arity$2 = G__12551__2;
G__12551.cljs$core$IFn$_invoke$arity$3 = G__12551__3;
G__12551.cljs$core$IFn$_invoke$arity$4 = G__12551__4;
G__12551.cljs$core$IFn$_invoke$arity$5 = G__12551__5;
G__12551.cljs$core$IFn$_invoke$arity$6 = G__12551__6;
G__12551.cljs$core$IFn$_invoke$arity$7 = G__12551__7;
G__12551.cljs$core$IFn$_invoke$arity$8 = G__12551__8;
G__12551.cljs$core$IFn$_invoke$arity$9 = G__12551__9;
G__12551.cljs$core$IFn$_invoke$arity$10 = G__12551__10;
G__12551.cljs$core$IFn$_invoke$arity$11 = G__12551__11;
G__12551.cljs$core$IFn$_invoke$arity$12 = G__12551__12;
G__12551.cljs$core$IFn$_invoke$arity$13 = G__12551__13;
G__12551.cljs$core$IFn$_invoke$arity$14 = G__12551__14;
G__12551.cljs$core$IFn$_invoke$arity$15 = G__12551__15;
G__12551.cljs$core$IFn$_invoke$arity$16 = G__12551__16;
G__12551.cljs$core$IFn$_invoke$arity$17 = G__12551__17;
G__12551.cljs$core$IFn$_invoke$arity$18 = G__12551__18;
G__12551.cljs$core$IFn$_invoke$arity$19 = G__12551__19;
G__12551.cljs$core$IFn$_invoke$arity$20 = G__12551__20;
G__12551.cljs$core$IFn$_invoke$arity$21 = G__12551__21;
G__12551.cljs$core$IFn$_invoke$arity$22 = G__12551__22;
return G__12551;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args12086){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12086)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__12319 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__12319) : self__.afn.call(null,G__12319));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__12320 = a;
var G__12321 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__12320,G__12321) : self__.afn.call(null,G__12320,G__12321));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__12322 = a;
var G__12323 = b;
var G__12324 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__12322,G__12323,G__12324) : self__.afn.call(null,G__12322,G__12323,G__12324));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__12325 = a;
var G__12326 = b;
var G__12327 = c;
var G__12328 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__12325,G__12326,G__12327,G__12328) : self__.afn.call(null,G__12325,G__12326,G__12327,G__12328));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__12329 = a;
var G__12330 = b;
var G__12331 = c;
var G__12332 = d;
var G__12333 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__12329,G__12330,G__12331,G__12332,G__12333) : self__.afn.call(null,G__12329,G__12330,G__12331,G__12332,G__12333));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__12334 = a;
var G__12335 = b;
var G__12336 = c;
var G__12337 = d;
var G__12338 = e;
var G__12339 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__12334,G__12335,G__12336,G__12337,G__12338,G__12339) : self__.afn.call(null,G__12334,G__12335,G__12336,G__12337,G__12338,G__12339));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__12340 = a;
var G__12341 = b;
var G__12342 = c;
var G__12343 = d;
var G__12344 = e;
var G__12345 = f;
var G__12346 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__12340,G__12341,G__12342,G__12343,G__12344,G__12345,G__12346) : self__.afn.call(null,G__12340,G__12341,G__12342,G__12343,G__12344,G__12345,G__12346));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__12347 = a;
var G__12348 = b;
var G__12349 = c;
var G__12350 = d;
var G__12351 = e;
var G__12352 = f;
var G__12353 = g;
var G__12354 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__12347,G__12348,G__12349,G__12350,G__12351,G__12352,G__12353,G__12354) : self__.afn.call(null,G__12347,G__12348,G__12349,G__12350,G__12351,G__12352,G__12353,G__12354));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__12355 = a;
var G__12356 = b;
var G__12357 = c;
var G__12358 = d;
var G__12359 = e;
var G__12360 = f;
var G__12361 = g;
var G__12362 = h;
var G__12363 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__12355,G__12356,G__12357,G__12358,G__12359,G__12360,G__12361,G__12362,G__12363) : self__.afn.call(null,G__12355,G__12356,G__12357,G__12358,G__12359,G__12360,G__12361,G__12362,G__12363));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__12364 = a;
var G__12365 = b;
var G__12366 = c;
var G__12367 = d;
var G__12368 = e;
var G__12369 = f;
var G__12370 = g;
var G__12371 = h;
var G__12372 = i;
var G__12373 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__12364,G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371,G__12372,G__12373) : self__.afn.call(null,G__12364,G__12365,G__12366,G__12367,G__12368,G__12369,G__12370,G__12371,G__12372,G__12373));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__12374 = a;
var G__12375 = b;
var G__12376 = c;
var G__12377 = d;
var G__12378 = e;
var G__12379 = f;
var G__12380 = g;
var G__12381 = h;
var G__12382 = i;
var G__12383 = j;
var G__12384 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__12374,G__12375,G__12376,G__12377,G__12378,G__12379,G__12380,G__12381,G__12382,G__12383,G__12384) : self__.afn.call(null,G__12374,G__12375,G__12376,G__12377,G__12378,G__12379,G__12380,G__12381,G__12382,G__12383,G__12384));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__12385 = a;
var G__12386 = b;
var G__12387 = c;
var G__12388 = d;
var G__12389 = e;
var G__12390 = f;
var G__12391 = g;
var G__12392 = h;
var G__12393 = i;
var G__12394 = j;
var G__12395 = k;
var G__12396 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__12385,G__12386,G__12387,G__12388,G__12389,G__12390,G__12391,G__12392,G__12393,G__12394,G__12395,G__12396) : self__.afn.call(null,G__12385,G__12386,G__12387,G__12388,G__12389,G__12390,G__12391,G__12392,G__12393,G__12394,G__12395,G__12396));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__12397 = a;
var G__12398 = b;
var G__12399 = c;
var G__12400 = d;
var G__12401 = e;
var G__12402 = f;
var G__12403 = g;
var G__12404 = h;
var G__12405 = i;
var G__12406 = j;
var G__12407 = k;
var G__12408 = l;
var G__12409 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__12397,G__12398,G__12399,G__12400,G__12401,G__12402,G__12403,G__12404,G__12405,G__12406,G__12407,G__12408,G__12409) : self__.afn.call(null,G__12397,G__12398,G__12399,G__12400,G__12401,G__12402,G__12403,G__12404,G__12405,G__12406,G__12407,G__12408,G__12409));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__12410 = a;
var G__12411 = b;
var G__12412 = c;
var G__12413 = d;
var G__12414 = e;
var G__12415 = f;
var G__12416 = g;
var G__12417 = h;
var G__12418 = i;
var G__12419 = j;
var G__12420 = k;
var G__12421 = l;
var G__12422 = m;
var G__12423 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__12410,G__12411,G__12412,G__12413,G__12414,G__12415,G__12416,G__12417,G__12418,G__12419,G__12420,G__12421,G__12422,G__12423) : self__.afn.call(null,G__12410,G__12411,G__12412,G__12413,G__12414,G__12415,G__12416,G__12417,G__12418,G__12419,G__12420,G__12421,G__12422,G__12423));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__12424 = a;
var G__12425 = b;
var G__12426 = c;
var G__12427 = d;
var G__12428 = e;
var G__12429 = f;
var G__12430 = g;
var G__12431 = h;
var G__12432 = i;
var G__12433 = j;
var G__12434 = k;
var G__12435 = l;
var G__12436 = m;
var G__12437 = n;
var G__12438 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__12424,G__12425,G__12426,G__12427,G__12428,G__12429,G__12430,G__12431,G__12432,G__12433,G__12434,G__12435,G__12436,G__12437,G__12438) : self__.afn.call(null,G__12424,G__12425,G__12426,G__12427,G__12428,G__12429,G__12430,G__12431,G__12432,G__12433,G__12434,G__12435,G__12436,G__12437,G__12438));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__12439 = a;
var G__12440 = b;
var G__12441 = c;
var G__12442 = d;
var G__12443 = e;
var G__12444 = f;
var G__12445 = g;
var G__12446 = h;
var G__12447 = i;
var G__12448 = j;
var G__12449 = k;
var G__12450 = l;
var G__12451 = m;
var G__12452 = n;
var G__12453 = o;
var G__12454 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__12439,G__12440,G__12441,G__12442,G__12443,G__12444,G__12445,G__12446,G__12447,G__12448,G__12449,G__12450,G__12451,G__12452,G__12453,G__12454) : self__.afn.call(null,G__12439,G__12440,G__12441,G__12442,G__12443,G__12444,G__12445,G__12446,G__12447,G__12448,G__12449,G__12450,G__12451,G__12452,G__12453,G__12454));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__12455 = a;
var G__12456 = b;
var G__12457 = c;
var G__12458 = d;
var G__12459 = e;
var G__12460 = f;
var G__12461 = g;
var G__12462 = h;
var G__12463 = i;
var G__12464 = j;
var G__12465 = k;
var G__12466 = l;
var G__12467 = m;
var G__12468 = n;
var G__12469 = o;
var G__12470 = p;
var G__12471 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__12455,G__12456,G__12457,G__12458,G__12459,G__12460,G__12461,G__12462,G__12463,G__12464,G__12465,G__12466,G__12467,G__12468,G__12469,G__12470,G__12471) : self__.afn.call(null,G__12455,G__12456,G__12457,G__12458,G__12459,G__12460,G__12461,G__12462,G__12463,G__12464,G__12465,G__12466,G__12467,G__12468,G__12469,G__12470,G__12471));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__12472 = a;
var G__12473 = b;
var G__12474 = c;
var G__12475 = d;
var G__12476 = e;
var G__12477 = f;
var G__12478 = g;
var G__12479 = h;
var G__12480 = i;
var G__12481 = j;
var G__12482 = k;
var G__12483 = l;
var G__12484 = m;
var G__12485 = n;
var G__12486 = o;
var G__12487 = p;
var G__12488 = q;
var G__12489 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479,G__12480,G__12481,G__12482,G__12483,G__12484,G__12485,G__12486,G__12487,G__12488,G__12489) : self__.afn.call(null,G__12472,G__12473,G__12474,G__12475,G__12476,G__12477,G__12478,G__12479,G__12480,G__12481,G__12482,G__12483,G__12484,G__12485,G__12486,G__12487,G__12488,G__12489));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__12490 = a;
var G__12491 = b;
var G__12492 = c;
var G__12493 = d;
var G__12494 = e;
var G__12495 = f;
var G__12496 = g;
var G__12497 = h;
var G__12498 = i;
var G__12499 = j;
var G__12500 = k;
var G__12501 = l;
var G__12502 = m;
var G__12503 = n;
var G__12504 = o;
var G__12505 = p;
var G__12506 = q;
var G__12507 = r;
var G__12508 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__12490,G__12491,G__12492,G__12493,G__12494,G__12495,G__12496,G__12497,G__12498,G__12499,G__12500,G__12501,G__12502,G__12503,G__12504,G__12505,G__12506,G__12507,G__12508) : self__.afn.call(null,G__12490,G__12491,G__12492,G__12493,G__12494,G__12495,G__12496,G__12497,G__12498,G__12499,G__12500,G__12501,G__12502,G__12503,G__12504,G__12505,G__12506,G__12507,G__12508));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__12509 = a;
var G__12510 = b;
var G__12511 = c;
var G__12512 = d;
var G__12513 = e;
var G__12514 = f;
var G__12515 = g;
var G__12516 = h;
var G__12517 = i;
var G__12518 = j;
var G__12519 = k;
var G__12520 = l;
var G__12521 = m;
var G__12522 = n;
var G__12523 = o;
var G__12524 = p;
var G__12525 = q;
var G__12526 = r;
var G__12527 = s;
var G__12528 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__12509,G__12510,G__12511,G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519,G__12520,G__12521,G__12522,G__12523,G__12524,G__12525,G__12526,G__12527,G__12528) : self__.afn.call(null,G__12509,G__12510,G__12511,G__12512,G__12513,G__12514,G__12515,G__12516,G__12517,G__12518,G__12519,G__12520,G__12521,G__12522,G__12523,G__12524,G__12525,G__12526,G__12527,G__12528));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__12529 = self__.afn;
var G__12530 = a;
var G__12531 = b;
var G__12532 = c;
var G__12533 = d;
var G__12534 = e;
var G__12535 = f;
var G__12536 = g;
var G__12537 = h;
var G__12538 = i;
var G__12539 = j;
var G__12540 = k;
var G__12541 = l;
var G__12542 = m;
var G__12543 = n;
var G__12544 = o;
var G__12545 = p;
var G__12546 = q;
var G__12547 = r;
var G__12548 = s;
var G__12549 = t;
var G__12550 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__12529,G__12530,G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537,G__12538,G__12539,G__12540,G__12541,G__12542,G__12543,G__12544,G__12545,G__12546,G__12547,G__12548,G__12549,G__12550) : cljs.core.apply.call(null,G__12529,G__12530,G__12531,G__12532,G__12533,G__12534,G__12535,G__12536,G__12537,G__12538,G__12539,G__12540,G__12541,G__12542,G__12543,G__12544,G__12545,G__12546,G__12547,G__12548,G__12549,G__12550));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__12555 = o;
if(G__12555){
var bit__4492__auto__ = (G__12555.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4492__auto__) || (G__12555.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__12555.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12555);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__12555);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3799__auto__ = !((o == null));
if(and__3799__auto__){
var G__12559 = o;
if(G__12559){
var bit__4492__auto__ = (G__12559.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4492__auto__) || (G__12559.cljs$core$IMeta$)){
return true;
} else {
if((!G__12559.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12559);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__12559);
}
} else {
return and__3799__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__12562__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__12563 = ret;
var G__12564 = cljs.core.first(ks);
var G__12565 = cljs.core.next(ks);
coll = G__12563;
k = G__12564;
ks = G__12565;
continue;
} else {
return ret;
}
}
break;
}
};
var G__12562 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__12566__i = 0, G__12566__a = new Array(arguments.length -  2);
while (G__12566__i < G__12566__a.length) {G__12566__a[G__12566__i] = arguments[G__12566__i + 2]; ++G__12566__i;}
  ks = new cljs.core.IndexedSeq(G__12566__a,0);
} 
return G__12562__delegate.call(this,coll,k,ks);};
G__12562.cljs$lang$maxFixedArity = 2;
G__12562.cljs$lang$applyTo = (function (arglist__12567){
var coll = cljs.core.first(arglist__12567);
arglist__12567 = cljs.core.next(arglist__12567);
var k = cljs.core.first(arglist__12567);
var ks = cljs.core.rest(arglist__12567);
return G__12562__delegate(coll,k,ks);
});
G__12562.cljs$core$IFn$_invoke$arity$variadic = G__12562__delegate;
return G__12562;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__12568 = null;
if (arguments.length > 2) {
var G__12569__i = 0, G__12569__a = new Array(arguments.length -  2);
while (G__12569__i < G__12569__a.length) {G__12569__a[G__12569__i] = arguments[G__12569__i + 2]; ++G__12569__i;}
G__12568 = new cljs.core.IndexedSeq(G__12569__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__12568);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12571 = x;
if(G__12571){
var bit__4492__auto__ = (G__12571.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4492__auto__) || (G__12571.cljs$core$ICollection$)){
return true;
} else {
if((!G__12571.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12571);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__12571);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12573 = x;
if(G__12573){
var bit__4492__auto__ = (G__12573.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4492__auto__) || (G__12573.cljs$core$ISet$)){
return true;
} else {
if((!G__12573.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12573);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__12573);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__12575 = x;
if(G__12575){
var bit__4492__auto__ = (G__12575.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4492__auto__) || (G__12575.cljs$core$IAssociative$)){
return true;
} else {
if((!G__12575.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12575);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__12575);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__12577 = x;
if(G__12577){
var bit__4492__auto__ = (G__12577.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4492__auto__) || (G__12577.cljs$core$ISequential$)){
return true;
} else {
if((!G__12577.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12577);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__12577);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__12579 = x;
if(G__12579){
var bit__4492__auto__ = (G__12579.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4492__auto__) || (G__12579.cljs$core$ISorted$)){
return true;
} else {
if((!G__12579.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12579);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__12579);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__12581 = x;
if(G__12581){
var bit__4492__auto__ = (G__12581.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4492__auto__) || (G__12581.cljs$core$IReduce$)){
return true;
} else {
if((!G__12581.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12581);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__12581);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__12583 = x;
if(G__12583){
var bit__4492__auto__ = (G__12583.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4492__auto__) || (G__12583.cljs$core$IMap$)){
return true;
} else {
if((!G__12583.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12583);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__12583);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__12585 = x;
if(G__12585){
var bit__4492__auto__ = (G__12585.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4492__auto__) || (G__12585.cljs$core$IVector$)){
return true;
} else {
if((!G__12585.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12585);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__12585);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__12587 = x;
if(G__12587){
var bit__4485__auto__ = (G__12587.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4485__auto__) || (G__12587.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj12593 = {};
return obj12593;
});
var js_obj__1 = (function() { 
var G__12596__delegate = function (keyvals){
var G__12594 = goog.object.create;
var G__12595 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__12594,G__12595) : cljs.core.apply.call(null,G__12594,G__12595));
};
var G__12596 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__12597__i = 0, G__12597__a = new Array(arguments.length -  0);
while (G__12597__i < G__12597__a.length) {G__12597__a[G__12597__i] = arguments[G__12597__i + 0]; ++G__12597__i;}
  keyvals = new cljs.core.IndexedSeq(G__12597__a,0);
} 
return G__12596__delegate.call(this,keyvals);};
G__12596.cljs$lang$maxFixedArity = 0;
G__12596.cljs$lang$applyTo = (function (arglist__12598){
var keyvals = cljs.core.seq(arglist__12598);
return G__12596__delegate(keyvals);
});
G__12596.cljs$core$IFn$_invoke$arity$variadic = G__12596__delegate;
return G__12596;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__12599 = null;
if (arguments.length > 0) {
var G__12600__i = 0, G__12600__a = new Array(arguments.length -  0);
while (G__12600__i < G__12600__a.length) {G__12600__a[G__12600__i] = arguments[G__12600__i + 0]; ++G__12600__i;}
G__12599 = new cljs.core.IndexedSeq(G__12600__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__12599);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__12603_12605 = obj;
var G__12604_12606 = ((function (G__12603_12605,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__12603_12605,keys))
;
goog.object.forEach(G__12603_12605,G__12604_12606);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12607 = (i__$1 + (1));
var G__12608 = (j__$1 + (1));
var G__12609 = (len__$1 - (1));
i__$1 = G__12607;
j__$1 = G__12608;
len__$1 = G__12609;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__12610 = (i__$1 - (1));
var G__12611 = (j__$1 - (1));
var G__12612 = (len__$1 - (1));
i__$1 = G__12610;
j__$1 = G__12611;
len__$1 = G__12612;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj12614 = {};
return obj12614;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__12616 = s;
if(G__12616){
var bit__4492__auto__ = (G__12616.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4492__auto__) || (G__12616.cljs$core$ISeq$)){
return true;
} else {
if((!G__12616.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12616);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__12616);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__12618 = s;
if(G__12618){
var bit__4492__auto__ = (G__12618.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4492__auto__) || (G__12618.cljs$core$ISeqable$)){
return true;
} else {
if((!G__12618.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12618);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__12618);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3811__auto__ = cljs.core.fn_QMARK_(f);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var G__12622 = f;
if(G__12622){
var bit__4492__auto__ = (G__12622.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4492__auto__) || (G__12622.cljs$core$IFn$)){
return true;
} else {
if((!G__12622.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12622);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__12622);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__12635 = n;
return isNaN(G__12635);
})())) && (!((n === Infinity))) && (((function (){var G__12636 = n;
return parseFloat(G__12636);
})() === (function (){var G__12637 = n;
var G__12638 = (10);
return parseInt(G__12637,G__12638);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__12639__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__12640 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__12641 = etc;
s = G__12640;
xs = G__12641;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__12639 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12642__i = 0, G__12642__a = new Array(arguments.length -  2);
while (G__12642__i < G__12642__a.length) {G__12642__a[G__12642__i] = arguments[G__12642__i + 2]; ++G__12642__i;}
  more = new cljs.core.IndexedSeq(G__12642__a,0);
} 
return G__12639__delegate.call(this,x,y,more);};
G__12639.cljs$lang$maxFixedArity = 2;
G__12639.cljs$lang$applyTo = (function (arglist__12643){
var x = cljs.core.first(arglist__12643);
arglist__12643 = cljs.core.next(arglist__12643);
var y = cljs.core.first(arglist__12643);
var more = cljs.core.rest(arglist__12643);
return G__12639__delegate(x,y,more);
});
G__12639.cljs$core$IFn$_invoke$arity$variadic = G__12639__delegate;
return G__12639;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__12644 = null;
if (arguments.length > 2) {
var G__12645__i = 0, G__12645__a = new Array(arguments.length -  2);
while (G__12645__i < G__12645__a.length) {G__12645__a[G__12645__i] = arguments[G__12645__i + 2]; ++G__12645__i;}
G__12644 = new cljs.core.IndexedSeq(G__12645__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12644);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__12649 = x;
if(G__12649){
var bit__4485__auto__ = (G__12649.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4485__auto__) || (G__12649.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__12650 = x;
var G__12651 = y;
return goog.array.defaultCompare(G__12650,G__12651);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__12656 = xs;
var G__12657 = ys;
var G__12658 = len;
var G__12659 = (n + (1));
xs = G__12656;
ys = G__12657;
len = G__12658;
n = G__12659;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__12664 = x;
var G__12665 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12664,G__12665) : f.call(null,G__12664,G__12665));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__12666 = y;
var G__12667 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12666,G__12667) : f.call(null,G__12666,G__12667));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__12673 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12673) : cljs.core.to_array.call(null,G__12673));
})();
var G__12674_12676 = a;
var G__12675_12677 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__12674_12676,G__12675_12677);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__12683 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12683) : keyfn.call(null,G__12683));
})(),(function (){var G__12684 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__12684) : keyfn.call(null,G__12684));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__12690 = f;
var G__12691 = cljs.core.first(s);
var G__12692 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__12690,G__12691,G__12692) : cljs.core.reduce.call(null,G__12690,G__12691,G__12692));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__12693 = val__$1;
var G__12694 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12693,G__12694) : f.call(null,G__12693,G__12694));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__12695 = nval;
var G__12696 = cljs.core.next(coll__$1);
val__$1 = G__12695;
coll__$1 = G__12696;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__12700 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__12700) : cljs.core.to_array.call(null,G__12700));
})();
var G__12701_12703 = a;
goog.array.shuffle(G__12701_12703);

var G__12702 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__12702) : cljs.core.vec.call(null,G__12702));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__12706 = coll;
if(G__12706){
var bit__4485__auto__ = (G__12706.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4485__auto__) || (G__12706.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__12707 = coll;
if(G__12707){
var bit__4485__auto__ = (G__12707.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4485__auto__) || (G__12707.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__12716 = null;
var G__12716__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__12716__1 = (function (x){
var G__12713 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__12713) : cf.call(null,G__12713));
});
var G__12716__2 = (function (x,y){
var G__12714 = x;
var G__12715 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12714,G__12715) : f.call(null,G__12714,G__12715));
});
G__12716 = function(x,y){
switch(arguments.length){
case 0:
return G__12716__0.call(this);
case 1:
return G__12716__1.call(this,x);
case 2:
return G__12716__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12716.cljs$core$IFn$_invoke$arity$0 = G__12716__0;
G__12716.cljs$core$IFn$_invoke$arity$1 = G__12716__1;
G__12716.cljs$core$IFn$_invoke$arity$2 = G__12716__2;
return G__12716;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__12723 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12723) : xform.call(null,G__12723));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__12724 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__12724) : f__$1.call(null,G__12724));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__12725__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__12725 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12726__i = 0, G__12726__a = new Array(arguments.length -  2);
while (G__12726__i < G__12726__a.length) {G__12726__a[G__12726__i] = arguments[G__12726__i + 2]; ++G__12726__i;}
  more = new cljs.core.IndexedSeq(G__12726__a,0);
} 
return G__12725__delegate.call(this,x,y,more);};
G__12725.cljs$lang$maxFixedArity = 2;
G__12725.cljs$lang$applyTo = (function (arglist__12727){
var x = cljs.core.first(arglist__12727);
arglist__12727 = cljs.core.next(arglist__12727);
var y = cljs.core.first(arglist__12727);
var more = cljs.core.rest(arglist__12727);
return G__12725__delegate(x,y,more);
});
G__12725.cljs$core$IFn$_invoke$arity$variadic = G__12725__delegate;
return G__12725;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__12728 = null;
if (arguments.length > 2) {
var G__12729__i = 0, G__12729__a = new Array(arguments.length -  2);
while (G__12729__i < G__12729__a.length) {G__12729__a[G__12729__i] = arguments[G__12729__i + 2]; ++G__12729__i;}
G__12728 = new cljs.core.IndexedSeq(G__12729__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12728);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__12730__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__12730 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12731__i = 0, G__12731__a = new Array(arguments.length -  2);
while (G__12731__i < G__12731__a.length) {G__12731__a[G__12731__i] = arguments[G__12731__i + 2]; ++G__12731__i;}
  more = new cljs.core.IndexedSeq(G__12731__a,0);
} 
return G__12730__delegate.call(this,x,y,more);};
G__12730.cljs$lang$maxFixedArity = 2;
G__12730.cljs$lang$applyTo = (function (arglist__12732){
var x = cljs.core.first(arglist__12732);
arglist__12732 = cljs.core.next(arglist__12732);
var y = cljs.core.first(arglist__12732);
var more = cljs.core.rest(arglist__12732);
return G__12730__delegate(x,y,more);
});
G__12730.cljs$core$IFn$_invoke$arity$variadic = G__12730__delegate;
return G__12730;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__12733 = null;
if (arguments.length > 2) {
var G__12734__i = 0, G__12734__a = new Array(arguments.length -  2);
while (G__12734__i < G__12734__a.length) {G__12734__a[G__12734__i] = arguments[G__12734__i + 2]; ++G__12734__i;}
G__12733 = new cljs.core.IndexedSeq(G__12734__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12733);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__12735__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__12735 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12736__i = 0, G__12736__a = new Array(arguments.length -  2);
while (G__12736__i < G__12736__a.length) {G__12736__a[G__12736__i] = arguments[G__12736__i + 2]; ++G__12736__i;}
  more = new cljs.core.IndexedSeq(G__12736__a,0);
} 
return G__12735__delegate.call(this,x,y,more);};
G__12735.cljs$lang$maxFixedArity = 2;
G__12735.cljs$lang$applyTo = (function (arglist__12737){
var x = cljs.core.first(arglist__12737);
arglist__12737 = cljs.core.next(arglist__12737);
var y = cljs.core.first(arglist__12737);
var more = cljs.core.rest(arglist__12737);
return G__12735__delegate(x,y,more);
});
G__12735.cljs$core$IFn$_invoke$arity$variadic = G__12735__delegate;
return G__12735;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__12738 = null;
if (arguments.length > 2) {
var G__12739__i = 0, G__12739__a = new Array(arguments.length -  2);
while (G__12739__i < G__12739__a.length) {G__12739__a[G__12739__i] = arguments[G__12739__i + 2]; ++G__12739__i;}
G__12738 = new cljs.core.IndexedSeq(G__12739__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12738);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__12744__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__12744 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12745__i = 0, G__12745__a = new Array(arguments.length -  2);
while (G__12745__i < G__12745__a.length) {G__12745__a[G__12745__i] = arguments[G__12745__i + 2]; ++G__12745__i;}
  more = new cljs.core.IndexedSeq(G__12745__a,0);
} 
return G__12744__delegate.call(this,x,y,more);};
G__12744.cljs$lang$maxFixedArity = 2;
G__12744.cljs$lang$applyTo = (function (arglist__12746){
var x = cljs.core.first(arglist__12746);
arglist__12746 = cljs.core.next(arglist__12746);
var y = cljs.core.first(arglist__12746);
var more = cljs.core.rest(arglist__12746);
return G__12744__delegate(x,y,more);
});
G__12744.cljs$core$IFn$_invoke$arity$variadic = G__12744__delegate;
return G__12744;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__12747 = null;
if (arguments.length > 2) {
var G__12748__i = 0, G__12748__a = new Array(arguments.length -  2);
while (G__12748__i < G__12748__a.length) {G__12748__a[G__12748__i] = arguments[G__12748__i + 2]; ++G__12748__i;}
G__12747 = new cljs.core.IndexedSeq(G__12748__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12747);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__12749__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__12750 = y;
var G__12751 = cljs.core.first(more);
var G__12752 = cljs.core.next(more);
x = G__12750;
y = G__12751;
more = G__12752;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12749 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12753__i = 0, G__12753__a = new Array(arguments.length -  2);
while (G__12753__i < G__12753__a.length) {G__12753__a[G__12753__i] = arguments[G__12753__i + 2]; ++G__12753__i;}
  more = new cljs.core.IndexedSeq(G__12753__a,0);
} 
return G__12749__delegate.call(this,x,y,more);};
G__12749.cljs$lang$maxFixedArity = 2;
G__12749.cljs$lang$applyTo = (function (arglist__12754){
var x = cljs.core.first(arglist__12754);
arglist__12754 = cljs.core.next(arglist__12754);
var y = cljs.core.first(arglist__12754);
var more = cljs.core.rest(arglist__12754);
return G__12749__delegate(x,y,more);
});
G__12749.cljs$core$IFn$_invoke$arity$variadic = G__12749__delegate;
return G__12749;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__12755 = null;
if (arguments.length > 2) {
var G__12756__i = 0, G__12756__a = new Array(arguments.length -  2);
while (G__12756__i < G__12756__a.length) {G__12756__a[G__12756__i] = arguments[G__12756__i + 2]; ++G__12756__i;}
G__12755 = new cljs.core.IndexedSeq(G__12756__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12755);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__12757__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__12758 = y;
var G__12759 = cljs.core.first(more);
var G__12760 = cljs.core.next(more);
x = G__12758;
y = G__12759;
more = G__12760;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12757 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12761__i = 0, G__12761__a = new Array(arguments.length -  2);
while (G__12761__i < G__12761__a.length) {G__12761__a[G__12761__i] = arguments[G__12761__i + 2]; ++G__12761__i;}
  more = new cljs.core.IndexedSeq(G__12761__a,0);
} 
return G__12757__delegate.call(this,x,y,more);};
G__12757.cljs$lang$maxFixedArity = 2;
G__12757.cljs$lang$applyTo = (function (arglist__12762){
var x = cljs.core.first(arglist__12762);
arglist__12762 = cljs.core.next(arglist__12762);
var y = cljs.core.first(arglist__12762);
var more = cljs.core.rest(arglist__12762);
return G__12757__delegate(x,y,more);
});
G__12757.cljs$core$IFn$_invoke$arity$variadic = G__12757__delegate;
return G__12757;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__12763 = null;
if (arguments.length > 2) {
var G__12764__i = 0, G__12764__a = new Array(arguments.length -  2);
while (G__12764__i < G__12764__a.length) {G__12764__a[G__12764__i] = arguments[G__12764__i + 2]; ++G__12764__i;}
G__12763 = new cljs.core.IndexedSeq(G__12764__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12763);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__12765__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__12766 = y;
var G__12767 = cljs.core.first(more);
var G__12768 = cljs.core.next(more);
x = G__12766;
y = G__12767;
more = G__12768;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12765 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12769__i = 0, G__12769__a = new Array(arguments.length -  2);
while (G__12769__i < G__12769__a.length) {G__12769__a[G__12769__i] = arguments[G__12769__i + 2]; ++G__12769__i;}
  more = new cljs.core.IndexedSeq(G__12769__a,0);
} 
return G__12765__delegate.call(this,x,y,more);};
G__12765.cljs$lang$maxFixedArity = 2;
G__12765.cljs$lang$applyTo = (function (arglist__12770){
var x = cljs.core.first(arglist__12770);
arglist__12770 = cljs.core.next(arglist__12770);
var y = cljs.core.first(arglist__12770);
var more = cljs.core.rest(arglist__12770);
return G__12765__delegate(x,y,more);
});
G__12765.cljs$core$IFn$_invoke$arity$variadic = G__12765__delegate;
return G__12765;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__12771 = null;
if (arguments.length > 2) {
var G__12772__i = 0, G__12772__a = new Array(arguments.length -  2);
while (G__12772__i < G__12772__a.length) {G__12772__a[G__12772__i] = arguments[G__12772__i + 2]; ++G__12772__i;}
G__12771 = new cljs.core.IndexedSeq(G__12772__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12771);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__12773__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__12774 = y;
var G__12775 = cljs.core.first(more);
var G__12776 = cljs.core.next(more);
x = G__12774;
y = G__12775;
more = G__12776;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12773 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12777__i = 0, G__12777__a = new Array(arguments.length -  2);
while (G__12777__i < G__12777__a.length) {G__12777__a[G__12777__i] = arguments[G__12777__i + 2]; ++G__12777__i;}
  more = new cljs.core.IndexedSeq(G__12777__a,0);
} 
return G__12773__delegate.call(this,x,y,more);};
G__12773.cljs$lang$maxFixedArity = 2;
G__12773.cljs$lang$applyTo = (function (arglist__12778){
var x = cljs.core.first(arglist__12778);
arglist__12778 = cljs.core.next(arglist__12778);
var y = cljs.core.first(arglist__12778);
var more = cljs.core.rest(arglist__12778);
return G__12773__delegate(x,y,more);
});
G__12773.cljs$core$IFn$_invoke$arity$variadic = G__12773__delegate;
return G__12773;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__12779 = null;
if (arguments.length > 2) {
var G__12780__i = 0, G__12780__a = new Array(arguments.length -  2);
while (G__12780__i < G__12780__a.length) {G__12780__a[G__12780__i] = arguments[G__12780__i + 2]; ++G__12780__i;}
G__12779 = new cljs.core.IndexedSeq(G__12780__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12779);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4128__auto__ = x;
var y__4129__auto__ = y;
return ((x__4128__auto__ > y__4129__auto__) ? x__4128__auto__ : y__4129__auto__);
});
var max__3 = (function() { 
var G__12781__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4128__auto__ = x;
var y__4129__auto__ = y;
return ((x__4128__auto__ > y__4129__auto__) ? x__4128__auto__ : y__4129__auto__);
})(),more);
};
var G__12781 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12782__i = 0, G__12782__a = new Array(arguments.length -  2);
while (G__12782__i < G__12782__a.length) {G__12782__a[G__12782__i] = arguments[G__12782__i + 2]; ++G__12782__i;}
  more = new cljs.core.IndexedSeq(G__12782__a,0);
} 
return G__12781__delegate.call(this,x,y,more);};
G__12781.cljs$lang$maxFixedArity = 2;
G__12781.cljs$lang$applyTo = (function (arglist__12783){
var x = cljs.core.first(arglist__12783);
arglist__12783 = cljs.core.next(arglist__12783);
var y = cljs.core.first(arglist__12783);
var more = cljs.core.rest(arglist__12783);
return G__12781__delegate(x,y,more);
});
G__12781.cljs$core$IFn$_invoke$arity$variadic = G__12781__delegate;
return G__12781;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__12784 = null;
if (arguments.length > 2) {
var G__12785__i = 0, G__12785__a = new Array(arguments.length -  2);
while (G__12785__i < G__12785__a.length) {G__12785__a[G__12785__i] = arguments[G__12785__i + 2]; ++G__12785__i;}
G__12784 = new cljs.core.IndexedSeq(G__12785__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12784);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4135__auto__ = x;
var y__4136__auto__ = y;
return ((x__4135__auto__ < y__4136__auto__) ? x__4135__auto__ : y__4136__auto__);
});
var min__3 = (function() { 
var G__12786__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4135__auto__ = x;
var y__4136__auto__ = y;
return ((x__4135__auto__ < y__4136__auto__) ? x__4135__auto__ : y__4136__auto__);
})(),more);
};
var G__12786 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12787__i = 0, G__12787__a = new Array(arguments.length -  2);
while (G__12787__i < G__12787__a.length) {G__12787__a[G__12787__i] = arguments[G__12787__i + 2]; ++G__12787__i;}
  more = new cljs.core.IndexedSeq(G__12787__a,0);
} 
return G__12786__delegate.call(this,x,y,more);};
G__12786.cljs$lang$maxFixedArity = 2;
G__12786.cljs$lang$applyTo = (function (arglist__12788){
var x = cljs.core.first(arglist__12788);
arglist__12788 = cljs.core.next(arglist__12788);
var y = cljs.core.first(arglist__12788);
var more = cljs.core.rest(arglist__12788);
return G__12786__delegate(x,y,more);
});
G__12786.cljs$core$IFn$_invoke$arity$variadic = G__12786__delegate;
return G__12786;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__12789 = null;
if (arguments.length > 2) {
var G__12790__i = 0, G__12790__a = new Array(arguments.length -  2);
while (G__12790__i < G__12790__a.length) {G__12790__a[G__12790__i] = arguments[G__12790__i + 2]; ++G__12790__i;}
G__12789 = new cljs.core.IndexedSeq(G__12790__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12789);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__12791__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__12791 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12792__i = 0, G__12792__a = new Array(arguments.length -  2);
while (G__12792__i < G__12792__a.length) {G__12792__a[G__12792__i] = arguments[G__12792__i + 2]; ++G__12792__i;}
  more = new cljs.core.IndexedSeq(G__12792__a,0);
} 
return G__12791__delegate.call(this,x,y,more);};
G__12791.cljs$lang$maxFixedArity = 2;
G__12791.cljs$lang$applyTo = (function (arglist__12793){
var x = cljs.core.first(arglist__12793);
arglist__12793 = cljs.core.next(arglist__12793);
var y = cljs.core.first(arglist__12793);
var more = cljs.core.rest(arglist__12793);
return G__12791__delegate(x,y,more);
});
G__12791.cljs$core$IFn$_invoke$arity$variadic = G__12791__delegate;
return G__12791;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__12794 = null;
if (arguments.length > 2) {
var G__12795__i = 0, G__12795__a = new Array(arguments.length -  2);
while (G__12795__i < G__12795__a.length) {G__12795__a[G__12795__i] = arguments[G__12795__i + 2]; ++G__12795__i;}
G__12794 = new cljs.core.IndexedSeq(G__12795__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12794);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__12796__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__12796 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12797__i = 0, G__12797__a = new Array(arguments.length -  2);
while (G__12797__i < G__12797__a.length) {G__12797__a[G__12797__i] = arguments[G__12797__i + 2]; ++G__12797__i;}
  more = new cljs.core.IndexedSeq(G__12797__a,0);
} 
return G__12796__delegate.call(this,x,y,more);};
G__12796.cljs$lang$maxFixedArity = 2;
G__12796.cljs$lang$applyTo = (function (arglist__12798){
var x = cljs.core.first(arglist__12798);
arglist__12798 = cljs.core.next(arglist__12798);
var y = cljs.core.first(arglist__12798);
var more = cljs.core.rest(arglist__12798);
return G__12796__delegate(x,y,more);
});
G__12796.cljs$core$IFn$_invoke$arity$variadic = G__12796__delegate;
return G__12796;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__12799 = null;
if (arguments.length > 2) {
var G__12800__i = 0, G__12800__a = new Array(arguments.length -  2);
while (G__12800__i < G__12800__a.length) {G__12800__a[G__12800__i] = arguments[G__12800__i + 2]; ++G__12800__i;}
G__12799 = new cljs.core.IndexedSeq(G__12800__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12799);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__12805__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__12805 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12806__i = 0, G__12806__a = new Array(arguments.length -  2);
while (G__12806__i < G__12806__a.length) {G__12806__a[G__12806__i] = arguments[G__12806__i + 2]; ++G__12806__i;}
  more = new cljs.core.IndexedSeq(G__12806__a,0);
} 
return G__12805__delegate.call(this,x,y,more);};
G__12805.cljs$lang$maxFixedArity = 2;
G__12805.cljs$lang$applyTo = (function (arglist__12807){
var x = cljs.core.first(arglist__12807);
arglist__12807 = cljs.core.next(arglist__12807);
var y = cljs.core.first(arglist__12807);
var more = cljs.core.rest(arglist__12807);
return G__12805__delegate(x,y,more);
});
G__12805.cljs$core$IFn$_invoke$arity$variadic = G__12805__delegate;
return G__12805;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__12808 = null;
if (arguments.length > 2) {
var G__12809__i = 0, G__12809__a = new Array(arguments.length -  2);
while (G__12809__i < G__12809__a.length) {G__12809__a[G__12809__i] = arguments[G__12809__i + 2]; ++G__12809__i;}
G__12808 = new cljs.core.IndexedSeq(G__12809__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12808);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__12810__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__12810 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12811__i = 0, G__12811__a = new Array(arguments.length -  2);
while (G__12811__i < G__12811__a.length) {G__12811__a[G__12811__i] = arguments[G__12811__i + 2]; ++G__12811__i;}
  more = new cljs.core.IndexedSeq(G__12811__a,0);
} 
return G__12810__delegate.call(this,x,y,more);};
G__12810.cljs$lang$maxFixedArity = 2;
G__12810.cljs$lang$applyTo = (function (arglist__12812){
var x = cljs.core.first(arglist__12812);
arglist__12812 = cljs.core.next(arglist__12812);
var y = cljs.core.first(arglist__12812);
var more = cljs.core.rest(arglist__12812);
return G__12810__delegate(x,y,more);
});
G__12810.cljs$core$IFn$_invoke$arity$variadic = G__12810__delegate;
return G__12810;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__12813 = null;
if (arguments.length > 2) {
var G__12814__i = 0, G__12814__a = new Array(arguments.length -  2);
while (G__12814__i < G__12814__a.length) {G__12814__a[G__12814__i] = arguments[G__12814__i + 2]; ++G__12814__i;}
G__12813 = new cljs.core.IndexedSeq(G__12814__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12813);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__12815__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__12815 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12816__i = 0, G__12816__a = new Array(arguments.length -  2);
while (G__12816__i < G__12816__a.length) {G__12816__a[G__12816__i] = arguments[G__12816__i + 2]; ++G__12816__i;}
  more = new cljs.core.IndexedSeq(G__12816__a,0);
} 
return G__12815__delegate.call(this,x,y,more);};
G__12815.cljs$lang$maxFixedArity = 2;
G__12815.cljs$lang$applyTo = (function (arglist__12817){
var x = cljs.core.first(arglist__12817);
arglist__12817 = cljs.core.next(arglist__12817);
var y = cljs.core.first(arglist__12817);
var more = cljs.core.rest(arglist__12817);
return G__12815__delegate(x,y,more);
});
G__12815.cljs$core$IFn$_invoke$arity$variadic = G__12815__delegate;
return G__12815;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__12818 = null;
if (arguments.length > 2) {
var G__12819__i = 0, G__12819__a = new Array(arguments.length -  2);
while (G__12819__i < G__12819__a.length) {G__12819__a[G__12819__i] = arguments[G__12819__i + 2]; ++G__12819__i;}
G__12818 = new cljs.core.IndexedSeq(G__12819__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12818);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__12822 = x;
var G__12823 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__12822,G__12823) : cljs.core.mod.call(null,G__12822,G__12823));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__12824__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__12824 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12825__i = 0, G__12825__a = new Array(arguments.length -  2);
while (G__12825__i < G__12825__a.length) {G__12825__a[G__12825__i] = arguments[G__12825__i + 2]; ++G__12825__i;}
  more = new cljs.core.IndexedSeq(G__12825__a,0);
} 
return G__12824__delegate.call(this,x,y,more);};
G__12824.cljs$lang$maxFixedArity = 2;
G__12824.cljs$lang$applyTo = (function (arglist__12826){
var x = cljs.core.first(arglist__12826);
arglist__12826 = cljs.core.next(arglist__12826);
var y = cljs.core.first(arglist__12826);
var more = cljs.core.rest(arglist__12826);
return G__12824__delegate(x,y,more);
});
G__12824.cljs$core$IFn$_invoke$arity$variadic = G__12824__delegate;
return G__12824;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__12827 = null;
if (arguments.length > 2) {
var G__12828__i = 0, G__12828__a = new Array(arguments.length -  2);
while (G__12828__i < G__12828__a.length) {G__12828__a[G__12828__i] = arguments[G__12828__i + 2]; ++G__12828__i;}
G__12827 = new cljs.core.IndexedSeq(G__12828__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12827);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__12829__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__12829 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12830__i = 0, G__12830__a = new Array(arguments.length -  2);
while (G__12830__i < G__12830__a.length) {G__12830__a[G__12830__i] = arguments[G__12830__i + 2]; ++G__12830__i;}
  more = new cljs.core.IndexedSeq(G__12830__a,0);
} 
return G__12829__delegate.call(this,x,y,more);};
G__12829.cljs$lang$maxFixedArity = 2;
G__12829.cljs$lang$applyTo = (function (arglist__12831){
var x = cljs.core.first(arglist__12831);
arglist__12831 = cljs.core.next(arglist__12831);
var y = cljs.core.first(arglist__12831);
var more = cljs.core.rest(arglist__12831);
return G__12829__delegate(x,y,more);
});
G__12829.cljs$core$IFn$_invoke$arity$variadic = G__12829__delegate;
return G__12829;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__12832 = null;
if (arguments.length > 2) {
var G__12833__i = 0, G__12833__a = new Array(arguments.length -  2);
while (G__12833__i < G__12833__a.length) {G__12833__a[G__12833__i] = arguments[G__12833__i + 2]; ++G__12833__i;}
G__12832 = new cljs.core.IndexedSeq(G__12833__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12832);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__12836 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__12836) : Math.floor.call(null,G__12836));
} else {
var G__12837 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__12837) : Math.ceil.call(null,G__12837));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__12838__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__12838 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12839__i = 0, G__12839__a = new Array(arguments.length -  2);
while (G__12839__i < G__12839__a.length) {G__12839__a[G__12839__i] = arguments[G__12839__i + 2]; ++G__12839__i;}
  more = new cljs.core.IndexedSeq(G__12839__a,0);
} 
return G__12838__delegate.call(this,x,y,more);};
G__12838.cljs$lang$maxFixedArity = 2;
G__12838.cljs$lang$applyTo = (function (arglist__12840){
var x = cljs.core.first(arglist__12840);
arglist__12840 = cljs.core.next(arglist__12840);
var y = cljs.core.first(arglist__12840);
var more = cljs.core.rest(arglist__12840);
return G__12838__delegate(x,y,more);
});
G__12838.cljs$core$IFn$_invoke$arity$variadic = G__12838__delegate;
return G__12838;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__12841 = null;
if (arguments.length > 2) {
var G__12842__i = 0, G__12842__a = new Array(arguments.length -  2);
while (G__12842__i < G__12842__a.length) {G__12842__a[G__12842__i] = arguments[G__12842__i + 2]; ++G__12842__i;}
G__12841 = new cljs.core.IndexedSeq(G__12842__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12841);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__12843__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__12843 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12844__i = 0, G__12844__a = new Array(arguments.length -  2);
while (G__12844__i < G__12844__a.length) {G__12844__a[G__12844__i] = arguments[G__12844__i + 2]; ++G__12844__i;}
  more = new cljs.core.IndexedSeq(G__12844__a,0);
} 
return G__12843__delegate.call(this,x,y,more);};
G__12843.cljs$lang$maxFixedArity = 2;
G__12843.cljs$lang$applyTo = (function (arglist__12845){
var x = cljs.core.first(arglist__12845);
arglist__12845 = cljs.core.next(arglist__12845);
var y = cljs.core.first(arglist__12845);
var more = cljs.core.rest(arglist__12845);
return G__12843__delegate(x,y,more);
});
G__12843.cljs$core$IFn$_invoke$arity$variadic = G__12843__delegate;
return G__12843;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__12846 = null;
if (arguments.length > 2) {
var G__12847__i = 0, G__12847__a = new Array(arguments.length -  2);
while (G__12847__i < G__12847__a.length) {G__12847__a[G__12847__i] = arguments[G__12847__i + 2]; ++G__12847__i;}
G__12846 = new cljs.core.IndexedSeq(G__12847__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12846);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__12848__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__12848 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12849__i = 0, G__12849__a = new Array(arguments.length -  2);
while (G__12849__i < G__12849__a.length) {G__12849__a[G__12849__i] = arguments[G__12849__i + 2]; ++G__12849__i;}
  more = new cljs.core.IndexedSeq(G__12849__a,0);
} 
return G__12848__delegate.call(this,x,y,more);};
G__12848.cljs$lang$maxFixedArity = 2;
G__12848.cljs$lang$applyTo = (function (arglist__12850){
var x = cljs.core.first(arglist__12850);
arglist__12850 = cljs.core.next(arglist__12850);
var y = cljs.core.first(arglist__12850);
var more = cljs.core.rest(arglist__12850);
return G__12848__delegate(x,y,more);
});
G__12848.cljs$core$IFn$_invoke$arity$variadic = G__12848__delegate;
return G__12848;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__12851 = null;
if (arguments.length > 2) {
var G__12852__i = 0, G__12852__a = new Array(arguments.length -  2);
while (G__12852__i < G__12852__a.length) {G__12852__a[G__12852__i] = arguments[G__12852__i + 2]; ++G__12852__i;}
G__12851 = new cljs.core.IndexedSeq(G__12852__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12851);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__12853__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__12853 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12854__i = 0, G__12854__a = new Array(arguments.length -  2);
while (G__12854__i < G__12854__a.length) {G__12854__a[G__12854__i] = arguments[G__12854__i + 2]; ++G__12854__i;}
  more = new cljs.core.IndexedSeq(G__12854__a,0);
} 
return G__12853__delegate.call(this,x,y,more);};
G__12853.cljs$lang$maxFixedArity = 2;
G__12853.cljs$lang$applyTo = (function (arglist__12855){
var x = cljs.core.first(arglist__12855);
arglist__12855 = cljs.core.next(arglist__12855);
var y = cljs.core.first(arglist__12855);
var more = cljs.core.rest(arglist__12855);
return G__12853__delegate(x,y,more);
});
G__12853.cljs$core$IFn$_invoke$arity$variadic = G__12853__delegate;
return G__12853;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__12856 = null;
if (arguments.length > 2) {
var G__12857__i = 0, G__12857__a = new Array(arguments.length -  2);
while (G__12857__i < G__12857__a.length) {G__12857__a[G__12857__i] = arguments[G__12857__i + 2]; ++G__12857__i;}
G__12856 = new cljs.core.IndexedSeq(G__12857__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12856);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__12862__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__12863 = y;
var G__12864 = cljs.core.first(more);
var G__12865 = cljs.core.next(more);
x = G__12863;
y = G__12864;
more = G__12865;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__12862 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__12866__i = 0, G__12866__a = new Array(arguments.length -  2);
while (G__12866__i < G__12866__a.length) {G__12866__a[G__12866__i] = arguments[G__12866__i + 2]; ++G__12866__i;}
  more = new cljs.core.IndexedSeq(G__12866__a,0);
} 
return G__12862__delegate.call(this,x,y,more);};
G__12862.cljs$lang$maxFixedArity = 2;
G__12862.cljs$lang$applyTo = (function (arglist__12867){
var x = cljs.core.first(arglist__12867);
arglist__12867 = cljs.core.next(arglist__12867);
var y = cljs.core.first(arglist__12867);
var more = cljs.core.rest(arglist__12867);
return G__12862__delegate(x,y,more);
});
G__12862.cljs$core$IFn$_invoke$arity$variadic = G__12862__delegate;
return G__12862;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__12868 = null;
if (arguments.length > 2) {
var G__12869__i = 0, G__12869__a = new Array(arguments.length -  2);
while (G__12869__i < G__12869__a.length) {G__12869__a[G__12869__i] = arguments[G__12869__i + 2]; ++G__12869__i;}
G__12868 = new cljs.core.IndexedSeq(G__12869__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__12868);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__12870 = (n__$1 - (1));
var G__12871 = cljs.core.next(xs);
n__$1 = G__12870;
xs = G__12871;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__12875 = x;
return goog.string.buildString(G__12875);
}
});
var str__2 = (function() { 
var G__12876__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__12877 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__12878 = cljs.core.next(more);
sb = G__12877;
more = G__12878;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__12876 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__12879__i = 0, G__12879__a = new Array(arguments.length -  1);
while (G__12879__i < G__12879__a.length) {G__12879__a[G__12879__i] = arguments[G__12879__i + 1]; ++G__12879__i;}
  ys = new cljs.core.IndexedSeq(G__12879__a,0);
} 
return G__12876__delegate.call(this,x,ys);};
G__12876.cljs$lang$maxFixedArity = 1;
G__12876.cljs$lang$applyTo = (function (arglist__12880){
var x = cljs.core.first(arglist__12880);
var ys = cljs.core.rest(arglist__12880);
return G__12876__delegate(x,ys);
});
G__12876.cljs$core$IFn$_invoke$arity$variadic = G__12876__delegate;
return G__12876;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__12881 = null;
if (arguments.length > 1) {
var G__12882__i = 0, G__12882__a = new Array(arguments.length -  1);
while (G__12882__i < G__12882__a.length) {G__12882__a[G__12882__i] = arguments[G__12882__i + 1]; ++G__12882__i;}
G__12881 = new cljs.core.IndexedSeq(G__12882__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12881);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__12883 = cljs.core.next(xs);
var G__12884 = cljs.core.next(ys);
xs = G__12883;
ys = G__12884;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__12885 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__12886 = cljs.core.next(s);
res = G__12885;
s = G__12886;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__12891 = ((h + (cljs.core.hash((function (){var G__12889 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__12889) : cljs.core.key.call(null,G__12889));
})()) ^ cljs.core.hash((function (){var G__12890 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__12890) : cljs.core.val.call(null,G__12890));
})()))) % (4503599627370496));
var G__12892 = cljs.core.next(s);
h = G__12891;
s = G__12892;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__12893 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__12894 = cljs.core.next(s__$1);
h = G__12893;
s__$1 = G__12894;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__12905_12915 = cljs.core.seq(fn_map);
var chunk__12906_12916 = null;
var count__12907_12917 = (0);
var i__12908_12918 = (0);
while(true){
if((i__12908_12918 < count__12907_12917)){
var vec__12909_12919 = chunk__12906_12916.cljs$core$IIndexed$_nth$arity$2(null,i__12908_12918);
var key_name_12920 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12909_12919,(0),null);
var f_12921 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12909_12919,(1),null);
var str_name_12922 = (function (){var G__12910 = key_name_12920;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12910) : cljs.core.name.call(null,G__12910));
})();
(obj[str_name_12922] = f_12921);

var G__12923 = seq__12905_12915;
var G__12924 = chunk__12906_12916;
var G__12925 = count__12907_12917;
var G__12926 = (i__12908_12918 + (1));
seq__12905_12915 = G__12923;
chunk__12906_12916 = G__12924;
count__12907_12917 = G__12925;
i__12908_12918 = G__12926;
continue;
} else {
var temp__4126__auto___12927 = cljs.core.seq(seq__12905_12915);
if(temp__4126__auto___12927){
var seq__12905_12928__$1 = temp__4126__auto___12927;
if(cljs.core.chunked_seq_QMARK_(seq__12905_12928__$1)){
var c__4598__auto___12929 = (function (){var G__12911 = seq__12905_12928__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__12911) : cljs.core.chunk_first.call(null,G__12911));
})();
var G__12930 = (function (){var G__12912 = seq__12905_12928__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__12912) : cljs.core.chunk_rest.call(null,G__12912));
})();
var G__12931 = c__4598__auto___12929;
var G__12932 = cljs.core.count(c__4598__auto___12929);
var G__12933 = (0);
seq__12905_12915 = G__12930;
chunk__12906_12916 = G__12931;
count__12907_12917 = G__12932;
i__12908_12918 = G__12933;
continue;
} else {
var vec__12913_12934 = cljs.core.first(seq__12905_12928__$1);
var key_name_12935 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12913_12934,(0),null);
var f_12936 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12913_12934,(1),null);
var str_name_12937 = (function (){var G__12914 = key_name_12935;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12914) : cljs.core.name.call(null,G__12914));
})();
(obj[str_name_12937] = f_12936);

var G__12938 = cljs.core.next(seq__12905_12928__$1);
var G__12939 = null;
var G__12940 = (0);
var G__12941 = (0);
seq__12905_12915 = G__12938;
chunk__12906_12916 = G__12939;
count__12907_12917 = G__12940;
i__12908_12918 = G__12941;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__12943 = coll;
if(G__12943){
var bit__4492__auto__ = (G__12943.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4492__auto__) || (G__12943.cljs$core$IReversible$)){
return true;
} else {
if((!G__12943.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12943);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__12943);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__12944 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__12944;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__12945 = (i - (1));
var G__12946 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__12945;
r = G__12946;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__12947__i = 0, G__12947__a = new Array(arguments.length -  0);
while (G__12947__i < G__12947__a.length) {G__12947__a[G__12947__i] = arguments[G__12947__i + 0]; ++G__12947__i;}
  xs = new cljs.core.IndexedSeq(G__12947__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__12948){
var xs = cljs.core.seq(arglist__12948);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3811__auto__ = (coll == null);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var G__12952 = coll;
if(G__12952){
var bit__4485__auto__ = (G__12952.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4485__auto__) || (G__12952.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__12954 = x;
if(G__12954){
var bit__4492__auto__ = (G__12954.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4492__auto__) || (G__12954.cljs$core$IList$)){
return true;
} else {
if((!G__12954.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12954);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__12954);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3799__auto__ = cljs.core.not(a.ns);
if(and__3799__auto__){
return b.ns;
} else {
return and__3799__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__12961 = a.ns;
var G__12962 = b.ns;
return goog.array.defaultCompare(G__12961,G__12962);
})();
if(((0) === nsc)){
var G__12963 = a.name;
var G__12964 = b.name;
return goog.array.defaultCompare(G__12963,G__12964);
} else {
return nsc;
}
}
} else {
var G__12965 = a.name;
var G__12966 = b.name;
return goog.array.defaultCompare(G__12965,G__12966);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4232__auto__ = self__._hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__12968 = null;
var G__12968__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__12968__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__12968 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__12968__2.call(this,self__,coll);
case 3:
return G__12968__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__12968.cljs$core$IFn$_invoke$arity$2 = G__12968__2;
G__12968.cljs$core$IFn$_invoke$arity$3 = G__12968__3;
return G__12968;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args12967){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args12967)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__12970 = x;
if(G__12970){
var bit__4485__auto__ = (G__12970.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4485__auto__) || (G__12970.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__12972 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__12972) : cljs.core.name.call(null,G__12972));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__12973 = ls.sval();
ls = G__12973;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__12975 = s;
if(G__12975){
var bit__4485__auto__ = (G__12975.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4485__auto__) || (G__12975.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__12976 = cljs.core.next(s__$1);
s__$1 = G__12976;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_12977 = (0);
var xs_12978 = cljs.core.seq(coll);
while(true){
if(xs_12978){
(ret[i_12977] = cljs.core.to_array(cljs.core.first(xs_12978)));

var G__12979 = (i_12977 + (1));
var G__12980 = cljs.core.next(xs_12978);
i_12977 = G__12979;
xs_12978 = G__12980;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12983 = (i + (1));
var G__12984 = cljs.core.next(s__$1);
i = G__12983;
s__$1 = G__12984;
continue;
} else {
return a;
}
break;
}
} else {
var n__4698__auto___12985 = size;
var i_12986 = (0);
while(true){
if((i_12986 < n__4698__auto___12985)){
(a[i_12986] = init_val_or_seq);

var G__12987 = (i_12986 + (1));
i_12986 = G__12987;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12990 = (i + (1));
var G__12991 = cljs.core.next(s__$1);
i = G__12990;
s__$1 = G__12991;
continue;
} else {
return a;
}
break;
}
} else {
var n__4698__auto___12992 = size;
var i_12993 = (0);
while(true){
if((i_12993 < n__4698__auto___12992)){
(a[i_12993] = init_val_or_seq);

var G__12994 = (i_12993 + (1));
i_12993 = G__12994;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__12997 = (i + (1));
var G__12998 = cljs.core.next(s__$1);
i = G__12997;
s__$1 = G__12998;
continue;
} else {
return a;
}
break;
}
} else {
var n__4698__auto___12999 = size;
var i_13000 = (0);
while(true){
if((i_13000 < n__4698__auto___12999)){
(a[i_13000] = init_val_or_seq);

var G__13001 = (i_13000 + (1));
i_13000 = G__13001;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__13004 = (i + (1));
var G__13005 = cljs.core.next(s__$1);
i = G__13004;
s__$1 = G__13005;
continue;
} else {
return a;
}
break;
}
} else {
var n__4698__auto___13006 = size;
var i_13007 = (0);
while(true){
if((i_13007 < n__4698__auto___13006)){
(a[i_13007] = init_val_or_seq);

var G__13008 = (i_13007 + (1));
i_13007 = G__13008;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__13009 = cljs.core.next(s__$1);
var G__13010 = (i - (1));
var G__13011 = (sum + (1));
s__$1 = G__13009;
i = G__13010;
sum = G__13011;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__13031__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__13031 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__13032__i = 0, G__13032__a = new Array(arguments.length -  2);
while (G__13032__i < G__13032__a.length) {G__13032__a[G__13032__i] = arguments[G__13032__i + 2]; ++G__13032__i;}
  zs = new cljs.core.IndexedSeq(G__13032__a,0);
} 
return G__13031__delegate.call(this,x,y,zs);};
G__13031.cljs$lang$maxFixedArity = 2;
G__13031.cljs$lang$applyTo = (function (arglist__13033){
var x = cljs.core.first(arglist__13033);
arglist__13033 = cljs.core.next(arglist__13033);
var y = cljs.core.first(arglist__13033);
var zs = cljs.core.rest(arglist__13033);
return G__13031__delegate(x,y,zs);
});
G__13031.cljs$core$IFn$_invoke$arity$variadic = G__13031__delegate;
return G__13031;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__13034 = null;
if (arguments.length > 2) {
var G__13035__i = 0, G__13035__a = new Array(arguments.length -  2);
while (G__13035__i < G__13035__a.length) {G__13035__a[G__13035__i] = arguments[G__13035__i + 2]; ++G__13035__i;}
G__13034 = new cljs.core.IndexedSeq(G__13035__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13034);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__13036__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__13036 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__13037__i = 0, G__13037__a = new Array(arguments.length -  4);
while (G__13037__i < G__13037__a.length) {G__13037__a[G__13037__i] = arguments[G__13037__i + 4]; ++G__13037__i;}
  more = new cljs.core.IndexedSeq(G__13037__a,0);
} 
return G__13036__delegate.call(this,a,b,c,d,more);};
G__13036.cljs$lang$maxFixedArity = 4;
G__13036.cljs$lang$applyTo = (function (arglist__13038){
var a = cljs.core.first(arglist__13038);
arglist__13038 = cljs.core.next(arglist__13038);
var b = cljs.core.first(arglist__13038);
arglist__13038 = cljs.core.next(arglist__13038);
var c = cljs.core.first(arglist__13038);
arglist__13038 = cljs.core.next(arglist__13038);
var d = cljs.core.first(arglist__13038);
var more = cljs.core.rest(arglist__13038);
return G__13036__delegate(a,b,c,d,more);
});
G__13036.cljs$core$IFn$_invoke$arity$variadic = G__13036__delegate;
return G__13036;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__13039 = null;
if (arguments.length > 4) {
var G__13040__i = 0, G__13040__a = new Array(arguments.length -  4);
while (G__13040__i < G__13040__a.length) {G__13040__a[G__13040__i] = arguments[G__13040__i + 4]; ++G__13040__i;}
G__13039 = new cljs.core.IndexedSeq(G__13040__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__13039);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__13041__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__13042 = ntcoll;
var G__13043 = cljs.core.first(vals);
var G__13044 = cljs.core.next(vals);
tcoll = G__13042;
val = G__13043;
vals = G__13044;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13041 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__13045__i = 0, G__13045__a = new Array(arguments.length -  2);
while (G__13045__i < G__13045__a.length) {G__13045__a[G__13045__i] = arguments[G__13045__i + 2]; ++G__13045__i;}
  vals = new cljs.core.IndexedSeq(G__13045__a,0);
} 
return G__13041__delegate.call(this,tcoll,val,vals);};
G__13041.cljs$lang$maxFixedArity = 2;
G__13041.cljs$lang$applyTo = (function (arglist__13046){
var tcoll = cljs.core.first(arglist__13046);
arglist__13046 = cljs.core.next(arglist__13046);
var val = cljs.core.first(arglist__13046);
var vals = cljs.core.rest(arglist__13046);
return G__13041__delegate(tcoll,val,vals);
});
G__13041.cljs$core$IFn$_invoke$arity$variadic = G__13041__delegate;
return G__13041;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__13047 = null;
if (arguments.length > 2) {
var G__13048__i = 0, G__13048__a = new Array(arguments.length -  2);
while (G__13048__i < G__13048__a.length) {G__13048__a[G__13048__i] = arguments[G__13048__i + 2]; ++G__13048__i;}
G__13047 = new cljs.core.IndexedSeq(G__13048__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__13047);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__13049__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__13050 = ntcoll;
var G__13051 = cljs.core.first(kvs);
var G__13052 = cljs.core.second(kvs);
var G__13053 = cljs.core.nnext(kvs);
tcoll = G__13050;
key = G__13051;
val = G__13052;
kvs = G__13053;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13049 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__13054__i = 0, G__13054__a = new Array(arguments.length -  3);
while (G__13054__i < G__13054__a.length) {G__13054__a[G__13054__i] = arguments[G__13054__i + 3]; ++G__13054__i;}
  kvs = new cljs.core.IndexedSeq(G__13054__a,0);
} 
return G__13049__delegate.call(this,tcoll,key,val,kvs);};
G__13049.cljs$lang$maxFixedArity = 3;
G__13049.cljs$lang$applyTo = (function (arglist__13055){
var tcoll = cljs.core.first(arglist__13055);
arglist__13055 = cljs.core.next(arglist__13055);
var key = cljs.core.first(arglist__13055);
arglist__13055 = cljs.core.next(arglist__13055);
var val = cljs.core.first(arglist__13055);
var kvs = cljs.core.rest(arglist__13055);
return G__13049__delegate(tcoll,key,val,kvs);
});
G__13049.cljs$core$IFn$_invoke$arity$variadic = G__13049__delegate;
return G__13049;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__13056 = null;
if (arguments.length > 3) {
var G__13057__i = 0, G__13057__a = new Array(arguments.length -  3);
while (G__13057__i < G__13057__a.length) {G__13057__a[G__13057__i] = arguments[G__13057__i + 3]; ++G__13057__i;}
G__13056 = new cljs.core.IndexedSeq(G__13057__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__13056);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__13058__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__13059 = ntcoll;
var G__13060 = cljs.core.first(ks);
var G__13061 = cljs.core.next(ks);
tcoll = G__13059;
key = G__13060;
ks = G__13061;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13058 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__13062__i = 0, G__13062__a = new Array(arguments.length -  2);
while (G__13062__i < G__13062__a.length) {G__13062__a[G__13062__i] = arguments[G__13062__i + 2]; ++G__13062__i;}
  ks = new cljs.core.IndexedSeq(G__13062__a,0);
} 
return G__13058__delegate.call(this,tcoll,key,ks);};
G__13058.cljs$lang$maxFixedArity = 2;
G__13058.cljs$lang$applyTo = (function (arglist__13063){
var tcoll = cljs.core.first(arglist__13063);
arglist__13063 = cljs.core.next(arglist__13063);
var key = cljs.core.first(arglist__13063);
var ks = cljs.core.rest(arglist__13063);
return G__13058__delegate(tcoll,key,ks);
});
G__13058.cljs$core$IFn$_invoke$arity$variadic = G__13058__delegate;
return G__13058;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__13064 = null;
if (arguments.length > 2) {
var G__13065__i = 0, G__13065__a = new Array(arguments.length -  2);
while (G__13065__i < G__13065__a.length) {G__13065__a[G__13065__i] = arguments[G__13065__i + 2]; ++G__13065__i;}
G__13064 = new cljs.core.IndexedSeq(G__13065__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__13064);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__13066__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__13067 = ntcoll;
var G__13068 = cljs.core.first(vals);
var G__13069 = cljs.core.next(vals);
tcoll = G__13067;
val = G__13068;
vals = G__13069;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__13066 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__13070__i = 0, G__13070__a = new Array(arguments.length -  2);
while (G__13070__i < G__13070__a.length) {G__13070__a[G__13070__i] = arguments[G__13070__i + 2]; ++G__13070__i;}
  vals = new cljs.core.IndexedSeq(G__13070__a,0);
} 
return G__13066__delegate.call(this,tcoll,val,vals);};
G__13066.cljs$lang$maxFixedArity = 2;
G__13066.cljs$lang$applyTo = (function (arglist__13071){
var tcoll = cljs.core.first(arglist__13071);
arglist__13071 = cljs.core.next(arglist__13071);
var val = cljs.core.first(arglist__13071);
var vals = cljs.core.rest(arglist__13071);
return G__13066__delegate(tcoll,val,vals);
});
G__13066.cljs$core$IFn$_invoke$arity$variadic = G__13066__delegate;
return G__13066;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__13072 = null;
if (arguments.length > 2) {
var G__13073__i = 0, G__13073__a = new Array(arguments.length -  2);
while (G__13073__i < G__13073__a.length) {G__13073__a[G__13073__i] = arguments[G__13073__i + 2]; ++G__13073__i;}
G__13072 = new cljs.core.IndexedSeq(G__13073__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__13072);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4742 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4742);
} else {
var G__13284 = a4742;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13284) : f.call(null,G__13284));
}
} else {
var b4743 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4742,b4743);
} else {
var G__13285 = a4742;
var G__13286 = b4743;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13285,G__13286) : f.call(null,G__13285,G__13286));
}
} else {
var c4744 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4742,b4743,c4744);
} else {
var G__13287 = a4742;
var G__13288 = b4743;
var G__13289 = c4744;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13287,G__13288,G__13289) : f.call(null,G__13287,G__13288,G__13289));
}
} else {
var d4745 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4742,b4743,c4744,d4745);
} else {
var G__13290 = a4742;
var G__13291 = b4743;
var G__13292 = c4744;
var G__13293 = d4745;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13290,G__13291,G__13292,G__13293) : f.call(null,G__13290,G__13291,G__13292,G__13293));
}
} else {
var e4746 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4742,b4743,c4744,d4745,e4746);
} else {
var G__13294 = a4742;
var G__13295 = b4743;
var G__13296 = c4744;
var G__13297 = d4745;
var G__13298 = e4746;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13294,G__13295,G__13296,G__13297,G__13298) : f.call(null,G__13294,G__13295,G__13296,G__13297,G__13298));
}
} else {
var f4747 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4742,b4743,c4744,d4745,e4746,f4747);
} else {
var G__13299 = a4742;
var G__13300 = b4743;
var G__13301 = c4744;
var G__13302 = d4745;
var G__13303 = e4746;
var G__13304 = f4747;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13299,G__13300,G__13301,G__13302,G__13303,G__13304) : f.call(null,G__13299,G__13300,G__13301,G__13302,G__13303,G__13304));
}
} else {
var g4748 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4742,b4743,c4744,d4745,e4746,f4747,g4748);
} else {
var G__13305 = a4742;
var G__13306 = b4743;
var G__13307 = c4744;
var G__13308 = d4745;
var G__13309 = e4746;
var G__13310 = f4747;
var G__13311 = g4748;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__13305,G__13306,G__13307,G__13308,G__13309,G__13310,G__13311) : f.call(null,G__13305,G__13306,G__13307,G__13308,G__13309,G__13310,G__13311));
}
} else {
var h4749 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749);
} else {
var G__13312 = a4742;
var G__13313 = b4743;
var G__13314 = c4744;
var G__13315 = d4745;
var G__13316 = e4746;
var G__13317 = f4747;
var G__13318 = g4748;
var G__13319 = h4749;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__13312,G__13313,G__13314,G__13315,G__13316,G__13317,G__13318,G__13319) : f.call(null,G__13312,G__13313,G__13314,G__13315,G__13316,G__13317,G__13318,G__13319));
}
} else {
var i4750 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750);
} else {
var G__13320 = a4742;
var G__13321 = b4743;
var G__13322 = c4744;
var G__13323 = d4745;
var G__13324 = e4746;
var G__13325 = f4747;
var G__13326 = g4748;
var G__13327 = h4749;
var G__13328 = i4750;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__13320,G__13321,G__13322,G__13323,G__13324,G__13325,G__13326,G__13327,G__13328) : f.call(null,G__13320,G__13321,G__13322,G__13323,G__13324,G__13325,G__13326,G__13327,G__13328));
}
} else {
var j4751 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751);
} else {
var G__13329 = a4742;
var G__13330 = b4743;
var G__13331 = c4744;
var G__13332 = d4745;
var G__13333 = e4746;
var G__13334 = f4747;
var G__13335 = g4748;
var G__13336 = h4749;
var G__13337 = i4750;
var G__13338 = j4751;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__13329,G__13330,G__13331,G__13332,G__13333,G__13334,G__13335,G__13336,G__13337,G__13338) : f.call(null,G__13329,G__13330,G__13331,G__13332,G__13333,G__13334,G__13335,G__13336,G__13337,G__13338));
}
} else {
var k4752 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752);
} else {
var G__13339 = a4742;
var G__13340 = b4743;
var G__13341 = c4744;
var G__13342 = d4745;
var G__13343 = e4746;
var G__13344 = f4747;
var G__13345 = g4748;
var G__13346 = h4749;
var G__13347 = i4750;
var G__13348 = j4751;
var G__13349 = k4752;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__13339,G__13340,G__13341,G__13342,G__13343,G__13344,G__13345,G__13346,G__13347,G__13348,G__13349) : f.call(null,G__13339,G__13340,G__13341,G__13342,G__13343,G__13344,G__13345,G__13346,G__13347,G__13348,G__13349));
}
} else {
var l4753 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753);
} else {
var G__13350 = a4742;
var G__13351 = b4743;
var G__13352 = c4744;
var G__13353 = d4745;
var G__13354 = e4746;
var G__13355 = f4747;
var G__13356 = g4748;
var G__13357 = h4749;
var G__13358 = i4750;
var G__13359 = j4751;
var G__13360 = k4752;
var G__13361 = l4753;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__13350,G__13351,G__13352,G__13353,G__13354,G__13355,G__13356,G__13357,G__13358,G__13359,G__13360,G__13361) : f.call(null,G__13350,G__13351,G__13352,G__13353,G__13354,G__13355,G__13356,G__13357,G__13358,G__13359,G__13360,G__13361));
}
} else {
var m4754 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754);
} else {
var G__13362 = a4742;
var G__13363 = b4743;
var G__13364 = c4744;
var G__13365 = d4745;
var G__13366 = e4746;
var G__13367 = f4747;
var G__13368 = g4748;
var G__13369 = h4749;
var G__13370 = i4750;
var G__13371 = j4751;
var G__13372 = k4752;
var G__13373 = l4753;
var G__13374 = m4754;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__13362,G__13363,G__13364,G__13365,G__13366,G__13367,G__13368,G__13369,G__13370,G__13371,G__13372,G__13373,G__13374) : f.call(null,G__13362,G__13363,G__13364,G__13365,G__13366,G__13367,G__13368,G__13369,G__13370,G__13371,G__13372,G__13373,G__13374));
}
} else {
var n4755 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755);
} else {
var G__13375 = a4742;
var G__13376 = b4743;
var G__13377 = c4744;
var G__13378 = d4745;
var G__13379 = e4746;
var G__13380 = f4747;
var G__13381 = g4748;
var G__13382 = h4749;
var G__13383 = i4750;
var G__13384 = j4751;
var G__13385 = k4752;
var G__13386 = l4753;
var G__13387 = m4754;
var G__13388 = n4755;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__13375,G__13376,G__13377,G__13378,G__13379,G__13380,G__13381,G__13382,G__13383,G__13384,G__13385,G__13386,G__13387,G__13388) : f.call(null,G__13375,G__13376,G__13377,G__13378,G__13379,G__13380,G__13381,G__13382,G__13383,G__13384,G__13385,G__13386,G__13387,G__13388));
}
} else {
var o4756 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756);
} else {
var G__13389 = a4742;
var G__13390 = b4743;
var G__13391 = c4744;
var G__13392 = d4745;
var G__13393 = e4746;
var G__13394 = f4747;
var G__13395 = g4748;
var G__13396 = h4749;
var G__13397 = i4750;
var G__13398 = j4751;
var G__13399 = k4752;
var G__13400 = l4753;
var G__13401 = m4754;
var G__13402 = n4755;
var G__13403 = o4756;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__13389,G__13390,G__13391,G__13392,G__13393,G__13394,G__13395,G__13396,G__13397,G__13398,G__13399,G__13400,G__13401,G__13402,G__13403) : f.call(null,G__13389,G__13390,G__13391,G__13392,G__13393,G__13394,G__13395,G__13396,G__13397,G__13398,G__13399,G__13400,G__13401,G__13402,G__13403));
}
} else {
var p4757 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757);
} else {
var G__13404 = a4742;
var G__13405 = b4743;
var G__13406 = c4744;
var G__13407 = d4745;
var G__13408 = e4746;
var G__13409 = f4747;
var G__13410 = g4748;
var G__13411 = h4749;
var G__13412 = i4750;
var G__13413 = j4751;
var G__13414 = k4752;
var G__13415 = l4753;
var G__13416 = m4754;
var G__13417 = n4755;
var G__13418 = o4756;
var G__13419 = p4757;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__13404,G__13405,G__13406,G__13407,G__13408,G__13409,G__13410,G__13411,G__13412,G__13413,G__13414,G__13415,G__13416,G__13417,G__13418,G__13419) : f.call(null,G__13404,G__13405,G__13406,G__13407,G__13408,G__13409,G__13410,G__13411,G__13412,G__13413,G__13414,G__13415,G__13416,G__13417,G__13418,G__13419));
}
} else {
var q4758 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757,q4758);
} else {
var G__13420 = a4742;
var G__13421 = b4743;
var G__13422 = c4744;
var G__13423 = d4745;
var G__13424 = e4746;
var G__13425 = f4747;
var G__13426 = g4748;
var G__13427 = h4749;
var G__13428 = i4750;
var G__13429 = j4751;
var G__13430 = k4752;
var G__13431 = l4753;
var G__13432 = m4754;
var G__13433 = n4755;
var G__13434 = o4756;
var G__13435 = p4757;
var G__13436 = q4758;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__13420,G__13421,G__13422,G__13423,G__13424,G__13425,G__13426,G__13427,G__13428,G__13429,G__13430,G__13431,G__13432,G__13433,G__13434,G__13435,G__13436) : f.call(null,G__13420,G__13421,G__13422,G__13423,G__13424,G__13425,G__13426,G__13427,G__13428,G__13429,G__13430,G__13431,G__13432,G__13433,G__13434,G__13435,G__13436));
}
} else {
var r4759 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757,q4758,r4759);
} else {
var G__13437 = a4742;
var G__13438 = b4743;
var G__13439 = c4744;
var G__13440 = d4745;
var G__13441 = e4746;
var G__13442 = f4747;
var G__13443 = g4748;
var G__13444 = h4749;
var G__13445 = i4750;
var G__13446 = j4751;
var G__13447 = k4752;
var G__13448 = l4753;
var G__13449 = m4754;
var G__13450 = n4755;
var G__13451 = o4756;
var G__13452 = p4757;
var G__13453 = q4758;
var G__13454 = r4759;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__13437,G__13438,G__13439,G__13440,G__13441,G__13442,G__13443,G__13444,G__13445,G__13446,G__13447,G__13448,G__13449,G__13450,G__13451,G__13452,G__13453,G__13454) : f.call(null,G__13437,G__13438,G__13439,G__13440,G__13441,G__13442,G__13443,G__13444,G__13445,G__13446,G__13447,G__13448,G__13449,G__13450,G__13451,G__13452,G__13453,G__13454));
}
} else {
var s4760 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757,q4758,r4759,s4760);
} else {
var G__13455 = a4742;
var G__13456 = b4743;
var G__13457 = c4744;
var G__13458 = d4745;
var G__13459 = e4746;
var G__13460 = f4747;
var G__13461 = g4748;
var G__13462 = h4749;
var G__13463 = i4750;
var G__13464 = j4751;
var G__13465 = k4752;
var G__13466 = l4753;
var G__13467 = m4754;
var G__13468 = n4755;
var G__13469 = o4756;
var G__13470 = p4757;
var G__13471 = q4758;
var G__13472 = r4759;
var G__13473 = s4760;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__13455,G__13456,G__13457,G__13458,G__13459,G__13460,G__13461,G__13462,G__13463,G__13464,G__13465,G__13466,G__13467,G__13468,G__13469,G__13470,G__13471,G__13472,G__13473) : f.call(null,G__13455,G__13456,G__13457,G__13458,G__13459,G__13460,G__13461,G__13462,G__13463,G__13464,G__13465,G__13466,G__13467,G__13468,G__13469,G__13470,G__13471,G__13472,G__13473));
}
} else {
var t4761 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4742,b4743,c4744,d4745,e4746,f4747,g4748,h4749,i4750,j4751,k4752,l4753,m4754,n4755,o4756,p4757,q4758,r4759,s4760,t4761);
} else {
var G__13474 = a4742;
var G__13475 = b4743;
var G__13476 = c4744;
var G__13477 = d4745;
var G__13478 = e4746;
var G__13479 = f4747;
var G__13480 = g4748;
var G__13481 = h4749;
var G__13482 = i4750;
var G__13483 = j4751;
var G__13484 = k4752;
var G__13485 = l4753;
var G__13486 = m4754;
var G__13487 = n4755;
var G__13488 = o4756;
var G__13489 = p4757;
var G__13490 = q4758;
var G__13491 = r4759;
var G__13492 = s4760;
var G__13493 = t4761;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__13474,G__13475,G__13476,G__13477,G__13478,G__13479,G__13480,G__13481,G__13482,G__13483,G__13484,G__13485,G__13486,G__13487,G__13488,G__13489,G__13490,G__13491,G__13492,G__13493) : f.call(null,G__13474,G__13475,G__13476,G__13477,G__13478,G__13479,G__13480,G__13481,G__13482,G__13483,G__13484,G__13485,G__13486,G__13487,G__13488,G__13489,G__13490,G__13491,G__13492,G__13493));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__13494__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__13494 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__13495__i = 0, G__13495__a = new Array(arguments.length -  5);
while (G__13495__i < G__13495__a.length) {G__13495__a[G__13495__i] = arguments[G__13495__i + 5]; ++G__13495__i;}
  args = new cljs.core.IndexedSeq(G__13495__a,0);
} 
return G__13494__delegate.call(this,f,a,b,c,d,args);};
G__13494.cljs$lang$maxFixedArity = 5;
G__13494.cljs$lang$applyTo = (function (arglist__13496){
var f = cljs.core.first(arglist__13496);
arglist__13496 = cljs.core.next(arglist__13496);
var a = cljs.core.first(arglist__13496);
arglist__13496 = cljs.core.next(arglist__13496);
var b = cljs.core.first(arglist__13496);
arglist__13496 = cljs.core.next(arglist__13496);
var c = cljs.core.first(arglist__13496);
arglist__13496 = cljs.core.next(arglist__13496);
var d = cljs.core.first(arglist__13496);
var args = cljs.core.rest(arglist__13496);
return G__13494__delegate(f,a,b,c,d,args);
});
G__13494.cljs$core$IFn$_invoke$arity$variadic = G__13494__delegate;
return G__13494;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__13497 = null;
if (arguments.length > 5) {
var G__13498__i = 0, G__13498__a = new Array(arguments.length -  5);
while (G__13498__i < G__13498__a.length) {G__13498__a[G__13498__i] = arguments[G__13498__i + 5]; ++G__13498__i;}
G__13497 = new cljs.core.IndexedSeq(G__13498__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__13497);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__13514 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13514) : f.call(null,G__13514));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__13515 = cljs.core.meta(obj);
var G__13516 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13515,G__13516) : f.call(null,G__13515,G__13516));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__13517 = cljs.core.meta(obj);
var G__13518 = a;
var G__13519 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13517,G__13518,G__13519) : f.call(null,G__13517,G__13518,G__13519));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__13520 = cljs.core.meta(obj);
var G__13521 = a;
var G__13522 = b;
var G__13523 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13520,G__13521,G__13522,G__13523) : f.call(null,G__13520,G__13521,G__13522,G__13523));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__13524 = cljs.core.meta(obj);
var G__13525 = a;
var G__13526 = b;
var G__13527 = c;
var G__13528 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13524,G__13525,G__13526,G__13527,G__13528) : f.call(null,G__13524,G__13525,G__13526,G__13527,G__13528));
})());
});
var vary_meta__7 = (function() { 
var G__13529__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__13529 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__13530__i = 0, G__13530__a = new Array(arguments.length -  6);
while (G__13530__i < G__13530__a.length) {G__13530__a[G__13530__i] = arguments[G__13530__i + 6]; ++G__13530__i;}
  args = new cljs.core.IndexedSeq(G__13530__a,0);
} 
return G__13529__delegate.call(this,obj,f,a,b,c,d,args);};
G__13529.cljs$lang$maxFixedArity = 6;
G__13529.cljs$lang$applyTo = (function (arglist__13531){
var obj = cljs.core.first(arglist__13531);
arglist__13531 = cljs.core.next(arglist__13531);
var f = cljs.core.first(arglist__13531);
arglist__13531 = cljs.core.next(arglist__13531);
var a = cljs.core.first(arglist__13531);
arglist__13531 = cljs.core.next(arglist__13531);
var b = cljs.core.first(arglist__13531);
arglist__13531 = cljs.core.next(arglist__13531);
var c = cljs.core.first(arglist__13531);
arglist__13531 = cljs.core.next(arglist__13531);
var d = cljs.core.first(arglist__13531);
var args = cljs.core.rest(arglist__13531);
return G__13529__delegate(obj,f,a,b,c,d,args);
});
G__13529.cljs$core$IFn$_invoke$arity$variadic = G__13529__delegate;
return G__13529;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__13532 = null;
if (arguments.length > 6) {
var G__13533__i = 0, G__13533__a = new Array(arguments.length -  6);
while (G__13533__i < G__13533__a.length) {G__13533__a[G__13533__i] = arguments[G__13533__i + 6]; ++G__13533__i;}
G__13532 = new cljs.core.IndexedSeq(G__13533__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__13532);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__13534__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__13534 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__13535__i = 0, G__13535__a = new Array(arguments.length -  2);
while (G__13535__i < G__13535__a.length) {G__13535__a[G__13535__i] = arguments[G__13535__i + 2]; ++G__13535__i;}
  more = new cljs.core.IndexedSeq(G__13535__a,0);
} 
return G__13534__delegate.call(this,x,y,more);};
G__13534.cljs$lang$maxFixedArity = 2;
G__13534.cljs$lang$applyTo = (function (arglist__13536){
var x = cljs.core.first(arglist__13536);
arglist__13536 = cljs.core.next(arglist__13536);
var y = cljs.core.first(arglist__13536);
var more = cljs.core.rest(arglist__13536);
return G__13534__delegate(x,y,more);
});
G__13534.cljs$core$IFn$_invoke$arity$variadic = G__13534__delegate;
return G__13534;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__13537 = null;
if (arguments.length > 2) {
var G__13538__i = 0, G__13538__a = new Array(arguments.length -  2);
while (G__13538__i < G__13538__a.length) {G__13538__a[G__13538__i] = arguments[G__13538__i + 2]; ++G__13538__i;}
G__13537 = new cljs.core.IndexedSeq(G__13538__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13537);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t13542 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t13542 = (function (nil_iter,meta13543){
this.nil_iter = nil_iter;
this.meta13543 = meta13543;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t13542.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t13542.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t13542.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t13542.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_13544){
var self__ = this;
var _13544__$1 = this;
return self__.meta13543;
});

cljs.core.t13542.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_13544,meta13543__$1){
var self__ = this;
var _13544__$1 = this;
return (new cljs.core.t13542(self__.nil_iter,meta13543__$1));
});

cljs.core.t13542.cljs$lang$type = true;

cljs.core.t13542.cljs$lang$ctorStr = "cljs.core/t13542";

cljs.core.t13542.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/t13542");
});

cljs.core.__GT_t13542 = (function __GT_t13542(nil_iter__$1,meta13543){
return (new cljs.core.t13542(nil_iter__$1,meta13543));
});

}

return (new cljs.core.t13542(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,"end-column","end-column",1425389514),54,new cljs.core.Keyword(null,"end-line","end-line",1837326455),3063,new cljs.core.Keyword(null,"column","column",2078222095),3,new cljs.core.Keyword(null,"line","line",212345235),3059,new cljs.core.Keyword(null,"file","file",-1269645878),"/home/srazzaque/Workspace/tmp/famous-cljs/.repl/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3799__auto__ = !((lt.stepper == null));
if(and__3799__auto__){
return self__.iter.hasNext();
} else {
return and__3799__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__13545 = lt;
var G__13546 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__13545,G__13546) : self__.xform.call(null,G__13545,G__13546));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13547 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13547) : self__.xform.call(null,G__13547));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__13549 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13549) : xform.call(null,G__13549));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__13551 = cljs.core.next(iters__$1);
iters__$1 = G__13551;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4698__auto___13552 = self__.iters.length;
var i_13553 = (0);
while(true){
if((i_13553 < n__4698__auto___13552)){
(self__.nexts[i_13553] = (self__.iters[i_13553]).next());

var G__13554 = (i_13553 + (1));
i_13553 = G__13554;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3799__auto__ = !((lt.stepper == null));
if(and__3799__auto__){
return this$.hasNext();
} else {
return and__3799__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__13550 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__13550) : self__.xform.call(null,G__13550));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__13559 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13559) : xform.call(null,G__13559));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__13560_13564 = cljs.core.seq(colls);
var chunk__13561_13565 = null;
var count__13562_13566 = (0);
var i__13563_13567 = (0);
while(true){
if((i__13563_13567 < count__13562_13566)){
var coll_13568 = chunk__13561_13565.cljs$core$IIndexed$_nth$arity$2(null,i__13563_13567);
iters.push(cljs.core.iter(coll_13568));

var G__13569 = seq__13560_13564;
var G__13570 = chunk__13561_13565;
var G__13571 = count__13562_13566;
var G__13572 = (i__13563_13567 + (1));
seq__13560_13564 = G__13569;
chunk__13561_13565 = G__13570;
count__13562_13566 = G__13571;
i__13563_13567 = G__13572;
continue;
} else {
var temp__4126__auto___13573 = cljs.core.seq(seq__13560_13564);
if(temp__4126__auto___13573){
var seq__13560_13574__$1 = temp__4126__auto___13573;
if(cljs.core.chunked_seq_QMARK_(seq__13560_13574__$1)){
var c__4598__auto___13575 = cljs.core.chunk_first(seq__13560_13574__$1);
var G__13576 = cljs.core.chunk_rest(seq__13560_13574__$1);
var G__13577 = c__4598__auto___13575;
var G__13578 = cljs.core.count(c__4598__auto___13575);
var G__13579 = (0);
seq__13560_13564 = G__13576;
chunk__13561_13565 = G__13577;
count__13562_13566 = G__13578;
i__13563_13567 = G__13579;
continue;
} else {
var coll_13580 = cljs.core.first(seq__13560_13574__$1);
iters.push(cljs.core.iter(coll_13580));

var G__13581 = cljs.core.next(seq__13560_13574__$1);
var G__13582 = null;
var G__13583 = (0);
var G__13584 = (0);
seq__13560_13564 = G__13581;
chunk__13561_13565 = G__13582;
count__13562_13566 = G__13583;
i__13563_13567 = G__13584;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3811__auto__ = cljs.core.seq(coll);
if(or__3811__auto__){
return or__3811__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__13585__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__13585 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__13586__i = 0, G__13586__a = new Array(arguments.length -  2);
while (G__13586__i < G__13586__a.length) {G__13586__a[G__13586__i] = arguments[G__13586__i + 2]; ++G__13586__i;}
  colls = new cljs.core.IndexedSeq(G__13586__a,0);
} 
return G__13585__delegate.call(this,xform,coll,colls);};
G__13585.cljs$lang$maxFixedArity = 2;
G__13585.cljs$lang$applyTo = (function (arglist__13587){
var xform = cljs.core.first(arglist__13587);
arglist__13587 = cljs.core.next(arglist__13587);
var coll = cljs.core.first(arglist__13587);
var colls = cljs.core.rest(arglist__13587);
return G__13585__delegate(xform,coll,colls);
});
G__13585.cljs$core$IFn$_invoke$arity$variadic = G__13585__delegate;
return G__13585;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__13588 = null;
if (arguments.length > 2) {
var G__13589__i = 0, G__13589__a = new Array(arguments.length -  2);
while (G__13589__i < G__13589__a.length) {G__13589__a[G__13589__i] = arguments[G__13589__i + 2]; ++G__13589__i;}
G__13588 = new cljs.core.IndexedSeq(G__13589__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__13588);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__13591 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13591) : pred.call(null,G__13591));
})())){
var G__13592 = pred;
var G__13593 = cljs.core.next(coll);
pred = G__13592;
coll = G__13593;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3811__auto__ = (function (){var G__13597 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13597) : pred.call(null,G__13597));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__13598 = pred;
var G__13599 = cljs.core.next(coll);
pred = G__13598;
coll = G__13599;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__13606 = null;
var G__13606__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__13606__1 = (function (x){
return cljs.core.not((function (){var G__13603 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13603) : f.call(null,G__13603));
})());
});
var G__13606__2 = (function (x,y){
return cljs.core.not((function (){var G__13604 = x;
var G__13605 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13604,G__13605) : f.call(null,G__13604,G__13605));
})());
});
var G__13606__3 = (function() { 
var G__13607__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__13607 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__13608__i = 0, G__13608__a = new Array(arguments.length -  2);
while (G__13608__i < G__13608__a.length) {G__13608__a[G__13608__i] = arguments[G__13608__i + 2]; ++G__13608__i;}
  zs = new cljs.core.IndexedSeq(G__13608__a,0);
} 
return G__13607__delegate.call(this,x,y,zs);};
G__13607.cljs$lang$maxFixedArity = 2;
G__13607.cljs$lang$applyTo = (function (arglist__13609){
var x = cljs.core.first(arglist__13609);
arglist__13609 = cljs.core.next(arglist__13609);
var y = cljs.core.first(arglist__13609);
var zs = cljs.core.rest(arglist__13609);
return G__13607__delegate(x,y,zs);
});
G__13607.cljs$core$IFn$_invoke$arity$variadic = G__13607__delegate;
return G__13607;
})()
;
G__13606 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__13606__0.call(this);
case 1:
return G__13606__1.call(this,x);
case 2:
return G__13606__2.call(this,x,y);
default:
var G__13610 = null;
if (arguments.length > 2) {
var G__13611__i = 0, G__13611__a = new Array(arguments.length -  2);
while (G__13611__i < G__13611__a.length) {G__13611__a[G__13611__i] = arguments[G__13611__i + 2]; ++G__13611__i;}
G__13610 = new cljs.core.IndexedSeq(G__13611__a,0);
}
return G__13606__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13610);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13606.cljs$lang$maxFixedArity = 2;
G__13606.cljs$lang$applyTo = G__13606__3.cljs$lang$applyTo;
G__13606.cljs$core$IFn$_invoke$arity$0 = G__13606__0;
G__13606.cljs$core$IFn$_invoke$arity$1 = G__13606__1;
G__13606.cljs$core$IFn$_invoke$arity$2 = G__13606__2;
G__13606.cljs$core$IFn$_invoke$arity$variadic = G__13606__3.cljs$core$IFn$_invoke$arity$variadic;
return G__13606;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__13612__delegate = function (args){
return x;
};
var G__13612 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13613__i = 0, G__13613__a = new Array(arguments.length -  0);
while (G__13613__i < G__13613__a.length) {G__13613__a[G__13613__i] = arguments[G__13613__i + 0]; ++G__13613__i;}
  args = new cljs.core.IndexedSeq(G__13613__a,0);
} 
return G__13612__delegate.call(this,args);};
G__13612.cljs$lang$maxFixedArity = 0;
G__13612.cljs$lang$applyTo = (function (arglist__13614){
var args = cljs.core.seq(arglist__13614);
return G__13612__delegate(args);
});
G__13612.cljs$core$IFn$_invoke$arity$variadic = G__13612__delegate;
return G__13612;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__13669 = null;
var G__13669__0 = (function (){
var G__13642 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13642) : f.call(null,G__13642));
});
var G__13669__1 = (function (x){
var G__13643 = (function (){var G__13644 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13644) : g.call(null,G__13644));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13643) : f.call(null,G__13643));
});
var G__13669__2 = (function (x,y){
var G__13645 = (function (){var G__13646 = x;
var G__13647 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__13646,G__13647) : g.call(null,G__13646,G__13647));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13645) : f.call(null,G__13645));
});
var G__13669__3 = (function (x,y,z){
var G__13648 = (function (){var G__13649 = x;
var G__13650 = y;
var G__13651 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__13649,G__13650,G__13651) : g.call(null,G__13649,G__13650,G__13651));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13648) : f.call(null,G__13648));
});
var G__13669__4 = (function() { 
var G__13670__delegate = function (x,y,z,args){
var G__13652 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13652) : f.call(null,G__13652));
};
var G__13670 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13671__i = 0, G__13671__a = new Array(arguments.length -  3);
while (G__13671__i < G__13671__a.length) {G__13671__a[G__13671__i] = arguments[G__13671__i + 3]; ++G__13671__i;}
  args = new cljs.core.IndexedSeq(G__13671__a,0);
} 
return G__13670__delegate.call(this,x,y,z,args);};
G__13670.cljs$lang$maxFixedArity = 3;
G__13670.cljs$lang$applyTo = (function (arglist__13672){
var x = cljs.core.first(arglist__13672);
arglist__13672 = cljs.core.next(arglist__13672);
var y = cljs.core.first(arglist__13672);
arglist__13672 = cljs.core.next(arglist__13672);
var z = cljs.core.first(arglist__13672);
var args = cljs.core.rest(arglist__13672);
return G__13670__delegate(x,y,z,args);
});
G__13670.cljs$core$IFn$_invoke$arity$variadic = G__13670__delegate;
return G__13670;
})()
;
G__13669 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13669__0.call(this);
case 1:
return G__13669__1.call(this,x);
case 2:
return G__13669__2.call(this,x,y);
case 3:
return G__13669__3.call(this,x,y,z);
default:
var G__13673 = null;
if (arguments.length > 3) {
var G__13674__i = 0, G__13674__a = new Array(arguments.length -  3);
while (G__13674__i < G__13674__a.length) {G__13674__a[G__13674__i] = arguments[G__13674__i + 3]; ++G__13674__i;}
G__13673 = new cljs.core.IndexedSeq(G__13674__a,0);
}
return G__13669__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13673);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13669.cljs$lang$maxFixedArity = 3;
G__13669.cljs$lang$applyTo = G__13669__4.cljs$lang$applyTo;
G__13669.cljs$core$IFn$_invoke$arity$0 = G__13669__0;
G__13669.cljs$core$IFn$_invoke$arity$1 = G__13669__1;
G__13669.cljs$core$IFn$_invoke$arity$2 = G__13669__2;
G__13669.cljs$core$IFn$_invoke$arity$3 = G__13669__3;
G__13669.cljs$core$IFn$_invoke$arity$variadic = G__13669__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13669;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__13675 = null;
var G__13675__0 = (function (){
var G__13653 = (function (){var G__13654 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13654) : g.call(null,G__13654));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13653) : f.call(null,G__13653));
});
var G__13675__1 = (function (x){
var G__13655 = (function (){var G__13656 = (function (){var G__13657 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__13657) : h.call(null,G__13657));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13656) : g.call(null,G__13656));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13655) : f.call(null,G__13655));
});
var G__13675__2 = (function (x,y){
var G__13658 = (function (){var G__13659 = (function (){var G__13660 = x;
var G__13661 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__13660,G__13661) : h.call(null,G__13660,G__13661));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13659) : g.call(null,G__13659));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13658) : f.call(null,G__13658));
});
var G__13675__3 = (function (x,y,z){
var G__13662 = (function (){var G__13663 = (function (){var G__13664 = x;
var G__13665 = y;
var G__13666 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__13664,G__13665,G__13666) : h.call(null,G__13664,G__13665,G__13666));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13663) : g.call(null,G__13663));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13662) : f.call(null,G__13662));
});
var G__13675__4 = (function() { 
var G__13676__delegate = function (x,y,z,args){
var G__13667 = (function (){var G__13668 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13668) : g.call(null,G__13668));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13667) : f.call(null,G__13667));
};
var G__13676 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13677__i = 0, G__13677__a = new Array(arguments.length -  3);
while (G__13677__i < G__13677__a.length) {G__13677__a[G__13677__i] = arguments[G__13677__i + 3]; ++G__13677__i;}
  args = new cljs.core.IndexedSeq(G__13677__a,0);
} 
return G__13676__delegate.call(this,x,y,z,args);};
G__13676.cljs$lang$maxFixedArity = 3;
G__13676.cljs$lang$applyTo = (function (arglist__13678){
var x = cljs.core.first(arglist__13678);
arglist__13678 = cljs.core.next(arglist__13678);
var y = cljs.core.first(arglist__13678);
arglist__13678 = cljs.core.next(arglist__13678);
var z = cljs.core.first(arglist__13678);
var args = cljs.core.rest(arglist__13678);
return G__13676__delegate(x,y,z,args);
});
G__13676.cljs$core$IFn$_invoke$arity$variadic = G__13676__delegate;
return G__13676;
})()
;
G__13675 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13675__0.call(this);
case 1:
return G__13675__1.call(this,x);
case 2:
return G__13675__2.call(this,x,y);
case 3:
return G__13675__3.call(this,x,y,z);
default:
var G__13679 = null;
if (arguments.length > 3) {
var G__13680__i = 0, G__13680__a = new Array(arguments.length -  3);
while (G__13680__i < G__13680__a.length) {G__13680__a[G__13680__i] = arguments[G__13680__i + 3]; ++G__13680__i;}
G__13679 = new cljs.core.IndexedSeq(G__13680__a,0);
}
return G__13675__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13679);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13675.cljs$lang$maxFixedArity = 3;
G__13675.cljs$lang$applyTo = G__13675__4.cljs$lang$applyTo;
G__13675.cljs$core$IFn$_invoke$arity$0 = G__13675__0;
G__13675.cljs$core$IFn$_invoke$arity$1 = G__13675__1;
G__13675.cljs$core$IFn$_invoke$arity$2 = G__13675__2;
G__13675.cljs$core$IFn$_invoke$arity$3 = G__13675__3;
G__13675.cljs$core$IFn$_invoke$arity$variadic = G__13675__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13675;
})()
});
var comp__4 = (function() { 
var G__13681__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__13682__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__13683 = cljs.core.first(fs__$2).call(null,ret);
var G__13684 = cljs.core.next(fs__$2);
ret = G__13683;
fs__$2 = G__13684;
continue;
} else {
return ret;
}
break;
}
};
var G__13682 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13685__i = 0, G__13685__a = new Array(arguments.length -  0);
while (G__13685__i < G__13685__a.length) {G__13685__a[G__13685__i] = arguments[G__13685__i + 0]; ++G__13685__i;}
  args = new cljs.core.IndexedSeq(G__13685__a,0);
} 
return G__13682__delegate.call(this,args);};
G__13682.cljs$lang$maxFixedArity = 0;
G__13682.cljs$lang$applyTo = (function (arglist__13686){
var args = cljs.core.seq(arglist__13686);
return G__13682__delegate(args);
});
G__13682.cljs$core$IFn$_invoke$arity$variadic = G__13682__delegate;
return G__13682;
})()
;
;})(fs__$1))
};
var G__13681 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__13687__i = 0, G__13687__a = new Array(arguments.length -  3);
while (G__13687__i < G__13687__a.length) {G__13687__a[G__13687__i] = arguments[G__13687__i + 3]; ++G__13687__i;}
  fs = new cljs.core.IndexedSeq(G__13687__a,0);
} 
return G__13681__delegate.call(this,f1,f2,f3,fs);};
G__13681.cljs$lang$maxFixedArity = 3;
G__13681.cljs$lang$applyTo = (function (arglist__13688){
var f1 = cljs.core.first(arglist__13688);
arglist__13688 = cljs.core.next(arglist__13688);
var f2 = cljs.core.first(arglist__13688);
arglist__13688 = cljs.core.next(arglist__13688);
var f3 = cljs.core.first(arglist__13688);
var fs = cljs.core.rest(arglist__13688);
return G__13681__delegate(f1,f2,f3,fs);
});
G__13681.cljs$core$IFn$_invoke$arity$variadic = G__13681__delegate;
return G__13681;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__13689 = null;
if (arguments.length > 3) {
var G__13690__i = 0, G__13690__a = new Array(arguments.length -  3);
while (G__13690__i < G__13690__a.length) {G__13690__a[G__13690__i] = arguments[G__13690__i + 3]; ++G__13690__i;}
G__13689 = new cljs.core.IndexedSeq(G__13690__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__13689);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__13775 = null;
var G__13775__0 = (function (){
var G__13733 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13733) : f.call(null,G__13733));
});
var G__13775__1 = (function (x){
var G__13734 = arg1;
var G__13735 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13734,G__13735) : f.call(null,G__13734,G__13735));
});
var G__13775__2 = (function (x,y){
var G__13736 = arg1;
var G__13737 = x;
var G__13738 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13736,G__13737,G__13738) : f.call(null,G__13736,G__13737,G__13738));
});
var G__13775__3 = (function (x,y,z){
var G__13739 = arg1;
var G__13740 = x;
var G__13741 = y;
var G__13742 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13739,G__13740,G__13741,G__13742) : f.call(null,G__13739,G__13740,G__13741,G__13742));
});
var G__13775__4 = (function() { 
var G__13776__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__13776 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13777__i = 0, G__13777__a = new Array(arguments.length -  3);
while (G__13777__i < G__13777__a.length) {G__13777__a[G__13777__i] = arguments[G__13777__i + 3]; ++G__13777__i;}
  args = new cljs.core.IndexedSeq(G__13777__a,0);
} 
return G__13776__delegate.call(this,x,y,z,args);};
G__13776.cljs$lang$maxFixedArity = 3;
G__13776.cljs$lang$applyTo = (function (arglist__13778){
var x = cljs.core.first(arglist__13778);
arglist__13778 = cljs.core.next(arglist__13778);
var y = cljs.core.first(arglist__13778);
arglist__13778 = cljs.core.next(arglist__13778);
var z = cljs.core.first(arglist__13778);
var args = cljs.core.rest(arglist__13778);
return G__13776__delegate(x,y,z,args);
});
G__13776.cljs$core$IFn$_invoke$arity$variadic = G__13776__delegate;
return G__13776;
})()
;
G__13775 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13775__0.call(this);
case 1:
return G__13775__1.call(this,x);
case 2:
return G__13775__2.call(this,x,y);
case 3:
return G__13775__3.call(this,x,y,z);
default:
var G__13779 = null;
if (arguments.length > 3) {
var G__13780__i = 0, G__13780__a = new Array(arguments.length -  3);
while (G__13780__i < G__13780__a.length) {G__13780__a[G__13780__i] = arguments[G__13780__i + 3]; ++G__13780__i;}
G__13779 = new cljs.core.IndexedSeq(G__13780__a,0);
}
return G__13775__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13779);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13775.cljs$lang$maxFixedArity = 3;
G__13775.cljs$lang$applyTo = G__13775__4.cljs$lang$applyTo;
G__13775.cljs$core$IFn$_invoke$arity$0 = G__13775__0;
G__13775.cljs$core$IFn$_invoke$arity$1 = G__13775__1;
G__13775.cljs$core$IFn$_invoke$arity$2 = G__13775__2;
G__13775.cljs$core$IFn$_invoke$arity$3 = G__13775__3;
G__13775.cljs$core$IFn$_invoke$arity$variadic = G__13775__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13775;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__13781 = null;
var G__13781__0 = (function (){
var G__13743 = arg1;
var G__13744 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13743,G__13744) : f.call(null,G__13743,G__13744));
});
var G__13781__1 = (function (x){
var G__13745 = arg1;
var G__13746 = arg2;
var G__13747 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13745,G__13746,G__13747) : f.call(null,G__13745,G__13746,G__13747));
});
var G__13781__2 = (function (x,y){
var G__13748 = arg1;
var G__13749 = arg2;
var G__13750 = x;
var G__13751 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13748,G__13749,G__13750,G__13751) : f.call(null,G__13748,G__13749,G__13750,G__13751));
});
var G__13781__3 = (function (x,y,z){
var G__13752 = arg1;
var G__13753 = arg2;
var G__13754 = x;
var G__13755 = y;
var G__13756 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13752,G__13753,G__13754,G__13755,G__13756) : f.call(null,G__13752,G__13753,G__13754,G__13755,G__13756));
});
var G__13781__4 = (function() { 
var G__13782__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__13782 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13783__i = 0, G__13783__a = new Array(arguments.length -  3);
while (G__13783__i < G__13783__a.length) {G__13783__a[G__13783__i] = arguments[G__13783__i + 3]; ++G__13783__i;}
  args = new cljs.core.IndexedSeq(G__13783__a,0);
} 
return G__13782__delegate.call(this,x,y,z,args);};
G__13782.cljs$lang$maxFixedArity = 3;
G__13782.cljs$lang$applyTo = (function (arglist__13784){
var x = cljs.core.first(arglist__13784);
arglist__13784 = cljs.core.next(arglist__13784);
var y = cljs.core.first(arglist__13784);
arglist__13784 = cljs.core.next(arglist__13784);
var z = cljs.core.first(arglist__13784);
var args = cljs.core.rest(arglist__13784);
return G__13782__delegate(x,y,z,args);
});
G__13782.cljs$core$IFn$_invoke$arity$variadic = G__13782__delegate;
return G__13782;
})()
;
G__13781 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13781__0.call(this);
case 1:
return G__13781__1.call(this,x);
case 2:
return G__13781__2.call(this,x,y);
case 3:
return G__13781__3.call(this,x,y,z);
default:
var G__13785 = null;
if (arguments.length > 3) {
var G__13786__i = 0, G__13786__a = new Array(arguments.length -  3);
while (G__13786__i < G__13786__a.length) {G__13786__a[G__13786__i] = arguments[G__13786__i + 3]; ++G__13786__i;}
G__13785 = new cljs.core.IndexedSeq(G__13786__a,0);
}
return G__13781__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13785);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13781.cljs$lang$maxFixedArity = 3;
G__13781.cljs$lang$applyTo = G__13781__4.cljs$lang$applyTo;
G__13781.cljs$core$IFn$_invoke$arity$0 = G__13781__0;
G__13781.cljs$core$IFn$_invoke$arity$1 = G__13781__1;
G__13781.cljs$core$IFn$_invoke$arity$2 = G__13781__2;
G__13781.cljs$core$IFn$_invoke$arity$3 = G__13781__3;
G__13781.cljs$core$IFn$_invoke$arity$variadic = G__13781__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13781;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__13787 = null;
var G__13787__0 = (function (){
var G__13757 = arg1;
var G__13758 = arg2;
var G__13759 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13757,G__13758,G__13759) : f.call(null,G__13757,G__13758,G__13759));
});
var G__13787__1 = (function (x){
var G__13760 = arg1;
var G__13761 = arg2;
var G__13762 = arg3;
var G__13763 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13760,G__13761,G__13762,G__13763) : f.call(null,G__13760,G__13761,G__13762,G__13763));
});
var G__13787__2 = (function (x,y){
var G__13764 = arg1;
var G__13765 = arg2;
var G__13766 = arg3;
var G__13767 = x;
var G__13768 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13764,G__13765,G__13766,G__13767,G__13768) : f.call(null,G__13764,G__13765,G__13766,G__13767,G__13768));
});
var G__13787__3 = (function (x,y,z){
var G__13769 = arg1;
var G__13770 = arg2;
var G__13771 = arg3;
var G__13772 = x;
var G__13773 = y;
var G__13774 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__13769,G__13770,G__13771,G__13772,G__13773,G__13774) : f.call(null,G__13769,G__13770,G__13771,G__13772,G__13773,G__13774));
});
var G__13787__4 = (function() { 
var G__13788__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__13788 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__13789__i = 0, G__13789__a = new Array(arguments.length -  3);
while (G__13789__i < G__13789__a.length) {G__13789__a[G__13789__i] = arguments[G__13789__i + 3]; ++G__13789__i;}
  args = new cljs.core.IndexedSeq(G__13789__a,0);
} 
return G__13788__delegate.call(this,x,y,z,args);};
G__13788.cljs$lang$maxFixedArity = 3;
G__13788.cljs$lang$applyTo = (function (arglist__13790){
var x = cljs.core.first(arglist__13790);
arglist__13790 = cljs.core.next(arglist__13790);
var y = cljs.core.first(arglist__13790);
arglist__13790 = cljs.core.next(arglist__13790);
var z = cljs.core.first(arglist__13790);
var args = cljs.core.rest(arglist__13790);
return G__13788__delegate(x,y,z,args);
});
G__13788.cljs$core$IFn$_invoke$arity$variadic = G__13788__delegate;
return G__13788;
})()
;
G__13787 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__13787__0.call(this);
case 1:
return G__13787__1.call(this,x);
case 2:
return G__13787__2.call(this,x,y);
case 3:
return G__13787__3.call(this,x,y,z);
default:
var G__13791 = null;
if (arguments.length > 3) {
var G__13792__i = 0, G__13792__a = new Array(arguments.length -  3);
while (G__13792__i < G__13792__a.length) {G__13792__a[G__13792__i] = arguments[G__13792__i + 3]; ++G__13792__i;}
G__13791 = new cljs.core.IndexedSeq(G__13792__a,0);
}
return G__13787__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13787.cljs$lang$maxFixedArity = 3;
G__13787.cljs$lang$applyTo = G__13787__4.cljs$lang$applyTo;
G__13787.cljs$core$IFn$_invoke$arity$0 = G__13787__0;
G__13787.cljs$core$IFn$_invoke$arity$1 = G__13787__1;
G__13787.cljs$core$IFn$_invoke$arity$2 = G__13787__2;
G__13787.cljs$core$IFn$_invoke$arity$3 = G__13787__3;
G__13787.cljs$core$IFn$_invoke$arity$variadic = G__13787__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13787;
})()
});
var partial__5 = (function() { 
var G__13793__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__13794__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__13794 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__13795__i = 0, G__13795__a = new Array(arguments.length -  0);
while (G__13795__i < G__13795__a.length) {G__13795__a[G__13795__i] = arguments[G__13795__i + 0]; ++G__13795__i;}
  args = new cljs.core.IndexedSeq(G__13795__a,0);
} 
return G__13794__delegate.call(this,args);};
G__13794.cljs$lang$maxFixedArity = 0;
G__13794.cljs$lang$applyTo = (function (arglist__13796){
var args = cljs.core.seq(arglist__13796);
return G__13794__delegate(args);
});
G__13794.cljs$core$IFn$_invoke$arity$variadic = G__13794__delegate;
return G__13794;
})()
;
};
var G__13793 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__13797__i = 0, G__13797__a = new Array(arguments.length -  4);
while (G__13797__i < G__13797__a.length) {G__13797__a[G__13797__i] = arguments[G__13797__i + 4]; ++G__13797__i;}
  more = new cljs.core.IndexedSeq(G__13797__a,0);
} 
return G__13793__delegate.call(this,f,arg1,arg2,arg3,more);};
G__13793.cljs$lang$maxFixedArity = 4;
G__13793.cljs$lang$applyTo = (function (arglist__13798){
var f = cljs.core.first(arglist__13798);
arglist__13798 = cljs.core.next(arglist__13798);
var arg1 = cljs.core.first(arglist__13798);
arglist__13798 = cljs.core.next(arglist__13798);
var arg2 = cljs.core.first(arglist__13798);
arglist__13798 = cljs.core.next(arglist__13798);
var arg3 = cljs.core.first(arglist__13798);
var more = cljs.core.rest(arglist__13798);
return G__13793__delegate(f,arg1,arg2,arg3,more);
});
G__13793.cljs$core$IFn$_invoke$arity$variadic = G__13793__delegate;
return G__13793;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__13799 = null;
if (arguments.length > 4) {
var G__13800__i = 0, G__13800__a = new Array(arguments.length -  4);
while (G__13800__i < G__13800__a.length) {G__13800__a[G__13800__i] = arguments[G__13800__i + 4]; ++G__13800__i;}
G__13799 = new cljs.core.IndexedSeq(G__13800__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__13799);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__13833 = null;
var G__13833__1 = (function (a){
var G__13817 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13817) : f.call(null,G__13817));
});
var G__13833__2 = (function (a,b){
var G__13818 = (((a == null))?x:a);
var G__13819 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13818,G__13819) : f.call(null,G__13818,G__13819));
});
var G__13833__3 = (function (a,b,c){
var G__13820 = (((a == null))?x:a);
var G__13821 = b;
var G__13822 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13820,G__13821,G__13822) : f.call(null,G__13820,G__13821,G__13822));
});
var G__13833__4 = (function() { 
var G__13834__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__13834 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13835__i = 0, G__13835__a = new Array(arguments.length -  3);
while (G__13835__i < G__13835__a.length) {G__13835__a[G__13835__i] = arguments[G__13835__i + 3]; ++G__13835__i;}
  ds = new cljs.core.IndexedSeq(G__13835__a,0);
} 
return G__13834__delegate.call(this,a,b,c,ds);};
G__13834.cljs$lang$maxFixedArity = 3;
G__13834.cljs$lang$applyTo = (function (arglist__13836){
var a = cljs.core.first(arglist__13836);
arglist__13836 = cljs.core.next(arglist__13836);
var b = cljs.core.first(arglist__13836);
arglist__13836 = cljs.core.next(arglist__13836);
var c = cljs.core.first(arglist__13836);
var ds = cljs.core.rest(arglist__13836);
return G__13834__delegate(a,b,c,ds);
});
G__13834.cljs$core$IFn$_invoke$arity$variadic = G__13834__delegate;
return G__13834;
})()
;
G__13833 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__13833__1.call(this,a);
case 2:
return G__13833__2.call(this,a,b);
case 3:
return G__13833__3.call(this,a,b,c);
default:
var G__13837 = null;
if (arguments.length > 3) {
var G__13838__i = 0, G__13838__a = new Array(arguments.length -  3);
while (G__13838__i < G__13838__a.length) {G__13838__a[G__13838__i] = arguments[G__13838__i + 3]; ++G__13838__i;}
G__13837 = new cljs.core.IndexedSeq(G__13838__a,0);
}
return G__13833__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13837);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13833.cljs$lang$maxFixedArity = 3;
G__13833.cljs$lang$applyTo = G__13833__4.cljs$lang$applyTo;
G__13833.cljs$core$IFn$_invoke$arity$1 = G__13833__1;
G__13833.cljs$core$IFn$_invoke$arity$2 = G__13833__2;
G__13833.cljs$core$IFn$_invoke$arity$3 = G__13833__3;
G__13833.cljs$core$IFn$_invoke$arity$variadic = G__13833__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13833;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__13839 = null;
var G__13839__2 = (function (a,b){
var G__13823 = (((a == null))?x:a);
var G__13824 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13823,G__13824) : f.call(null,G__13823,G__13824));
});
var G__13839__3 = (function (a,b,c){
var G__13825 = (((a == null))?x:a);
var G__13826 = (((b == null))?y:b);
var G__13827 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13825,G__13826,G__13827) : f.call(null,G__13825,G__13826,G__13827));
});
var G__13839__4 = (function() { 
var G__13840__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__13840 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13841__i = 0, G__13841__a = new Array(arguments.length -  3);
while (G__13841__i < G__13841__a.length) {G__13841__a[G__13841__i] = arguments[G__13841__i + 3]; ++G__13841__i;}
  ds = new cljs.core.IndexedSeq(G__13841__a,0);
} 
return G__13840__delegate.call(this,a,b,c,ds);};
G__13840.cljs$lang$maxFixedArity = 3;
G__13840.cljs$lang$applyTo = (function (arglist__13842){
var a = cljs.core.first(arglist__13842);
arglist__13842 = cljs.core.next(arglist__13842);
var b = cljs.core.first(arglist__13842);
arglist__13842 = cljs.core.next(arglist__13842);
var c = cljs.core.first(arglist__13842);
var ds = cljs.core.rest(arglist__13842);
return G__13840__delegate(a,b,c,ds);
});
G__13840.cljs$core$IFn$_invoke$arity$variadic = G__13840__delegate;
return G__13840;
})()
;
G__13839 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13839__2.call(this,a,b);
case 3:
return G__13839__3.call(this,a,b,c);
default:
var G__13843 = null;
if (arguments.length > 3) {
var G__13844__i = 0, G__13844__a = new Array(arguments.length -  3);
while (G__13844__i < G__13844__a.length) {G__13844__a[G__13844__i] = arguments[G__13844__i + 3]; ++G__13844__i;}
G__13843 = new cljs.core.IndexedSeq(G__13844__a,0);
}
return G__13839__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13843);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13839.cljs$lang$maxFixedArity = 3;
G__13839.cljs$lang$applyTo = G__13839__4.cljs$lang$applyTo;
G__13839.cljs$core$IFn$_invoke$arity$2 = G__13839__2;
G__13839.cljs$core$IFn$_invoke$arity$3 = G__13839__3;
G__13839.cljs$core$IFn$_invoke$arity$variadic = G__13839__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13839;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__13845 = null;
var G__13845__2 = (function (a,b){
var G__13828 = (((a == null))?x:a);
var G__13829 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13828,G__13829) : f.call(null,G__13828,G__13829));
});
var G__13845__3 = (function (a,b,c){
var G__13830 = (((a == null))?x:a);
var G__13831 = (((b == null))?y:b);
var G__13832 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13830,G__13831,G__13832) : f.call(null,G__13830,G__13831,G__13832));
});
var G__13845__4 = (function() { 
var G__13846__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__13846 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__13847__i = 0, G__13847__a = new Array(arguments.length -  3);
while (G__13847__i < G__13847__a.length) {G__13847__a[G__13847__i] = arguments[G__13847__i + 3]; ++G__13847__i;}
  ds = new cljs.core.IndexedSeq(G__13847__a,0);
} 
return G__13846__delegate.call(this,a,b,c,ds);};
G__13846.cljs$lang$maxFixedArity = 3;
G__13846.cljs$lang$applyTo = (function (arglist__13848){
var a = cljs.core.first(arglist__13848);
arglist__13848 = cljs.core.next(arglist__13848);
var b = cljs.core.first(arglist__13848);
arglist__13848 = cljs.core.next(arglist__13848);
var c = cljs.core.first(arglist__13848);
var ds = cljs.core.rest(arglist__13848);
return G__13846__delegate(a,b,c,ds);
});
G__13846.cljs$core$IFn$_invoke$arity$variadic = G__13846__delegate;
return G__13846;
})()
;
G__13845 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__13845__2.call(this,a,b);
case 3:
return G__13845__3.call(this,a,b,c);
default:
var G__13849 = null;
if (arguments.length > 3) {
var G__13850__i = 0, G__13850__a = new Array(arguments.length -  3);
while (G__13850__i < G__13850__a.length) {G__13850__a[G__13850__i] = arguments[G__13850__i + 3]; ++G__13850__i;}
G__13849 = new cljs.core.IndexedSeq(G__13850__a,0);
}
return G__13845__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13849);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13845.cljs$lang$maxFixedArity = 3;
G__13845.cljs$lang$applyTo = G__13845__4.cljs$lang$applyTo;
G__13845.cljs$core$IFn$_invoke$arity$2 = G__13845__2;
G__13845.cljs$core$IFn$_invoke$arity$3 = G__13845__3;
G__13845.cljs$core$IFn$_invoke$arity$variadic = G__13845__4.cljs$core$IFn$_invoke$arity$variadic;
return G__13845;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__13881 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__13881) : cljs.core.volatile_BANG_.call(null,G__13881));
})();
return ((function (i){
return (function() {
var G__13911 = null;
var G__13911__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13911__1 = (function (result){
var G__13882 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13882) : rf.call(null,G__13882));
});
var G__13911__2 = (function (result,input){
var G__13883 = result;
var G__13884 = (function (){var G__13885 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__13886 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13885,G__13886) : f.call(null,G__13885,G__13886));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13883,G__13884) : rf.call(null,G__13883,G__13884));
});
G__13911 = function(result,input){
switch(arguments.length){
case 0:
return G__13911__0.call(this);
case 1:
return G__13911__1.call(this,result);
case 2:
return G__13911__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13911.cljs$core$IFn$_invoke$arity$0 = G__13911__0;
G__13911.cljs$core$IFn$_invoke$arity$1 = G__13911__1;
G__13911.cljs$core$IFn$_invoke$arity$2 = G__13911__2;
return G__13911;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___13912 = size;
var i_13913 = (0);
while(true){
if((i_13913 < n__4698__auto___13912)){
cljs.core.chunk_append(b,(function (){var G__13907 = (idx + i_13913);
var G__13908 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13913);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13907,G__13908) : f.call(null,G__13907,G__13908));
})());

var G__13914 = (i_13913 + (1));
i_13913 = G__13914;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__13909 = idx;
var G__13910 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13909,G__13910) : f.call(null,G__13909,G__13910));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__13933 = null;
var G__13933__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__13933__1 = (function (result){
var G__13927 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13927) : rf.call(null,G__13927));
});
var G__13933__2 = (function (result,input){
var v = (function (){var G__13928 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13928) : f.call(null,G__13928));
})();
if((v == null)){
return result;
} else {
var G__13929 = result;
var G__13930 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13929,G__13930) : rf.call(null,G__13929,G__13930));
}
});
G__13933 = function(result,input){
switch(arguments.length){
case 0:
return G__13933__0.call(this);
case 1:
return G__13933__1.call(this,result);
case 2:
return G__13933__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__13933.cljs$core$IFn$_invoke$arity$0 = G__13933__0;
G__13933.cljs$core$IFn$_invoke$arity$1 = G__13933__1;
G__13933.cljs$core$IFn$_invoke$arity$2 = G__13933__2;
return G__13933;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___13934 = size;
var i_13935 = (0);
while(true){
if((i_13935 < n__4698__auto___13934)){
var x_13936 = (function (){var G__13931 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_13935);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13931) : f.call(null,G__13931));
})();
if((x_13936 == null)){
} else {
cljs.core.chunk_append(b,x_13936);
}

var G__13937 = (i_13935 + (1));
i_13935 = G__13937;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__13932 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13932) : f.call(null,G__13932));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__13938 = this$__$1;
return goog.getUid(G__13938);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__13939 = cljs.core.seq(self__.watches);
var chunk__13940 = null;
var count__13941 = (0);
var i__13942 = (0);
while(true){
if((i__13942 < count__13941)){
var vec__13943 = chunk__13940.cljs$core$IIndexed$_nth$arity$2(null,i__13942);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13943,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13943,(1),null);
var G__13944_13953 = key;
var G__13945_13954 = this$__$1;
var G__13946_13955 = oldval;
var G__13947_13956 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13944_13953,G__13945_13954,G__13946_13955,G__13947_13956) : f.call(null,G__13944_13953,G__13945_13954,G__13946_13955,G__13947_13956));

var G__13957 = seq__13939;
var G__13958 = chunk__13940;
var G__13959 = count__13941;
var G__13960 = (i__13942 + (1));
seq__13939 = G__13957;
chunk__13940 = G__13958;
count__13941 = G__13959;
i__13942 = G__13960;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__13939);
if(temp__4126__auto__){
var seq__13939__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__13939__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__13939__$1);
var G__13961 = cljs.core.chunk_rest(seq__13939__$1);
var G__13962 = c__4598__auto__;
var G__13963 = cljs.core.count(c__4598__auto__);
var G__13964 = (0);
seq__13939 = G__13961;
chunk__13940 = G__13962;
count__13941 = G__13963;
i__13942 = G__13964;
continue;
} else {
var vec__13948 = cljs.core.first(seq__13939__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13948,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13948,(1),null);
var G__13949_13965 = key;
var G__13950_13966 = this$__$1;
var G__13951_13967 = oldval;
var G__13952_13968 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13949_13965,G__13950_13966,G__13951_13967,G__13952_13968) : f.call(null,G__13949_13965,G__13950_13966,G__13951_13967,G__13952_13968));

var G__13969 = cljs.core.next(seq__13939__$1);
var G__13970 = null;
var G__13971 = (0);
var G__13972 = (0);
seq__13939 = G__13969;
chunk__13940 = G__13970;
count__13941 = G__13971;
i__13942 = G__13972;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__13976__delegate = function (x,p__13973){
var map__13975 = p__13973;
var map__13975__$1 = ((cljs.core.seq_QMARK_(map__13975))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__13975):map__13975);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13975__$1,new cljs.core.Keyword(null,"validator","validator",-1966190681));
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13975__$1,new cljs.core.Keyword(null,"meta","meta",1499536964));
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__13976 = function (x,var_args){
var p__13973 = null;
if (arguments.length > 1) {
var G__13977__i = 0, G__13977__a = new Array(arguments.length -  1);
while (G__13977__i < G__13977__a.length) {G__13977__a[G__13977__i] = arguments[G__13977__i + 1]; ++G__13977__i;}
  p__13973 = new cljs.core.IndexedSeq(G__13977__a,0);
} 
return G__13976__delegate.call(this,x,p__13973);};
G__13976.cljs$lang$maxFixedArity = 1;
G__13976.cljs$lang$applyTo = (function (arglist__13978){
var x = cljs.core.first(arglist__13978);
var p__13973 = cljs.core.rest(arglist__13978);
return G__13976__delegate(x,p__13973);
});
G__13976.cljs$core$IFn$_invoke$arity$variadic = G__13976__delegate;
return G__13976;
})()
;
atom = function(x,var_args){
var p__13973 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__13979 = null;
if (arguments.length > 1) {
var G__13980__i = 0, G__13980__a = new Array(arguments.length -  1);
while (G__13980__i < G__13980__a.length) {G__13980__a[G__13980__i] = arguments[G__13980__i + 1]; ++G__13980__i;}
G__13979 = new cljs.core.IndexedSeq(G__13980__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__13979);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__13983 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__13983) : validate.call(null,G__13983));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__13984 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__13984) : cljs.core.pr_str.call(null,G__13984));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13991 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13991) : f.call(null,G__13991));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13992 = a.state;
var G__13993 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13992,G__13993) : f.call(null,G__13992,G__13993));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__13994 = a.state;
var G__13995 = x;
var G__13996 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13994,G__13995,G__13996) : f.call(null,G__13994,G__13995,G__13996));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__13997__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__13997 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__13998__i = 0, G__13998__a = new Array(arguments.length -  4);
while (G__13998__i < G__13998__a.length) {G__13998__a[G__13998__i] = arguments[G__13998__i + 4]; ++G__13998__i;}
  more = new cljs.core.IndexedSeq(G__13998__a,0);
} 
return G__13997__delegate.call(this,a,f,x,y,more);};
G__13997.cljs$lang$maxFixedArity = 4;
G__13997.cljs$lang$applyTo = (function (arglist__13999){
var a = cljs.core.first(arglist__13999);
arglist__13999 = cljs.core.next(arglist__13999);
var f = cljs.core.first(arglist__13999);
arglist__13999 = cljs.core.next(arglist__13999);
var x = cljs.core.first(arglist__13999);
arglist__13999 = cljs.core.next(arglist__13999);
var y = cljs.core.first(arglist__13999);
var more = cljs.core.rest(arglist__13999);
return G__13997__delegate(a,f,x,y,more);
});
G__13997.cljs$core$IFn$_invoke$arity$variadic = G__13997__delegate;
return G__13997;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__14000 = null;
if (arguments.length > 4) {
var G__14001__i = 0, G__14001__a = new Array(arguments.length -  4);
while (G__14001__i < G__14001__a.length) {G__14001__a[G__14001__i] = arguments[G__14001__i + 4]; ++G__14001__i;}
G__14000 = new cljs.core.IndexedSeq(G__14001__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__14000);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__14068 = null;
var G__14068__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14068__1 = (function (result){
var G__14035 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14035) : rf.call(null,G__14035));
});
var G__14068__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__14036 = i;
var G__14037 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14036,G__14037) : f.call(null,G__14036,G__14037));
})();
if((v == null)){
return result;
} else {
var G__14038 = result;
var G__14039 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14038,G__14039) : rf.call(null,G__14038,G__14039));
}
});
G__14068 = function(result,input){
switch(arguments.length){
case 0:
return G__14068__0.call(this);
case 1:
return G__14068__1.call(this,result);
case 2:
return G__14068__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14068.cljs$core$IFn$_invoke$arity$0 = G__14068__0;
G__14068.cljs$core$IFn$_invoke$arity$1 = G__14068__1;
G__14068.cljs$core$IFn$_invoke$arity$2 = G__14068__2;
return G__14068;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___14069 = size;
var i_14070 = (0);
while(true){
if((i_14070 < n__4698__auto___14069)){
var x_14071 = (function (){var G__14064 = (idx + i_14070);
var G__14065 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14070);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14064,G__14065) : f.call(null,G__14064,G__14065));
})();
if((x_14071 == null)){
} else {
cljs.core.chunk_append(b,x_14071);
}

var G__14072 = (i_14070 + (1));
i_14070 = G__14072;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__14066 = idx;
var G__14067 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14066,G__14067) : f.call(null,G__14066,G__14067));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__14286 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14286) : p.call(null,G__14286));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__14288 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14288) : p.call(null,G__14288));
})();
if(cljs.core.truth_(and__3799__auto__)){
var G__14289 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14289) : p.call(null,G__14289));
} else {
return and__3799__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__14291 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14291) : p.call(null,G__14291));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__14293 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14293) : p.call(null,G__14293));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var G__14294 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14294) : p.call(null,G__14294));
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__14463__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__14463 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14464__i = 0, G__14464__a = new Array(arguments.length -  3);
while (G__14464__i < G__14464__a.length) {G__14464__a[G__14464__i] = arguments[G__14464__i + 3]; ++G__14464__i;}
  args = new cljs.core.IndexedSeq(G__14464__a,0);
} 
return G__14463__delegate.call(this,x,y,z,args);};
G__14463.cljs$lang$maxFixedArity = 3;
G__14463.cljs$lang$applyTo = (function (arglist__14465){
var x = cljs.core.first(arglist__14465);
arglist__14465 = cljs.core.next(arglist__14465);
var y = cljs.core.first(arglist__14465);
arglist__14465 = cljs.core.next(arglist__14465);
var z = cljs.core.first(arglist__14465);
var args = cljs.core.rest(arglist__14465);
return G__14463__delegate(x,y,z,args);
});
G__14463.cljs$core$IFn$_invoke$arity$variadic = G__14463__delegate;
return G__14463;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__14466 = null;
if (arguments.length > 3) {
var G__14467__i = 0, G__14467__a = new Array(arguments.length -  3);
while (G__14467__i < G__14467__a.length) {G__14467__a[G__14467__i] = arguments[G__14467__i + 3]; ++G__14467__i;}
G__14466 = new cljs.core.IndexedSeq(G__14467__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__14326 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14326) : p1.call(null,G__14326));
})();
if(cljs.core.truth_(and__3799__auto__)){
var G__14327 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14327) : p2.call(null,G__14327));
} else {
return and__3799__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__14329 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14329) : p1.call(null,G__14329));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__14331 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14331) : p1.call(null,G__14331));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var and__3799__auto____$2 = (function (){var G__14333 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14333) : p2.call(null,G__14333));
})();
if(cljs.core.truth_(and__3799__auto____$2)){
var G__14334 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14334) : p2.call(null,G__14334));
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__14336 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14336) : p1.call(null,G__14336));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__14338 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14338) : p1.call(null,G__14338));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var and__3799__auto____$2 = (function (){var G__14340 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14340) : p1.call(null,G__14340));
})();
if(cljs.core.truth_(and__3799__auto____$2)){
var and__3799__auto____$3 = (function (){var G__14342 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14342) : p2.call(null,G__14342));
})();
if(cljs.core.truth_(and__3799__auto____$3)){
var and__3799__auto____$4 = (function (){var G__14344 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14344) : p2.call(null,G__14344));
})();
if(cljs.core.truth_(and__3799__auto____$4)){
var G__14345 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14345) : p2.call(null,G__14345));
} else {
return and__3799__auto____$4;
}
} else {
return and__3799__auto____$3;
}
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__14468__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__14073_SHARP_){
var and__3799__auto__ = (function (){var G__14350 = p1__14073_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14350) : p1.call(null,G__14350));
})();
if(cljs.core.truth_(and__3799__auto__)){
var G__14351 = p1__14073_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14351) : p2.call(null,G__14351));
} else {
return and__3799__auto__;
}
}),args)));
};
var G__14468 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14469__i = 0, G__14469__a = new Array(arguments.length -  3);
while (G__14469__i < G__14469__a.length) {G__14469__a[G__14469__i] = arguments[G__14469__i + 3]; ++G__14469__i;}
  args = new cljs.core.IndexedSeq(G__14469__a,0);
} 
return G__14468__delegate.call(this,x,y,z,args);};
G__14468.cljs$lang$maxFixedArity = 3;
G__14468.cljs$lang$applyTo = (function (arglist__14470){
var x = cljs.core.first(arglist__14470);
arglist__14470 = cljs.core.next(arglist__14470);
var y = cljs.core.first(arglist__14470);
arglist__14470 = cljs.core.next(arglist__14470);
var z = cljs.core.first(arglist__14470);
var args = cljs.core.rest(arglist__14470);
return G__14468__delegate(x,y,z,args);
});
G__14468.cljs$core$IFn$_invoke$arity$variadic = G__14468__delegate;
return G__14468;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__14471 = null;
if (arguments.length > 3) {
var G__14472__i = 0, G__14472__a = new Array(arguments.length -  3);
while (G__14472__i < G__14472__a.length) {G__14472__a[G__14472__i] = arguments[G__14472__i + 3]; ++G__14472__i;}
G__14471 = new cljs.core.IndexedSeq(G__14472__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14471);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__14397 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14397) : p1.call(null,G__14397));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__14399 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14399) : p2.call(null,G__14399));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var G__14400 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14400) : p3.call(null,G__14400));
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__14402 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14402) : p1.call(null,G__14402));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__14404 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14404) : p2.call(null,G__14404));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var and__3799__auto____$2 = (function (){var G__14406 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14406) : p3.call(null,G__14406));
})();
if(cljs.core.truth_(and__3799__auto____$2)){
var and__3799__auto____$3 = (function (){var G__14408 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14408) : p1.call(null,G__14408));
})();
if(cljs.core.truth_(and__3799__auto____$3)){
var and__3799__auto____$4 = (function (){var G__14410 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14410) : p2.call(null,G__14410));
})();
if(cljs.core.truth_(and__3799__auto____$4)){
var G__14411 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14411) : p3.call(null,G__14411));
} else {
return and__3799__auto____$4;
}
} else {
return and__3799__auto____$3;
}
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3799__auto__ = (function (){var G__14413 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14413) : p1.call(null,G__14413));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__14415 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14415) : p2.call(null,G__14415));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var and__3799__auto____$2 = (function (){var G__14417 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14417) : p3.call(null,G__14417));
})();
if(cljs.core.truth_(and__3799__auto____$2)){
var and__3799__auto____$3 = (function (){var G__14419 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14419) : p1.call(null,G__14419));
})();
if(cljs.core.truth_(and__3799__auto____$3)){
var and__3799__auto____$4 = (function (){var G__14421 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14421) : p2.call(null,G__14421));
})();
if(cljs.core.truth_(and__3799__auto____$4)){
var and__3799__auto____$5 = (function (){var G__14423 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14423) : p3.call(null,G__14423));
})();
if(cljs.core.truth_(and__3799__auto____$5)){
var and__3799__auto____$6 = (function (){var G__14425 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14425) : p1.call(null,G__14425));
})();
if(cljs.core.truth_(and__3799__auto____$6)){
var and__3799__auto____$7 = (function (){var G__14427 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14427) : p2.call(null,G__14427));
})();
if(cljs.core.truth_(and__3799__auto____$7)){
var G__14428 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14428) : p3.call(null,G__14428));
} else {
return and__3799__auto____$7;
}
} else {
return and__3799__auto____$6;
}
} else {
return and__3799__auto____$5;
}
} else {
return and__3799__auto____$4;
}
} else {
return and__3799__auto____$3;
}
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__14473__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__14074_SHARP_){
var and__3799__auto__ = (function (){var G__14435 = p1__14074_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14435) : p1.call(null,G__14435));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__14437 = p1__14074_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14437) : p2.call(null,G__14437));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var G__14438 = p1__14074_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14438) : p3.call(null,G__14438));
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
}),args)));
};
var G__14473 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14474__i = 0, G__14474__a = new Array(arguments.length -  3);
while (G__14474__i < G__14474__a.length) {G__14474__a[G__14474__i] = arguments[G__14474__i + 3]; ++G__14474__i;}
  args = new cljs.core.IndexedSeq(G__14474__a,0);
} 
return G__14473__delegate.call(this,x,y,z,args);};
G__14473.cljs$lang$maxFixedArity = 3;
G__14473.cljs$lang$applyTo = (function (arglist__14475){
var x = cljs.core.first(arglist__14475);
arglist__14475 = cljs.core.next(arglist__14475);
var y = cljs.core.first(arglist__14475);
arglist__14475 = cljs.core.next(arglist__14475);
var z = cljs.core.first(arglist__14475);
var args = cljs.core.rest(arglist__14475);
return G__14473__delegate(x,y,z,args);
});
G__14473.cljs$core$IFn$_invoke$arity$variadic = G__14473__delegate;
return G__14473;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__14476 = null;
if (arguments.length > 3) {
var G__14477__i = 0, G__14477__a = new Array(arguments.length -  3);
while (G__14477__i < G__14477__a.length) {G__14477__a[G__14477__i] = arguments[G__14477__i + 3]; ++G__14477__i;}
G__14476 = new cljs.core.IndexedSeq(G__14477__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14476);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__14478__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14075_SHARP_){
var G__14454 = x;
return (p1__14075_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14075_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14454) : p1__14075_SHARP_.call(null,G__14454));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14076_SHARP_){
var and__3799__auto__ = (function (){var G__14456 = x;
return (p1__14076_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14076_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14456) : p1__14076_SHARP_.call(null,G__14456));
})();
if(cljs.core.truth_(and__3799__auto__)){
var G__14457 = y;
return (p1__14076_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14076_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14457) : p1__14076_SHARP_.call(null,G__14457));
} else {
return and__3799__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14077_SHARP_){
var and__3799__auto__ = (function (){var G__14459 = x;
return (p1__14077_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14077_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14459) : p1__14077_SHARP_.call(null,G__14459));
})();
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__14461 = y;
return (p1__14077_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14077_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14461) : p1__14077_SHARP_.call(null,G__14461));
})();
if(cljs.core.truth_(and__3799__auto____$1)){
var G__14462 = z;
return (p1__14077_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14077_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14462) : p1__14077_SHARP_.call(null,G__14462));
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__14479__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__14078_SHARP_){
return cljs.core.every_QMARK_(p1__14078_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__14479 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14480__i = 0, G__14480__a = new Array(arguments.length -  3);
while (G__14480__i < G__14480__a.length) {G__14480__a[G__14480__i] = arguments[G__14480__i + 3]; ++G__14480__i;}
  args = new cljs.core.IndexedSeq(G__14480__a,0);
} 
return G__14479__delegate.call(this,x,y,z,args);};
G__14479.cljs$lang$maxFixedArity = 3;
G__14479.cljs$lang$applyTo = (function (arglist__14481){
var x = cljs.core.first(arglist__14481);
arglist__14481 = cljs.core.next(arglist__14481);
var y = cljs.core.first(arglist__14481);
arglist__14481 = cljs.core.next(arglist__14481);
var z = cljs.core.first(arglist__14481);
var args = cljs.core.rest(arglist__14481);
return G__14479__delegate(x,y,z,args);
});
G__14479.cljs$core$IFn$_invoke$arity$variadic = G__14479__delegate;
return G__14479;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__14482 = null;
if (arguments.length > 3) {
var G__14483__i = 0, G__14483__a = new Array(arguments.length -  3);
while (G__14483__i < G__14483__a.length) {G__14483__a[G__14483__i] = arguments[G__14483__i + 3]; ++G__14483__i;}
G__14482 = new cljs.core.IndexedSeq(G__14483__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14482);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__14478 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14484__i = 0, G__14484__a = new Array(arguments.length -  3);
while (G__14484__i < G__14484__a.length) {G__14484__a[G__14484__i] = arguments[G__14484__i + 3]; ++G__14484__i;}
  ps = new cljs.core.IndexedSeq(G__14484__a,0);
} 
return G__14478__delegate.call(this,p1,p2,p3,ps);};
G__14478.cljs$lang$maxFixedArity = 3;
G__14478.cljs$lang$applyTo = (function (arglist__14485){
var p1 = cljs.core.first(arglist__14485);
arglist__14485 = cljs.core.next(arglist__14485);
var p2 = cljs.core.first(arglist__14485);
arglist__14485 = cljs.core.next(arglist__14485);
var p3 = cljs.core.first(arglist__14485);
var ps = cljs.core.rest(arglist__14485);
return G__14478__delegate(p1,p2,p3,ps);
});
G__14478.cljs$core$IFn$_invoke$arity$variadic = G__14478__delegate;
return G__14478;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__14486 = null;
if (arguments.length > 3) {
var G__14487__i = 0, G__14487__a = new Array(arguments.length -  3);
while (G__14487__i < G__14487__a.length) {G__14487__a[G__14487__i] = arguments[G__14487__i + 3]; ++G__14487__i;}
G__14486 = new cljs.core.IndexedSeq(G__14487__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14486);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__14693 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14693) : p.call(null,G__14693));
});
var sp1__2 = (function (x,y){
var or__3811__auto__ = (function (){var G__14695 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14695) : p.call(null,G__14695));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__14696 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14696) : p.call(null,G__14696));
}
});
var sp1__3 = (function (x,y,z){
var or__3811__auto__ = (function (){var G__14698 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14698) : p.call(null,G__14698));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__14700 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14700) : p.call(null,G__14700));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var G__14701 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__14701) : p.call(null,G__14701));
}
}
});
var sp1__4 = (function() { 
var G__14862__delegate = function (x,y,z,args){
var or__3811__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__14862 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14863__i = 0, G__14863__a = new Array(arguments.length -  3);
while (G__14863__i < G__14863__a.length) {G__14863__a[G__14863__i] = arguments[G__14863__i + 3]; ++G__14863__i;}
  args = new cljs.core.IndexedSeq(G__14863__a,0);
} 
return G__14862__delegate.call(this,x,y,z,args);};
G__14862.cljs$lang$maxFixedArity = 3;
G__14862.cljs$lang$applyTo = (function (arglist__14864){
var x = cljs.core.first(arglist__14864);
arglist__14864 = cljs.core.next(arglist__14864);
var y = cljs.core.first(arglist__14864);
arglist__14864 = cljs.core.next(arglist__14864);
var z = cljs.core.first(arglist__14864);
var args = cljs.core.rest(arglist__14864);
return G__14862__delegate(x,y,z,args);
});
G__14862.cljs$core$IFn$_invoke$arity$variadic = G__14862__delegate;
return G__14862;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__14865 = null;
if (arguments.length > 3) {
var G__14866__i = 0, G__14866__a = new Array(arguments.length -  3);
while (G__14866__i < G__14866__a.length) {G__14866__a[G__14866__i] = arguments[G__14866__i + 3]; ++G__14866__i;}
G__14865 = new cljs.core.IndexedSeq(G__14866__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14865);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3811__auto__ = (function (){var G__14733 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14733) : p1.call(null,G__14733));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__14734 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14734) : p2.call(null,G__14734));
}
});
var sp2__2 = (function (x,y){
var or__3811__auto__ = (function (){var G__14736 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14736) : p1.call(null,G__14736));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__14738 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14738) : p1.call(null,G__14738));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__14740 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14740) : p2.call(null,G__14740));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var G__14741 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14741) : p2.call(null,G__14741));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3811__auto__ = (function (){var G__14743 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14743) : p1.call(null,G__14743));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__14745 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14745) : p1.call(null,G__14745));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__14747 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14747) : p1.call(null,G__14747));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var or__3811__auto____$3 = (function (){var G__14749 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14749) : p2.call(null,G__14749));
})();
if(cljs.core.truth_(or__3811__auto____$3)){
return or__3811__auto____$3;
} else {
var or__3811__auto____$4 = (function (){var G__14751 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14751) : p2.call(null,G__14751));
})();
if(cljs.core.truth_(or__3811__auto____$4)){
return or__3811__auto____$4;
} else {
var G__14752 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14752) : p2.call(null,G__14752));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__14867__delegate = function (x,y,z,args){
var or__3811__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.some(((function (or__3811__auto__){
return (function (p1__14488_SHARP_){
var or__3811__auto____$1 = (function (){var G__14754 = p1__14488_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14754) : p1.call(null,G__14754));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var G__14755 = p1__14488_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14755) : p2.call(null,G__14755));
}
});})(or__3811__auto__))
,args);
}
};
var G__14867 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14868__i = 0, G__14868__a = new Array(arguments.length -  3);
while (G__14868__i < G__14868__a.length) {G__14868__a[G__14868__i] = arguments[G__14868__i + 3]; ++G__14868__i;}
  args = new cljs.core.IndexedSeq(G__14868__a,0);
} 
return G__14867__delegate.call(this,x,y,z,args);};
G__14867.cljs$lang$maxFixedArity = 3;
G__14867.cljs$lang$applyTo = (function (arglist__14869){
var x = cljs.core.first(arglist__14869);
arglist__14869 = cljs.core.next(arglist__14869);
var y = cljs.core.first(arglist__14869);
arglist__14869 = cljs.core.next(arglist__14869);
var z = cljs.core.first(arglist__14869);
var args = cljs.core.rest(arglist__14869);
return G__14867__delegate(x,y,z,args);
});
G__14867.cljs$core$IFn$_invoke$arity$variadic = G__14867__delegate;
return G__14867;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__14870 = null;
if (arguments.length > 3) {
var G__14871__i = 0, G__14871__a = new Array(arguments.length -  3);
while (G__14871__i < G__14871__a.length) {G__14871__a[G__14871__i] = arguments[G__14871__i + 3]; ++G__14871__i;}
G__14870 = new cljs.core.IndexedSeq(G__14871__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14870);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3811__auto__ = (function (){var G__14801 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14801) : p1.call(null,G__14801));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__14803 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14803) : p2.call(null,G__14803));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var G__14804 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14804) : p3.call(null,G__14804));
}
}
});
var sp3__2 = (function (x,y){
var or__3811__auto__ = (function (){var G__14806 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14806) : p1.call(null,G__14806));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__14808 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14808) : p2.call(null,G__14808));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__14810 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14810) : p3.call(null,G__14810));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var or__3811__auto____$3 = (function (){var G__14812 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14812) : p1.call(null,G__14812));
})();
if(cljs.core.truth_(or__3811__auto____$3)){
return or__3811__auto____$3;
} else {
var or__3811__auto____$4 = (function (){var G__14814 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14814) : p2.call(null,G__14814));
})();
if(cljs.core.truth_(or__3811__auto____$4)){
return or__3811__auto____$4;
} else {
var G__14815 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14815) : p3.call(null,G__14815));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3811__auto__ = (function (){var G__14817 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14817) : p1.call(null,G__14817));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__14819 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14819) : p2.call(null,G__14819));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__14821 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14821) : p3.call(null,G__14821));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var or__3811__auto____$3 = (function (){var G__14823 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14823) : p1.call(null,G__14823));
})();
if(cljs.core.truth_(or__3811__auto____$3)){
return or__3811__auto____$3;
} else {
var or__3811__auto____$4 = (function (){var G__14825 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14825) : p2.call(null,G__14825));
})();
if(cljs.core.truth_(or__3811__auto____$4)){
return or__3811__auto____$4;
} else {
var or__3811__auto____$5 = (function (){var G__14827 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14827) : p3.call(null,G__14827));
})();
if(cljs.core.truth_(or__3811__auto____$5)){
return or__3811__auto____$5;
} else {
var or__3811__auto____$6 = (function (){var G__14829 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14829) : p1.call(null,G__14829));
})();
if(cljs.core.truth_(or__3811__auto____$6)){
return or__3811__auto____$6;
} else {
var or__3811__auto____$7 = (function (){var G__14831 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14831) : p2.call(null,G__14831));
})();
if(cljs.core.truth_(or__3811__auto____$7)){
return or__3811__auto____$7;
} else {
var G__14832 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14832) : p3.call(null,G__14832));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__14872__delegate = function (x,y,z,args){
var or__3811__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.some(((function (or__3811__auto__){
return (function (p1__14489_SHARP_){
var or__3811__auto____$1 = (function (){var G__14834 = p1__14489_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__14834) : p1.call(null,G__14834));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var G__14836 = p1__14489_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__14836) : p2.call(null,G__14836));
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
var G__14837 = p1__14489_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__14837) : p3.call(null,G__14837));
}
}
});})(or__3811__auto__))
,args);
}
};
var G__14872 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14873__i = 0, G__14873__a = new Array(arguments.length -  3);
while (G__14873__i < G__14873__a.length) {G__14873__a[G__14873__i] = arguments[G__14873__i + 3]; ++G__14873__i;}
  args = new cljs.core.IndexedSeq(G__14873__a,0);
} 
return G__14872__delegate.call(this,x,y,z,args);};
G__14872.cljs$lang$maxFixedArity = 3;
G__14872.cljs$lang$applyTo = (function (arglist__14874){
var x = cljs.core.first(arglist__14874);
arglist__14874 = cljs.core.next(arglist__14874);
var y = cljs.core.first(arglist__14874);
arglist__14874 = cljs.core.next(arglist__14874);
var z = cljs.core.first(arglist__14874);
var args = cljs.core.rest(arglist__14874);
return G__14872__delegate(x,y,z,args);
});
G__14872.cljs$core$IFn$_invoke$arity$variadic = G__14872__delegate;
return G__14872;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__14875 = null;
if (arguments.length > 3) {
var G__14876__i = 0, G__14876__a = new Array(arguments.length -  3);
while (G__14876__i < G__14876__a.length) {G__14876__a[G__14876__i] = arguments[G__14876__i + 3]; ++G__14876__i;}
G__14875 = new cljs.core.IndexedSeq(G__14876__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14875);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__14877__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__14490_SHARP_){
var G__14853 = x;
return (p1__14490_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14490_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14853) : p1__14490_SHARP_.call(null,G__14853));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__14491_SHARP_){
var or__3811__auto__ = (function (){var G__14855 = x;
return (p1__14491_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14491_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14855) : p1__14491_SHARP_.call(null,G__14855));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var G__14856 = y;
return (p1__14491_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14491_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14856) : p1__14491_SHARP_.call(null,G__14856));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__14492_SHARP_){
var or__3811__auto__ = (function (){var G__14858 = x;
return (p1__14492_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14492_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14858) : p1__14492_SHARP_.call(null,G__14858));
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var G__14860 = y;
return (p1__14492_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14492_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14860) : p1__14492_SHARP_.call(null,G__14860));
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var G__14861 = z;
return (p1__14492_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__14492_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14861) : p1__14492_SHARP_.call(null,G__14861));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__14878__delegate = function (x,y,z,args){
var or__3811__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.some(((function (or__3811__auto__,ps__$1){
return (function (p1__14493_SHARP_){
return cljs.core.some(p1__14493_SHARP_,args);
});})(or__3811__auto__,ps__$1))
,ps__$1);
}
};
var G__14878 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__14879__i = 0, G__14879__a = new Array(arguments.length -  3);
while (G__14879__i < G__14879__a.length) {G__14879__a[G__14879__i] = arguments[G__14879__i + 3]; ++G__14879__i;}
  args = new cljs.core.IndexedSeq(G__14879__a,0);
} 
return G__14878__delegate.call(this,x,y,z,args);};
G__14878.cljs$lang$maxFixedArity = 3;
G__14878.cljs$lang$applyTo = (function (arglist__14880){
var x = cljs.core.first(arglist__14880);
arglist__14880 = cljs.core.next(arglist__14880);
var y = cljs.core.first(arglist__14880);
arglist__14880 = cljs.core.next(arglist__14880);
var z = cljs.core.first(arglist__14880);
var args = cljs.core.rest(arglist__14880);
return G__14878__delegate(x,y,z,args);
});
G__14878.cljs$core$IFn$_invoke$arity$variadic = G__14878__delegate;
return G__14878;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__14881 = null;
if (arguments.length > 3) {
var G__14882__i = 0, G__14882__a = new Array(arguments.length -  3);
while (G__14882__i < G__14882__a.length) {G__14882__a[G__14882__i] = arguments[G__14882__i + 3]; ++G__14882__i;}
G__14881 = new cljs.core.IndexedSeq(G__14882__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14881);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__14877 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__14883__i = 0, G__14883__a = new Array(arguments.length -  3);
while (G__14883__i < G__14883__a.length) {G__14883__a[G__14883__i] = arguments[G__14883__i + 3]; ++G__14883__i;}
  ps = new cljs.core.IndexedSeq(G__14883__a,0);
} 
return G__14877__delegate.call(this,p1,p2,p3,ps);};
G__14877.cljs$lang$maxFixedArity = 3;
G__14877.cljs$lang$applyTo = (function (arglist__14884){
var p1 = cljs.core.first(arglist__14884);
arglist__14884 = cljs.core.next(arglist__14884);
var p2 = cljs.core.first(arglist__14884);
arglist__14884 = cljs.core.next(arglist__14884);
var p3 = cljs.core.first(arglist__14884);
var ps = cljs.core.rest(arglist__14884);
return G__14877__delegate(p1,p2,p3,ps);
});
G__14877.cljs$core$IFn$_invoke$arity$variadic = G__14877__delegate;
return G__14877;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__14885 = null;
if (arguments.length > 3) {
var G__14886__i = 0, G__14886__a = new Array(arguments.length -  3);
while (G__14886__i < G__14886__a.length) {G__14886__a[G__14886__i] = arguments[G__14886__i + 3]; ++G__14886__i;}
G__14885 = new cljs.core.IndexedSeq(G__14886__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__14885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__14941 = null;
var G__14941__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14941__1 = (function (result){
var G__14927 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14927) : rf.call(null,G__14927));
});
var G__14941__2 = (function (result,input){
var G__14928 = result;
var G__14929 = (function (){var G__14930 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14930) : f.call(null,G__14930));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14928,G__14929) : rf.call(null,G__14928,G__14929));
});
var G__14941__3 = (function() { 
var G__14942__delegate = function (result,input,inputs){
var G__14931 = result;
var G__14932 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14931,G__14932) : rf.call(null,G__14931,G__14932));
};
var G__14942 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__14943__i = 0, G__14943__a = new Array(arguments.length -  2);
while (G__14943__i < G__14943__a.length) {G__14943__a[G__14943__i] = arguments[G__14943__i + 2]; ++G__14943__i;}
  inputs = new cljs.core.IndexedSeq(G__14943__a,0);
} 
return G__14942__delegate.call(this,result,input,inputs);};
G__14942.cljs$lang$maxFixedArity = 2;
G__14942.cljs$lang$applyTo = (function (arglist__14944){
var result = cljs.core.first(arglist__14944);
arglist__14944 = cljs.core.next(arglist__14944);
var input = cljs.core.first(arglist__14944);
var inputs = cljs.core.rest(arglist__14944);
return G__14942__delegate(result,input,inputs);
});
G__14942.cljs$core$IFn$_invoke$arity$variadic = G__14942__delegate;
return G__14942;
})()
;
G__14941 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__14941__0.call(this);
case 1:
return G__14941__1.call(this,result);
case 2:
return G__14941__2.call(this,result,input);
default:
var G__14945 = null;
if (arguments.length > 2) {
var G__14946__i = 0, G__14946__a = new Array(arguments.length -  2);
while (G__14946__i < G__14946__a.length) {G__14946__a[G__14946__i] = arguments[G__14946__i + 2]; ++G__14946__i;}
G__14945 = new cljs.core.IndexedSeq(G__14946__a,0);
}
return G__14941__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__14945);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14941.cljs$lang$maxFixedArity = 2;
G__14941.cljs$lang$applyTo = G__14941__3.cljs$lang$applyTo;
G__14941.cljs$core$IFn$_invoke$arity$0 = G__14941__0;
G__14941.cljs$core$IFn$_invoke$arity$1 = G__14941__1;
G__14941.cljs$core$IFn$_invoke$arity$2 = G__14941__2;
G__14941.cljs$core$IFn$_invoke$arity$variadic = G__14941__3.cljs$core$IFn$_invoke$arity$variadic;
return G__14941;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___14947 = size;
var i_14948 = (0);
while(true){
if((i_14948 < n__4698__auto___14947)){
cljs.core.chunk_append(b,(function (){var G__14933 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_14948);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14933) : f.call(null,G__14933));
})());

var G__14949 = (i_14948 + (1));
i_14948 = G__14949;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__14934 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14934) : f.call(null,G__14934));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__14935 = cljs.core.first(s1);
var G__14936 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14935,G__14936) : f.call(null,G__14935,G__14936));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__14937 = cljs.core.first(s1);
var G__14938 = cljs.core.first(s2);
var G__14939 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14937,G__14938,G__14939) : f.call(null,G__14937,G__14938,G__14939));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__14950__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__14887_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__14887_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__14950 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__14951__i = 0, G__14951__a = new Array(arguments.length -  4);
while (G__14951__i < G__14951__a.length) {G__14951__a[G__14951__i] = arguments[G__14951__i + 4]; ++G__14951__i;}
  colls = new cljs.core.IndexedSeq(G__14951__a,0);
} 
return G__14950__delegate.call(this,f,c1,c2,c3,colls);};
G__14950.cljs$lang$maxFixedArity = 4;
G__14950.cljs$lang$applyTo = (function (arglist__14952){
var f = cljs.core.first(arglist__14952);
arglist__14952 = cljs.core.next(arglist__14952);
var c1 = cljs.core.first(arglist__14952);
arglist__14952 = cljs.core.next(arglist__14952);
var c2 = cljs.core.first(arglist__14952);
arglist__14952 = cljs.core.next(arglist__14952);
var c3 = cljs.core.first(arglist__14952);
var colls = cljs.core.rest(arglist__14952);
return G__14950__delegate(f,c1,c2,c3,colls);
});
G__14950.cljs$core$IFn$_invoke$arity$variadic = G__14950__delegate;
return G__14950;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__14953 = null;
if (arguments.length > 4) {
var G__14954__i = 0, G__14954__a = new Array(arguments.length -  4);
while (G__14954__i < G__14954__a.length) {G__14954__a[G__14954__i] = arguments[G__14954__i + 4]; ++G__14954__i;}
G__14953 = new cljs.core.IndexedSeq(G__14954__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__14953);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14963 = null;
var G__14963__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14963__1 = (function (result){
var G__14960 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14960) : rf.call(null,G__14960));
});
var G__14963__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__14961 = result;
var G__14962 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14961,G__14962) : rf.call(null,G__14961,G__14962));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__14963 = function(result,input){
switch(arguments.length){
case 0:
return G__14963__0.call(this);
case 1:
return G__14963__1.call(this,result);
case 2:
return G__14963__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14963.cljs$core$IFn$_invoke$arity$0 = G__14963__0;
G__14963.cljs$core$IFn$_invoke$arity$1 = G__14963__1;
G__14963.cljs$core$IFn$_invoke$arity$2 = G__14963__2;
return G__14963;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__14970 = null;
var G__14970__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14970__1 = (function (result){
var G__14967 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14967) : rf.call(null,G__14967));
});
var G__14970__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__14968 = result;
var G__14969 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14968,G__14969) : rf.call(null,G__14968,G__14969));
}
});
G__14970 = function(result,input){
switch(arguments.length){
case 0:
return G__14970__0.call(this);
case 1:
return G__14970__1.call(this,result);
case 2:
return G__14970__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14970.cljs$core$IFn$_invoke$arity$0 = G__14970__0;
G__14970.cljs$core$IFn$_invoke$arity$1 = G__14970__1;
G__14970.cljs$core$IFn$_invoke$arity$2 = G__14970__2;
return G__14970;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__14971 = (n__$1 - (1));
var G__14972 = cljs.core.rest(s);
n__$1 = G__14971;
coll__$1 = G__14972;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__14975 = cljs.core.next(s);
var G__14976 = cljs.core.next(lead);
s = G__14975;
lead = G__14976;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__14989 = null;
var G__14989__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__14989__1 = (function (result){
var G__14983 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14983) : rf.call(null,G__14983));
});
var G__14989__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3799__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3799__auto__)){
var G__14984 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14984) : pred.call(null,G__14984));
} else {
return and__3799__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__14985 = result;
var G__14986 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14985,G__14986) : rf.call(null,G__14985,G__14986));
}
});
G__14989 = function(result,input){
switch(arguments.length){
case 0:
return G__14989__0.call(this);
case 1:
return G__14989__1.call(this,result);
case 2:
return G__14989__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__14989.cljs$core$IFn$_invoke$arity$0 = G__14989__0;
G__14989.cljs$core$IFn$_invoke$arity$1 = G__14989__1;
G__14989.cljs$core$IFn$_invoke$arity$2 = G__14989__2;
return G__14989;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3799__auto__ = s;
if(and__3799__auto__){
var G__14988 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__14988) : pred__$1.call(null,G__14988));
} else {
return and__3799__auto__;
}
})())){
var G__14990 = pred__$1;
var G__14991 = cljs.core.rest(s);
pred__$1 = G__14990;
coll__$1 = G__14991;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__15000 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15000) : f.call(null,G__15000));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__15003__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__15003 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__15004__i = 0, G__15004__a = new Array(arguments.length -  2);
while (G__15004__i < G__15004__a.length) {G__15004__a[G__15004__i] = arguments[G__15004__i + 2]; ++G__15004__i;}
  colls = new cljs.core.IndexedSeq(G__15004__a,0);
} 
return G__15003__delegate.call(this,c1,c2,colls);};
G__15003.cljs$lang$maxFixedArity = 2;
G__15003.cljs$lang$applyTo = (function (arglist__15005){
var c1 = cljs.core.first(arglist__15005);
arglist__15005 = cljs.core.next(arglist__15005);
var c2 = cljs.core.first(arglist__15005);
var colls = cljs.core.rest(arglist__15005);
return G__15003__delegate(c1,c2,colls);
});
G__15003.cljs$core$IFn$_invoke$arity$variadic = G__15003__delegate;
return G__15003;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__15006 = null;
if (arguments.length > 2) {
var G__15007__i = 0, G__15007__a = new Array(arguments.length -  2);
while (G__15007__i < G__15007__a.length) {G__15007__a[G__15007__i] = arguments[G__15007__i + 2]; ++G__15007__i;}
G__15006 = new cljs.core.IndexedSeq(G__15007__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__15006);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__15022 = null;
var G__15022__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15022__1 = (function (result){
var G__15015 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15015) : rf.call(null,G__15015));
});
var G__15022__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__15016 = result;
var G__15017 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15016,G__15017) : rf.call(null,G__15016,G__15017));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__15018 = sepr;
var G__15019 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15018,G__15019) : rf.call(null,G__15018,G__15019));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__15020 = result;
var G__15021 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15020,G__15021) : rf.call(null,G__15020,G__15021));
}
});
G__15022 = function(result,input){
switch(arguments.length){
case 0:
return G__15022__0.call(this);
case 1:
return G__15022__1.call(this,result);
case 2:
return G__15022__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15022.cljs$core$IFn$_invoke$arity$0 = G__15022__0;
G__15022.cljs$core$IFn$_invoke$arity$1 = G__15022__1;
G__15022.cljs$core$IFn$_invoke$arity$2 = G__15022__2;
return G__15022;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__15031__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__15031 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__15032__i = 0, G__15032__a = new Array(arguments.length -  1);
while (G__15032__i < G__15032__a.length) {G__15032__a[G__15032__i] = arguments[G__15032__i + 1]; ++G__15032__i;}
  colls = new cljs.core.IndexedSeq(G__15032__a,0);
} 
return G__15031__delegate.call(this,f,colls);};
G__15031.cljs$lang$maxFixedArity = 1;
G__15031.cljs$lang$applyTo = (function (arglist__15033){
var f = cljs.core.first(arglist__15033);
var colls = cljs.core.rest(arglist__15033);
return G__15031__delegate(f,colls);
});
G__15031.cljs$core$IFn$_invoke$arity$variadic = G__15031__delegate;
return G__15031;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__15034 = null;
if (arguments.length > 1) {
var G__15035__i = 0, G__15035__a = new Array(arguments.length -  1);
while (G__15035__i < G__15035__a.length) {G__15035__a[G__15035__i] = arguments[G__15035__i + 1]; ++G__15035__i;}
G__15034 = new cljs.core.IndexedSeq(G__15035__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__15034);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__15054 = null;
var G__15054__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15054__1 = (function (result){
var G__15048 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15048) : rf.call(null,G__15048));
});
var G__15054__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__15049 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15049) : pred.call(null,G__15049));
})())){
var G__15050 = result;
var G__15051 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15050,G__15051) : rf.call(null,G__15050,G__15051));
} else {
return result;
}
});
G__15054 = function(result,input){
switch(arguments.length){
case 0:
return G__15054__0.call(this);
case 1:
return G__15054__1.call(this,result);
case 2:
return G__15054__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15054.cljs$core$IFn$_invoke$arity$0 = G__15054__0;
G__15054.cljs$core$IFn$_invoke$arity$1 = G__15054__1;
G__15054.cljs$core$IFn$_invoke$arity$2 = G__15054__2;
return G__15054;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4698__auto___15055 = size;
var i_15056 = (0);
while(true){
if((i_15056 < n__4698__auto___15055)){
if(cljs.core.truth_((function (){var G__15052 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15056);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15052) : pred.call(null,G__15052));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_15056));
} else {
}

var G__15057 = (i_15056 + (1));
i_15056 = G__15057;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__15053 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15053) : pred.call(null,G__15053));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__15064 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__15064) : branch_QMARK_.call(null,G__15064));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__15065 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__15065) : children.call(null,G__15065));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__15066_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__15066_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__15069 = to;
if(G__15069){
var bit__4485__auto__ = (G__15069.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4485__auto__) || (G__15069.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__15070 = to;
if(G__15070){
var bit__4485__auto__ = (G__15070.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4485__auto__) || (G__15070.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__15072 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15072) : f.call(null,G__15072));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__15073__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__15073 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__15074__i = 0, G__15074__a = new Array(arguments.length -  4);
while (G__15074__i < G__15074__a.length) {G__15074__a[G__15074__i] = arguments[G__15074__i + 4]; ++G__15074__i;}
  colls = new cljs.core.IndexedSeq(G__15074__a,0);
} 
return G__15073__delegate.call(this,f,c1,c2,c3,colls);};
G__15073.cljs$lang$maxFixedArity = 4;
G__15073.cljs$lang$applyTo = (function (arglist__15075){
var f = cljs.core.first(arglist__15075);
arglist__15075 = cljs.core.next(arglist__15075);
var c1 = cljs.core.first(arglist__15075);
arglist__15075 = cljs.core.next(arglist__15075);
var c2 = cljs.core.first(arglist__15075);
arglist__15075 = cljs.core.next(arglist__15075);
var c3 = cljs.core.first(arglist__15075);
var colls = cljs.core.rest(arglist__15075);
return G__15073__delegate(f,c1,c2,c3,colls);
});
G__15073.cljs$core$IFn$_invoke$arity$variadic = G__15073__delegate;
return G__15073;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__15076 = null;
if (arguments.length > 4) {
var G__15077__i = 0, G__15077__a = new Array(arguments.length -  4);
while (G__15077__i < G__15077__a.length) {G__15077__a[G__15077__i] = arguments[G__15077__i + 4]; ++G__15077__i;}
G__15076 = new cljs.core.IndexedSeq(G__15077__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__15076);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__15079 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15079) : pred.call(null,G__15079));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__15094 = m__$1;
if(G__15094){
var bit__4492__auto__ = (G__15094.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4492__auto__) || (G__15094.cljs$core$ILookup$)){
return true;
} else {
if((!G__15094.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__15094);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__15094);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__15095 = sentinel;
var G__15096 = m__$2;
var G__15097 = cljs.core.next(ks__$1);
sentinel = G__15095;
m__$1 = G__15096;
ks__$1 = G__15097;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__15098,v){
var vec__15103 = p__15098;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15103,(0),null);
var ks = cljs.core.nthnext(vec__15103,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__15104,f){
var vec__15142 = p__15104;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15142,(0),null);
var ks = cljs.core.nthnext(vec__15142,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15143 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15143) : f.call(null,G__15143));
})());
}
});
var update_in__4 = (function (m,p__15105,f,a){
var vec__15144 = p__15105;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15144,(0),null);
var ks = cljs.core.nthnext(vec__15144,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15145 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15146 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15145,G__15146) : f.call(null,G__15145,G__15146));
})());
}
});
var update_in__5 = (function (m,p__15106,f,a,b){
var vec__15147 = p__15106;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15147,(0),null);
var ks = cljs.core.nthnext(vec__15147,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15148 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15149 = a;
var G__15150 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15148,G__15149,G__15150) : f.call(null,G__15148,G__15149,G__15150));
})());
}
});
var update_in__6 = (function (m,p__15107,f,a,b,c){
var vec__15151 = p__15107;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15151,(0),null);
var ks = cljs.core.nthnext(vec__15151,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15152 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15153 = a;
var G__15154 = b;
var G__15155 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15152,G__15153,G__15154,G__15155) : f.call(null,G__15152,G__15153,G__15154,G__15155));
})());
}
});
var update_in__7 = (function() { 
var G__15157__delegate = function (m,p__15108,f,a,b,c,args){
var vec__15156 = p__15108;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15156,(0),null);
var ks = cljs.core.nthnext(vec__15156,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__15157 = function (m,p__15108,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__15158__i = 0, G__15158__a = new Array(arguments.length -  6);
while (G__15158__i < G__15158__a.length) {G__15158__a[G__15158__i] = arguments[G__15158__i + 6]; ++G__15158__i;}
  args = new cljs.core.IndexedSeq(G__15158__a,0);
} 
return G__15157__delegate.call(this,m,p__15108,f,a,b,c,args);};
G__15157.cljs$lang$maxFixedArity = 6;
G__15157.cljs$lang$applyTo = (function (arglist__15159){
var m = cljs.core.first(arglist__15159);
arglist__15159 = cljs.core.next(arglist__15159);
var p__15108 = cljs.core.first(arglist__15159);
arglist__15159 = cljs.core.next(arglist__15159);
var f = cljs.core.first(arglist__15159);
arglist__15159 = cljs.core.next(arglist__15159);
var a = cljs.core.first(arglist__15159);
arglist__15159 = cljs.core.next(arglist__15159);
var b = cljs.core.first(arglist__15159);
arglist__15159 = cljs.core.next(arglist__15159);
var c = cljs.core.first(arglist__15159);
var args = cljs.core.rest(arglist__15159);
return G__15157__delegate(m,p__15108,f,a,b,c,args);
});
G__15157.cljs$core$IFn$_invoke$arity$variadic = G__15157__delegate;
return G__15157;
})()
;
update_in = function(m,p__15108,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__15108,f);
case 4:
return update_in__4.call(this,m,p__15108,f,a);
case 5:
return update_in__5.call(this,m,p__15108,f,a,b);
case 6:
return update_in__6.call(this,m,p__15108,f,a,b,c);
default:
var G__15160 = null;
if (arguments.length > 6) {
var G__15161__i = 0, G__15161__a = new Array(arguments.length -  6);
while (G__15161__i < G__15161__a.length) {G__15161__a[G__15161__i] = arguments[G__15161__i + 6]; ++G__15161__i;}
G__15160 = new cljs.core.IndexedSeq(G__15161__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__15108,f,a,b,c, G__15160);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15172 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15172) : f.call(null,G__15172));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15173 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15174 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15173,G__15174) : f.call(null,G__15173,G__15174));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15175 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15176 = x;
var G__15177 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15175,G__15176,G__15177) : f.call(null,G__15175,G__15176,G__15177));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15178 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15179 = x;
var G__15180 = y;
var G__15181 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__15178,G__15179,G__15180,G__15181) : f.call(null,G__15178,G__15179,G__15180,G__15181));
})());
});
var update__7 = (function() { 
var G__15182__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__15182 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__15183__i = 0, G__15183__a = new Array(arguments.length -  6);
while (G__15183__i < G__15183__a.length) {G__15183__a[G__15183__i] = arguments[G__15183__i + 6]; ++G__15183__i;}
  more = new cljs.core.IndexedSeq(G__15183__a,0);
} 
return G__15182__delegate.call(this,m,k,f,x,y,z,more);};
G__15182.cljs$lang$maxFixedArity = 6;
G__15182.cljs$lang$applyTo = (function (arglist__15184){
var m = cljs.core.first(arglist__15184);
arglist__15184 = cljs.core.next(arglist__15184);
var k = cljs.core.first(arglist__15184);
arglist__15184 = cljs.core.next(arglist__15184);
var f = cljs.core.first(arglist__15184);
arglist__15184 = cljs.core.next(arglist__15184);
var x = cljs.core.first(arglist__15184);
arglist__15184 = cljs.core.next(arglist__15184);
var y = cljs.core.first(arglist__15184);
arglist__15184 = cljs.core.next(arglist__15184);
var z = cljs.core.first(arglist__15184);
var more = cljs.core.rest(arglist__15184);
return G__15182__delegate(m,k,f,x,y,z,more);
});
G__15182.cljs$core$IFn$_invoke$arity$variadic = G__15182__delegate;
return G__15182;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__15185 = null;
if (arguments.length > 6) {
var G__15186__i = 0, G__15186__a = new Array(arguments.length -  6);
while (G__15186__i < G__15186__a.length) {G__15186__a[G__15186__i] = arguments[G__15186__i + 6]; ++G__15186__i;}
G__15185 = new cljs.core.IndexedSeq(G__15186__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__15185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__15187 = (ll - (5));
var G__15188 = r;
ll = G__15187;
ret = G__15188;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__15193 = cljs.core.pv_aget(node,(0));
var G__15194 = (level - (5));
node = G__15193;
level = G__15194;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__15195 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__15196 = (level - (5));
node = G__15195;
level = G__15196;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__15206 = init__$2;
var G__15207 = (j + i);
var G__15208 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15206,G__15207,G__15208) : f.call(null,G__15206,G__15207,G__15208));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__15219 = (j + (1));
var G__15220 = init__$3;
j = G__15219;
init__$2 = G__15220;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15209 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15209) : cljs.core.deref.call(null,G__15209));
} else {
var G__15221 = (i + len);
var G__15222 = init__$2;
i = G__15221;
init__$1 = G__15222;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__15210 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__15210) : cljs.core.tv_editable_root.call(null,G__15210));
})(),(function (){var G__15211 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__15211) : cljs.core.tv_editable_tail.call(null,G__15211));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__15212 = init__$2;
var G__15213 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15212,G__15213) : f.call(null,G__15212,G__15213));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__15223 = (j + (1));
var G__15224 = init__$3;
j = G__15223;
init__$2 = G__15224;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15214 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15214) : cljs.core.deref.call(null,G__15214));
} else {
var G__15225 = (i + len);
var G__15226 = init__$2;
i = G__15225;
init__$1 = G__15226;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__15215 = coll__$1;
var G__15216 = cljs.core.first_array_for_longvec(coll__$1);
var G__15217 = (0);
var G__15218 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15215,G__15216,G__15217,G__15218) : cljs.core.chunked_seq.call(null,G__15215,G__15216,G__15217,G__15218));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4698__auto___15227 = len;
var i_15228 = (0);
while(true){
if((i_15228 < n__4698__auto___15227)){
(new_tail[i_15228] = (self__.tail[i_15228]));

var G__15229 = (i_15228 + (1));
i_15228 = G__15229;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__15230 = null;
var G__15230__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__15230__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__15230 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15230__2.call(this,self__,k);
case 3:
return G__15230__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15230.cljs$core$IFn$_invoke$arity$2 = G__15230__2;
G__15230.cljs$core$IFn$_invoke$arity$3 = G__15230__3;
return G__15230;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args15205){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15205)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__15231 = (i + (1));
var G__15232 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__15231;
out = G__15232;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__15233__i = 0, G__15233__a = new Array(arguments.length -  0);
while (G__15233__i < G__15233__a.length) {G__15233__a[G__15233__i] = arguments[G__15233__i + 0]; ++G__15233__i;}
  args = new cljs.core.IndexedSeq(G__15233__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__15234){
var args = cljs.core.seq(arglist__15234);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__15235 = self__.vec;
var G__15236 = self__.node;
var G__15237 = self__.i;
var G__15238 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15235,G__15236,G__15237,G__15238) : cljs.core.chunked_seq.call(null,G__15235,G__15236,G__15237,G__15238));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__15239 = self__.vec;
var G__15240 = (self__.i + self__.off);
var G__15241 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15239,G__15240,G__15241) : cljs.core.subvec.call(null,G__15239,G__15240,G__15241));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__15242 = self__.vec;
var G__15243 = (self__.i + self__.off);
var G__15244 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__15242,G__15243,G__15244) : cljs.core.subvec.call(null,G__15242,G__15243,G__15244));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__15245 = self__.vec;
var G__15246 = self__.node;
var G__15247 = self__.i;
var G__15248 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15245,G__15246,G__15247,G__15248) : cljs.core.chunked_seq.call(null,G__15245,G__15246,G__15247,G__15248));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__15249 = self__.vec;
var G__15250 = cljs.core.unchecked_array_for(self__.vec,end);
var G__15251 = end;
var G__15252 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15249,G__15250,G__15251,G__15252) : cljs.core.chunked_seq.call(null,G__15249,G__15250,G__15251,G__15252));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__15253 = self__.vec;
var G__15254 = self__.node;
var G__15255 = self__.i;
var G__15256 = self__.off;
var G__15257 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__15253,G__15254,G__15255,G__15256,G__15257) : cljs.core.chunked_seq.call(null,G__15253,G__15254,G__15255,G__15256,G__15257));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__15258 = self__.vec;
var G__15259 = cljs.core.unchecked_array_for(self__.vec,end);
var G__15260 = end;
var G__15261 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__15258,G__15259,G__15260,G__15261) : cljs.core.chunked_seq.call(null,G__15258,G__15259,G__15260,G__15261));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__15263 = self__.meta;
var G__15264 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__15265 = self__.start;
var G__15266 = (function (){var x__4128__auto__ = self__.end;
var y__4129__auto__ = (v_pos + (1));
return ((x__4128__auto__ > y__4129__auto__) ? x__4128__auto__ : y__4129__auto__);
})();
var G__15267 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15263,G__15264,G__15265,G__15266,G__15267) : cljs.core.build_subvec.call(null,G__15263,G__15264,G__15265,G__15266,G__15267));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__15268 = self__.meta;
var G__15269 = self__.v;
var G__15270 = self__.start;
var G__15271 = (self__.end - (1));
var G__15272 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15268,G__15269,G__15270,G__15271,G__15272) : cljs.core.build_subvec.call(null,G__15268,G__15269,G__15270,G__15271,G__15272));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__15274 = meta__$1;
var G__15275 = self__.v;
var G__15276 = self__.start;
var G__15277 = self__.end;
var G__15278 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15274,G__15275,G__15276,G__15277,G__15278) : cljs.core.build_subvec.call(null,G__15274,G__15275,G__15276,G__15277,G__15278));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__15279 = self__.meta;
var G__15280 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__15281 = self__.start;
var G__15282 = (self__.end + (1));
var G__15283 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__15279,G__15280,G__15281,G__15282,G__15283) : cljs.core.build_subvec.call(null,G__15279,G__15280,G__15281,G__15282,G__15283));
});

cljs.core.Subvec.prototype.call = (function() {
var G__15284 = null;
var G__15284__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__15284__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__15284 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15284__2.call(this,self__,k);
case 3:
return G__15284__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15284.cljs$core$IFn$_invoke$arity$2 = G__15284__2;
G__15284.cljs$core$IFn$_invoke$arity$3 = G__15284__3;
return G__15284;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args15262){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15262)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__15285 = meta;
var G__15286 = v.v;
var G__15287 = (v.start + start);
var G__15288 = (v.start + end);
var G__15289 = __hash;
meta = G__15285;
v = G__15286;
start = G__15287;
end = G__15288;
__hash = G__15289;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj15296 = {};
return obj15296;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__15304 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__15305 = (level - (5));
node = G__15304;
level = G__15305;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__15309 = null;
var G__15309__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15309__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15309 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15309__2.call(this,self__,k);
case 3:
return G__15309__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15309.cljs$core$IFn$_invoke$arity$2 = G__15309__2;
G__15309.cljs$core$IFn$_invoke$arity$3 = G__15309__3;
return G__15309;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args15306){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15306)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3811__auto__ = self__.front;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3811__auto__ = self__.rear;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__15310 = (i + incr);
i = G__15310;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__15311 = (i + (1));
var G__15312 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__15311;
out = G__15312;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj15316 = {};
return obj15316;
})();
var l = ks.length;
var i_15317 = (0);
while(true){
if((i_15317 < l)){
var k_15318 = (ks[i_15317]);
(new_obj[k_15318] = (obj[k_15318]));

var G__15319 = (i_15317 + (1));
i_15317 = G__15319;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3799__auto__ = (function (){var G__15323 = k;
return goog.isString(G__15323);
})();
if(cljs.core.truth_(and__3799__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3799__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__15324 = init__$1;
var G__15325 = k;
var G__15326 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15324,G__15325,G__15326) : f.call(null,G__15324,G__15325,G__15326));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15327 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15327) : cljs.core.deref.call(null,G__15327));
} else {
var G__15333 = cljs.core.rest(keys__$1);
var G__15334 = init__$2;
keys__$1 = G__15333;
init__$1 = G__15334;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3799__auto__ = (function (){var G__15329 = k;
return goog.isString(G__15329);
})();
if(cljs.core.truth_(and__3799__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3799__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__15330 = k;
return goog.isString(G__15330);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3799__auto__ = (function (){var G__15332 = k;
return goog.isString(G__15332);
})();
if(cljs.core.truth_(and__3799__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3799__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__15320_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__15320_SHARP_,(self__.strobj[p1__15320_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__15335 = null;
var G__15335__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15335__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15335 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15335__2.call(this,self__,k);
case 3:
return G__15335__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15335.cljs$core$IFn$_invoke$arity$2 = G__15335__2;
G__15335.cljs$core$IFn$_invoke$arity$3 = G__15335__3;
return G__15335;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args15321){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15321)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj15337 = {};
return obj15337;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__15338 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15338,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15338,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__15339 = (i + (2));
i = G__15339;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__15340 = (i + (2));
i = G__15340;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__15341 = (i + (2));
i = G__15341;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__15342 = (i + (2));
i = G__15342;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__15343 = (i + (2));
i = G__15343;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3811__auto__ = (function (){var G__15347 = k;
return goog.isString(G__15347);
})();
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_15348 = (0);
while(true){
if((i_15348 < l)){
(narr[i_15348] = (arr[i_15348]));

var G__15349 = (i_15348 + (1));
i_15348 = G__15349;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15351 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15351) : cljs.core.keys.call(null,G__15351));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15352 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15352) : cljs.core.vals.call(null,G__15352));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15353 = cljs.core.seq(coll);
var chunk__15354 = null;
var count__15355 = (0);
var i__15356 = (0);
while(true){
if((i__15356 < count__15355)){
var vec__15357 = chunk__15354.cljs$core$IIndexed$_nth$arity$2(null,i__15356);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15357,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15357,(1),null);
var G__15358_15371 = v;
var G__15359_15372 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15358_15371,G__15359_15372) : f.call(null,G__15358_15371,G__15359_15372));

var G__15373 = seq__15353;
var G__15374 = chunk__15354;
var G__15375 = count__15355;
var G__15376 = (i__15356 + (1));
seq__15353 = G__15373;
chunk__15354 = G__15374;
count__15355 = G__15375;
i__15356 = G__15376;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15353);
if(temp__4126__auto__){
var seq__15353__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15353__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__15353__$1);
var G__15377 = cljs.core.chunk_rest(seq__15353__$1);
var G__15378 = c__4598__auto__;
var G__15379 = cljs.core.count(c__4598__auto__);
var G__15380 = (0);
seq__15353 = G__15377;
chunk__15354 = G__15378;
count__15355 = G__15379;
i__15356 = G__15380;
continue;
} else {
var vec__15360 = cljs.core.first(seq__15353__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15360,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15360,(1),null);
var G__15361_15381 = v;
var G__15362_15382 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15361_15381,G__15362_15382) : f.call(null,G__15361_15381,G__15362_15382));

var G__15383 = cljs.core.next(seq__15353__$1);
var G__15384 = null;
var G__15385 = (0);
var G__15386 = (0);
seq__15353 = G__15383;
chunk__15354 = G__15384;
count__15355 = G__15385;
i__15356 = G__15386;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__15363 = init__$1;
var G__15364 = (self__.arr[i]);
var G__15365 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15363,G__15364,G__15365) : f.call(null,G__15363,G__15364,G__15365));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15366 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15366) : cljs.core.deref.call(null,G__15366));
} else {
var G__15387 = (i + (2));
var G__15388 = init__$2;
i = G__15387;
init__$1 = G__15388;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__15367 = other;
if(G__15367){
var bit__4485__auto__ = (G__15367.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4485__auto__) || (G__15367.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__15389 = (i + (2));
i = G__15389;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj15369 = {};
return obj15369;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__15390 = (s + (2));
var G__15391 = d;
s = G__15390;
d = G__15391;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__15392 = (s + (2));
var G__15393 = (d + (2));
s = G__15392;
d = G__15393;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__15370 = cljs.core.aclone(self__.arr);
(G__15370[(idx + (1))] = v);

return G__15370;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15394 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15395 = cljs.core.next(es);
ret = G__15394;
es = G__15395;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__15396 = null;
var G__15396__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15396__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15396 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15396__2.call(this,self__,k);
case 3:
return G__15396__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15396.cljs$core$IFn$_invoke$arity$2 = G__15396__2;
G__15396.cljs$core$IFn$_invoke$arity$3 = G__15396__3;
return G__15396;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args15350){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15350)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15397 = (i + (2));
var G__15398 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__15397;
ret = G__15398;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__15399_15407 = self__.arr;
G__15399_15407.pop();

G__15399_15407.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__15400 = self__.len;
var G__15401 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__15400,G__15401) : cljs.core.array__GT_transient_hash_map.call(null,G__15400,G__15401));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__15402 = o;
if(G__15402){
var bit__4492__auto__ = (G__15402.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4492__auto__) || (G__15402.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15402.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15402);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15402);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__15403 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15403) : cljs.core.key.call(null,G__15403));
})(),(function (){var G__15404 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15404) : cljs.core.val.call(null,G__15404));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__15408 = cljs.core.next(es);
var G__15409 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__15405 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15405) : cljs.core.key.call(null,G__15405));
})(),(function (){var G__15406 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15406) : cljs.core.val.call(null,G__15406));
})());
es = G__15408;
tcoll__$2 = G__15409;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__15410 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__15411 = (i + (2));
out = G__15410;
i = G__15411;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__15414 = cljs.core.aclone(arr);
(G__15414[i] = a);

return G__15414;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__15415 = cljs.core.aclone(arr);
(G__15415[i] = a);

(G__15415[j] = b);

return G__15415;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__15420 = init__$1;
var G__15421 = k;
var G__15422 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15420,G__15421,G__15422) : f.call(null,G__15420,G__15421,G__15422));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15423 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15423) : cljs.core.deref.call(null,G__15423));
} else {
var G__15424 = (i + (2));
var G__15425 = init__$2;
i = G__15424;
init__$1 = G__15425;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15426 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15426) : cljs.core.create_inode_seq.call(null,G__15426));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15440 = (0);
var j_15441 = (0);
while(true){
if((i_15440 < (32))){
if((((self__.bitmap >>> i_15440) & (1)) === (0))){
var G__15442 = (i_15440 + (1));
var G__15443 = j_15441;
i_15440 = G__15442;
j_15441 = G__15443;
continue;
} else {
(nodes[i_15440] = ((!(((self__.arr[j_15441]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_15441])),(self__.arr[j_15441]),(self__.arr[(j_15441 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15441 + (1))])));

var G__15444 = (i_15440 + (1));
var G__15445 = (j_15441 + (2));
i_15440 = G__15444;
j_15441 = G__15445;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15427 = edit__$1;
var G__15428 = (shift + (5));
var G__15429 = key_or_nil;
var G__15430 = val_or_node;
var G__15431 = hash;
var G__15432 = key;
var G__15433 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__15427,G__15428,G__15429,G__15430,G__15431,G__15432,G__15433) : cljs.core.create_node.call(null,G__15427,G__15428,G__15429,G__15430,G__15431,G__15432,G__15433));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_15446 = (0);
var j_15447 = (0);
while(true){
if((i_15446 < (32))){
if((((self__.bitmap >>> i_15446) & (1)) === (0))){
var G__15448 = (i_15446 + (1));
var G__15449 = j_15447;
i_15446 = G__15448;
j_15447 = G__15449;
continue;
} else {
(nodes[i_15446] = ((!(((self__.arr[j_15447]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_15447])),(self__.arr[j_15447]),(self__.arr[(j_15447 + (1))]),added_leaf_QMARK_):(self__.arr[(j_15447 + (1))])));

var G__15450 = (i_15446 + (1));
var G__15451 = (j_15447 + (2));
i_15446 = G__15450;
j_15447 = G__15451;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__15434 = (shift + (5));
var G__15435 = key_or_nil;
var G__15436 = val_or_node;
var G__15437 = hash;
var G__15438 = key;
var G__15439 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__15434,G__15435,G__15436,G__15437,G__15438,G__15439) : cljs.core.create_node.call(null,G__15434,G__15435,G__15436,G__15437,G__15438,G__15439));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__15452 = (i + (1));
var G__15453 = (j + (2));
var G__15454 = (bitmap | ((1) << i));
i = G__15452;
j = G__15453;
bitmap = G__15454;
continue;
} else {
var G__15455 = (i + (1));
var G__15456 = j;
var G__15457 = bitmap;
i = G__15455;
j = G__15456;
bitmap = G__15457;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15458 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__15458) : cljs.core.create_array_node_seq.call(null,G__15458));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15459 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15459) : cljs.core.deref.call(null,G__15459));
} else {
var G__15460 = (i + (1));
var G__15461 = init__$2;
i = G__15460;
init__$1 = G__15461;
continue;
}
} else {
var G__15462 = (i + (1));
var G__15463 = init__$1;
i = G__15462;
init__$1 = G__15463;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__15464 = (i + (2));
i = G__15464;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__15465 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__15465) : cljs.core.create_inode_seq.call(null,G__15465));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__15466 = self__.nodes;
var G__15467 = (self__.i + (2));
var G__15468 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15466,G__15467,G__15468) : cljs.core.create_inode_seq.call(null,G__15466,G__15467,G__15468));
} else {
var G__15469 = self__.nodes;
var G__15470 = self__.i;
var G__15471 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__15469,G__15470,G__15471) : cljs.core.create_inode_seq.call(null,G__15469,G__15470,G__15471));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__15475 = (j + (2));
j = G__15475;
continue;
}
} else {
var G__15476 = (j + (2));
j = G__15476;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__15477 = null;
var G__15478 = self__.nodes;
var G__15479 = self__.i;
var G__15480 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__15477,G__15478,G__15479,G__15480) : cljs.core.create_array_node_seq.call(null,G__15477,G__15478,G__15479,G__15480));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__15485 = (j + (1));
j = G__15485;
continue;
}
} else {
var G__15486 = (j + (1));
j = G__15486;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15488 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15488) : cljs.core.keys.call(null,G__15488));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15489 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15489) : cljs.core.vals.call(null,G__15489));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15490 = cljs.core.seq(coll);
var chunk__15491 = null;
var count__15492 = (0);
var i__15493 = (0);
while(true){
if((i__15493 < count__15492)){
var vec__15494 = chunk__15491.cljs$core$IIndexed$_nth$arity$2(null,i__15493);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15494,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15494,(1),null);
var G__15495_15506 = v;
var G__15496_15507 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15495_15506,G__15496_15507) : f.call(null,G__15495_15506,G__15496_15507));

var G__15508 = seq__15490;
var G__15509 = chunk__15491;
var G__15510 = count__15492;
var G__15511 = (i__15493 + (1));
seq__15490 = G__15508;
chunk__15491 = G__15509;
count__15492 = G__15510;
i__15493 = G__15511;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15490);
if(temp__4126__auto__){
var seq__15490__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15490__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__15490__$1);
var G__15512 = cljs.core.chunk_rest(seq__15490__$1);
var G__15513 = c__4598__auto__;
var G__15514 = cljs.core.count(c__4598__auto__);
var G__15515 = (0);
seq__15490 = G__15512;
chunk__15491 = G__15513;
count__15492 = G__15514;
i__15493 = G__15515;
continue;
} else {
var vec__15497 = cljs.core.first(seq__15490__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15497,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15497,(1),null);
var G__15498_15516 = v;
var G__15499_15517 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15498_15516,G__15499_15517) : f.call(null,G__15498_15516,G__15499_15517));

var G__15518 = cljs.core.next(seq__15490__$1);
var G__15519 = null;
var G__15520 = (0);
var G__15521 = (0);
seq__15490 = G__15518;
chunk__15491 = G__15519;
count__15492 = G__15520;
i__15493 = G__15521;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__15500 = init;
var G__15501 = null;
var G__15502 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15500,G__15501,G__15502) : f.call(null,G__15500,G__15501,G__15502));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15503 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15503) : cljs.core.deref.call(null,G__15503));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj15505 = {};
return obj15505;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15522 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15523 = cljs.core.next(es);
ret = G__15522;
es = G__15523;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__15524 = null;
var G__15524__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15524__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15524 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15524__2.call(this,self__,k);
case 3:
return G__15524__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15524.cljs$core$IFn$_invoke$arity$2 = G__15524__2;
G__15524.cljs$core$IFn$_invoke$arity$3 = G__15524__3;
return G__15524;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args15487){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15487)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__15525 = (i + (2));
var G__15526 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__15525;
ret = G__15526;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__15527 = (i + (1));
var G__15528 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__15527;
out = G__15528;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__15529 = o;
if(G__15529){
var bit__4492__auto__ = (G__15529.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4492__auto__) || (G__15529.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__15529.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15529);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__15529);
}
})()){
return tcoll.assoc_BANG_((function (){var G__15530 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15530) : cljs.core.key.call(null,G__15530));
})(),(function (){var G__15531 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15531) : cljs.core.val.call(null,G__15531));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__15534 = cljs.core.next(es);
var G__15535 = tcoll__$1.assoc_BANG_((function (){var G__15532 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15532) : cljs.core.key.call(null,G__15532));
})(),(function (){var G__15533 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__15533) : cljs.core.val.call(null,G__15533));
})());
es = G__15534;
tcoll__$1 = G__15535;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__15536 = ((ascending_QMARK_)?t.left:t.right);
var G__15537 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__15536;
stack__$1 = G__15537;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__15550 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15550) : cljs.core.deref.call(null,G__15550));
} else {
var init__$2 = (function (){var G__15551 = init__$1;
var G__15552 = node.key;
var G__15553 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15551,G__15552,G__15553) : f.call(null,G__15551,G__15552,G__15553));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__15554 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15554) : cljs.core.deref.call(null,G__15554));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__15555 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15555) : cljs.core.deref.call(null,G__15555));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__15557 = null;
var G__15557__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15557__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15557 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15557__2.call(this,self__,k);
case 3:
return G__15557__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15557.cljs$core$IFn$_invoke$arity$2 = G__15557__2;
G__15557.cljs$core$IFn$_invoke$arity$3 = G__15557__3;
return G__15557;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args15556){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15556)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__15559 = null;
var G__15559__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15559__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15559 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15559__2.call(this,self__,k);
case 3:
return G__15559__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15559.cljs$core$IFn$_invoke$arity$2 = G__15559__2;
G__15559.cljs$core$IFn$_invoke$arity$3 = G__15559__3;
return G__15559;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args15558){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15558)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__15572 = k;
var G__15573 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15572,G__15573) : comp.call(null,G__15572,G__15573));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__15592 = k;
var G__15593 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15592,G__15593) : comp.call(null,G__15592,G__15593));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__15604 = k;
var G__15605 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15604,G__15605) : comp.call(null,G__15604,G__15605));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15607 = cljs.core.seq(coll);
var chunk__15608 = null;
var count__15609 = (0);
var i__15610 = (0);
while(true){
if((i__15610 < count__15609)){
var vec__15611 = chunk__15608.cljs$core$IIndexed$_nth$arity$2(null,i__15610);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15611,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15611,(1),null);
var G__15612_15624 = v;
var G__15613_15625 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15612_15624,G__15613_15625) : f.call(null,G__15612_15624,G__15613_15625));

var G__15626 = seq__15607;
var G__15627 = chunk__15608;
var G__15628 = count__15609;
var G__15629 = (i__15610 + (1));
seq__15607 = G__15626;
chunk__15608 = G__15627;
count__15609 = G__15628;
i__15610 = G__15629;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15607);
if(temp__4126__auto__){
var seq__15607__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15607__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__15607__$1);
var G__15630 = cljs.core.chunk_rest(seq__15607__$1);
var G__15631 = c__4598__auto__;
var G__15632 = cljs.core.count(c__4598__auto__);
var G__15633 = (0);
seq__15607 = G__15630;
chunk__15608 = G__15631;
count__15609 = G__15632;
i__15610 = G__15633;
continue;
} else {
var vec__15614 = cljs.core.first(seq__15607__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15614,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15614,(1),null);
var G__15615_15634 = v;
var G__15616_15635 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15615_15634,G__15616_15635) : f.call(null,G__15615_15634,G__15616_15635));

var G__15636 = cljs.core.next(seq__15607__$1);
var G__15637 = null;
var G__15638 = (0);
var G__15639 = (0);
seq__15607 = G__15636;
chunk__15608 = G__15637;
count__15609 = G__15638;
i__15610 = G__15639;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15617 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__15617) : cljs.core.keys.call(null,G__15617));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__15618 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__15618) : cljs.core.vals.call(null,G__15618));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15619 = k;
var G__15620 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15619,G__15620) : self__.comp.call(null,G__15619,G__15620));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__15640 = t.left;
t = G__15640;
continue;
} else {
var G__15641 = t.right;
t = G__15641;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__15642 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__15643 = cljs.core.next(es);
ret = G__15642;
es = G__15643;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__15644 = null;
var G__15644__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15644__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15644 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15644__2.call(this,self__,k);
case 3:
return G__15644__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15644.cljs$core$IFn$_invoke$arity$2 = G__15644__2;
G__15644.cljs$core$IFn$_invoke$arity$3 = G__15644__3;
return G__15644;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args15606){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15606)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__15621 = k;
var G__15622 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__15621,G__15622) : self__.comp.call(null,G__15621,G__15622));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__15645 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15646 = t.left;
stack = G__15645;
t = G__15646;
continue;
} else {
var G__15647 = stack;
var G__15648 = t.right;
stack = G__15647;
t = G__15648;
continue;
}
} else {
if((c > (0))){
var G__15649 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__15650 = t.right;
stack = G__15649;
t = G__15650;
continue;
} else {
var G__15651 = stack;
var G__15652 = t.left;
stack = G__15651;
t = G__15652;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__15623 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__15623) : cljs.core.key.call(null,G__15623));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__15653 = cljs.core.nnext(in$);
var G__15654 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15653;
out = G__15654;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15655__i = 0, G__15655__a = new Array(arguments.length -  0);
while (G__15655__i < G__15655__a.length) {G__15655__a[G__15655__i] = arguments[G__15655__i + 0]; ++G__15655__i;}
  keyvals = new cljs.core.IndexedSeq(G__15655__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__15656){
var keyvals = cljs.core.seq(arglist__15656);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15657__i = 0, G__15657__a = new Array(arguments.length -  0);
while (G__15657__i < G__15657__a.length) {G__15657__a[G__15657__i] = arguments[G__15657__i + 0]; ++G__15657__i;}
  keyvals = new cljs.core.IndexedSeq(G__15657__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__15658){
var keyvals = cljs.core.seq(arglist__15658);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj15662 = {};
return obj15662;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__15663 = cljs.core.nnext(kvs);
kvs = G__15663;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15664__i = 0, G__15664__a = new Array(arguments.length -  0);
while (G__15664__i < G__15664__a.length) {G__15664__a[G__15664__i] = arguments[G__15664__i + 0]; ++G__15664__i;}
  keyvals = new cljs.core.IndexedSeq(G__15664__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__15665){
var keyvals = cljs.core.seq(arglist__15665);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__15666 = cljs.core.nnext(in$);
var G__15667 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15666;
out = G__15667;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__15668__i = 0, G__15668__a = new Array(arguments.length -  0);
while (G__15668__i < G__15668__a.length) {G__15668__a[G__15668__i] = arguments[G__15668__i + 0]; ++G__15668__i;}
  keyvals = new cljs.core.IndexedSeq(G__15668__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__15669){
var keyvals = cljs.core.seq(arglist__15669);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__15670 = cljs.core.nnext(in$);
var G__15671 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__15670;
out = G__15671;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__15672__i = 0, G__15672__a = new Array(arguments.length -  1);
while (G__15672__i < G__15672__a.length) {G__15672__a[G__15672__i] = arguments[G__15672__i + 1]; ++G__15672__i;}
  keyvals = new cljs.core.IndexedSeq(G__15672__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__15673){
var comparator = cljs.core.first(arglist__15673);
var keyvals = cljs.core.rest(arglist__15673);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15674 = self__.mseq;
if(G__15674){
var bit__4492__auto__ = (G__15674.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4492__auto__) || (G__15674.cljs$core$INext$)){
return true;
} else {
if((!G__15674.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15674);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15674);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15675 = self__.mseq;
if(G__15675){
var bit__4492__auto__ = (G__15675.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4492__auto__) || (G__15675.cljs$core$INext$)){
return true;
} else {
if((!G__15675.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15675);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15675);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15676 = self__.mseq;
if(G__15676){
var bit__4492__auto__ = (G__15676.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4492__auto__) || (G__15676.cljs$core$INext$)){
return true;
} else {
if((!G__15676.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15676);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15676);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__15677 = self__.mseq;
if(G__15677){
var bit__4492__auto__ = (G__15677.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4492__auto__) || (G__15677.cljs$core$INext$)){
return true;
} else {
if((!G__15677.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15677);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__15677);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__15678_SHARP_,p2__15679_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3811__auto__ = p1__15678_SHARP_;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__15679_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__15680__i = 0, G__15680__a = new Array(arguments.length -  0);
while (G__15680__i < G__15680__a.length) {G__15680__a[G__15680__i] = arguments[G__15680__i + 0]; ++G__15680__i;}
  maps = new cljs.core.IndexedSeq(G__15680__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__15681){
var maps = cljs.core.seq(arglist__15681);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__15684 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__15685 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15684,G__15685) : f.call(null,G__15684,G__15685));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3811__auto__ = m1;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__15686__i = 0, G__15686__a = new Array(arguments.length -  1);
while (G__15686__i < G__15686__a.length) {G__15686__a[G__15686__i] = arguments[G__15686__i + 1]; ++G__15686__i;}
  maps = new cljs.core.IndexedSeq(G__15686__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__15687){
var f = cljs.core.first(arglist__15687);
var maps = cljs.core.rest(arglist__15687);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185));
var G__15688 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword("cljs.core","not-found","cljs.core/not-found",-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__15689 = cljs.core.next(keys);
ret = G__15688;
keys = G__15689;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15692 = cljs.core.seq(coll);
var chunk__15693 = null;
var count__15694 = (0);
var i__15695 = (0);
while(true){
if((i__15695 < count__15694)){
var vec__15696 = chunk__15693.cljs$core$IIndexed$_nth$arity$2(null,i__15695);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15696,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15696,(1),null);
var G__15697_15702 = v;
var G__15698_15703 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15697_15702,G__15698_15703) : f.call(null,G__15697_15702,G__15698_15703));

var G__15704 = seq__15692;
var G__15705 = chunk__15693;
var G__15706 = count__15694;
var G__15707 = (i__15695 + (1));
seq__15692 = G__15704;
chunk__15693 = G__15705;
count__15694 = G__15706;
i__15695 = G__15707;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15692);
if(temp__4126__auto__){
var seq__15692__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15692__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__15692__$1);
var G__15708 = cljs.core.chunk_rest(seq__15692__$1);
var G__15709 = c__4598__auto__;
var G__15710 = cljs.core.count(c__4598__auto__);
var G__15711 = (0);
seq__15692 = G__15708;
chunk__15693 = G__15709;
count__15694 = G__15710;
i__15695 = G__15711;
continue;
} else {
var vec__15699 = cljs.core.first(seq__15692__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15699,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15699,(1),null);
var G__15700_15712 = v;
var G__15701_15713 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15700_15712,G__15701_15713) : f.call(null,G__15700_15712,G__15701_15713));

var G__15714 = cljs.core.next(seq__15692__$1);
var G__15715 = null;
var G__15716 = (0);
var G__15717 = (0);
seq__15692 = G__15714;
chunk__15693 = G__15715;
count__15694 = G__15716;
i__15695 = G__15717;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15690_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15690_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__15718 = null;
var G__15718__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15718__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15718 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15718__2.call(this,self__,k);
case 3:
return G__15718__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15718.cljs$core$IFn$_invoke$arity$2 = G__15718__2;
G__15718.cljs$core$IFn$_invoke$arity$3 = G__15718__3;
return G__15718;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args15691){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15691)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__15719 = (i + (1));
var G__15720 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__15719;
out = G__15720;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__15721 = (i + (1));
var G__15722 = cljs.core._conj_BANG_(out,(items[i]));
i = G__15721;
out = G__15722;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__15724 = null;
var G__15724__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__15724__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__15724 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15724__2.call(this,self__,k);
case 3:
return G__15724__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15724.cljs$core$IFn$_invoke$arity$2 = G__15724__2;
G__15724.cljs$core$IFn$_invoke$arity$3 = G__15724__3;
return G__15724;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args15723){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15723)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__15727 = cljs.core.seq(coll);
var chunk__15728 = null;
var count__15729 = (0);
var i__15730 = (0);
while(true){
if((i__15730 < count__15729)){
var vec__15731 = chunk__15728.cljs$core$IIndexed$_nth$arity$2(null,i__15730);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15731,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15731,(1),null);
var G__15732_15737 = v;
var G__15733_15738 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15732_15737,G__15733_15738) : f.call(null,G__15732_15737,G__15733_15738));

var G__15739 = seq__15727;
var G__15740 = chunk__15728;
var G__15741 = count__15729;
var G__15742 = (i__15730 + (1));
seq__15727 = G__15739;
chunk__15728 = G__15740;
count__15729 = G__15741;
i__15730 = G__15742;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__15727);
if(temp__4126__auto__){
var seq__15727__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__15727__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__15727__$1);
var G__15743 = cljs.core.chunk_rest(seq__15727__$1);
var G__15744 = c__4598__auto__;
var G__15745 = cljs.core.count(c__4598__auto__);
var G__15746 = (0);
seq__15727 = G__15743;
chunk__15728 = G__15744;
count__15729 = G__15745;
i__15730 = G__15746;
continue;
} else {
var vec__15734 = cljs.core.first(seq__15727__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15734,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15734,(1),null);
var G__15735_15747 = v;
var G__15736_15748 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15735_15747,G__15736_15748) : f.call(null,G__15735_15747,G__15736_15748));

var G__15749 = cljs.core.next(seq__15727__$1);
var G__15750 = null;
var G__15751 = (0);
var G__15752 = (0);
seq__15727 = G__15749;
chunk__15728 = G__15750;
count__15729 = G__15751;
i__15730 = G__15752;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__15725_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__15725_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__15753 = null;
var G__15753__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__15753__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__15753 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__15753__2.call(this,self__,k);
case 3:
return G__15753__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15753.cljs$core$IFn$_invoke$arity$2 = G__15753__2;
G__15753.cljs$core$IFn$_invoke$arity$3 = G__15753__3;
return G__15753;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args15726){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args15726)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4692__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4692__auto__.length)){
var G__15754 = (i + (1));
var G__15755 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__15754;
res = G__15755;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__15756 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__15757 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__15756;
out = G__15757;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__15758__delegate = function (keys){
return cljs.core.set(keys);
};
var G__15758 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15759__i = 0, G__15759__a = new Array(arguments.length -  0);
while (G__15759__i < G__15759__a.length) {G__15759__a[G__15759__i] = arguments[G__15759__i + 0]; ++G__15759__i;}
  keys = new cljs.core.IndexedSeq(G__15759__a,0);
} 
return G__15758__delegate.call(this,keys);};
G__15758.cljs$lang$maxFixedArity = 0;
G__15758.cljs$lang$applyTo = (function (arglist__15760){
var keys = cljs.core.seq(arglist__15760);
return G__15758__delegate(keys);
});
G__15758.cljs$core$IFn$_invoke$arity$variadic = G__15758__delegate;
return G__15758;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__15761 = null;
if (arguments.length > 0) {
var G__15762__i = 0, G__15762__a = new Array(arguments.length -  0);
while (G__15762__i < G__15762__a.length) {G__15762__a[G__15762__i] = arguments[G__15762__i + 0]; ++G__15762__i;}
G__15761 = new cljs.core.IndexedSeq(G__15762__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__15761);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__15763__i = 0, G__15763__a = new Array(arguments.length -  0);
while (G__15763__i < G__15763__a.length) {G__15763__a[G__15763__i] = arguments[G__15763__i + 0]; ++G__15763__i;}
  keys = new cljs.core.IndexedSeq(G__15763__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__15764){
var keys = cljs.core.seq(arglist__15764);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__15765__i = 0, G__15765__a = new Array(arguments.length -  1);
while (G__15765__i < G__15765__a.length) {G__15765__a[G__15765__i] = arguments[G__15765__i + 1]; ++G__15765__i;}
  keys = new cljs.core.IndexedSeq(G__15765__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__15766){
var comparator = cljs.core.first(arglist__15766);
var keys = cljs.core.rest(arglist__15766);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__15767_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__15767_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__15767_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__15768_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__15768_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__15768_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__15789 = null;
var G__15789__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15789__1 = (function (result){
var G__15779 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15779) : rf.call(null,G__15779));
});
var G__15789__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__15780 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15780) : cljs.core.deref.call(null,G__15780));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__15781 = result;
var G__15782 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15781,G__15782) : rf.call(null,G__15781,G__15782));
}
});
G__15789 = function(result,input){
switch(arguments.length){
case 0:
return G__15789__0.call(this);
case 1:
return G__15789__1.call(this,result);
case 2:
return G__15789__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15789.cljs$core$IFn$_invoke$arity$0 = G__15789__0;
G__15789.cljs$core$IFn$_invoke$arity$1 = G__15789__1;
G__15789.cljs$core$IFn$_invoke$arity$2 = G__15789__2;
return G__15789;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__15787,seen__$1){
while(true){
var vec__15788 = p__15787;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15788,(0),null);
var xs__$1 = vec__15788;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__15790 = cljs.core.rest(s);
var G__15791 = seen__$1;
p__15787 = G__15790;
seen__$1 = G__15791;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__15792 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__15793 = cljs.core.next(s__$1);
ret = G__15792;
s__$1 = G__15793;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__15795 = x;
if(G__15795){
var bit__4485__auto__ = (G__15795.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4485__auto__) || (G__15795.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__15796 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__15797 = cljs.core.next(ks);
var G__15798 = cljs.core.next(vs);
map = G__15796;
ks = G__15797;
vs = G__15798;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__15809 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15809) : k.call(null,G__15809));
})() > (function (){var G__15810 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15810) : k.call(null,G__15810));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__15811__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15799_SHARP_,p2__15800_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__15799_SHARP_,p2__15800_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15811 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15812__i = 0, G__15812__a = new Array(arguments.length -  3);
while (G__15812__i < G__15812__a.length) {G__15812__a[G__15812__i] = arguments[G__15812__i + 3]; ++G__15812__i;}
  more = new cljs.core.IndexedSeq(G__15812__a,0);
} 
return G__15811__delegate.call(this,k,x,y,more);};
G__15811.cljs$lang$maxFixedArity = 3;
G__15811.cljs$lang$applyTo = (function (arglist__15813){
var k = cljs.core.first(arglist__15813);
arglist__15813 = cljs.core.next(arglist__15813);
var x = cljs.core.first(arglist__15813);
arglist__15813 = cljs.core.next(arglist__15813);
var y = cljs.core.first(arglist__15813);
var more = cljs.core.rest(arglist__15813);
return G__15811__delegate(k,x,y,more);
});
G__15811.cljs$core$IFn$_invoke$arity$variadic = G__15811__delegate;
return G__15811;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__15814 = null;
if (arguments.length > 3) {
var G__15815__i = 0, G__15815__a = new Array(arguments.length -  3);
while (G__15815__i < G__15815__a.length) {G__15815__a[G__15815__i] = arguments[G__15815__i + 3]; ++G__15815__i;}
G__15814 = new cljs.core.IndexedSeq(G__15815__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15814);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__15826 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15826) : k.call(null,G__15826));
})() < (function (){var G__15827 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__15827) : k.call(null,G__15827));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__15828__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__15816_SHARP_,p2__15817_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__15816_SHARP_,p2__15817_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__15828 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__15829__i = 0, G__15829__a = new Array(arguments.length -  3);
while (G__15829__i < G__15829__a.length) {G__15829__a[G__15829__i] = arguments[G__15829__i + 3]; ++G__15829__i;}
  more = new cljs.core.IndexedSeq(G__15829__a,0);
} 
return G__15828__delegate.call(this,k,x,y,more);};
G__15828.cljs$lang$maxFixedArity = 3;
G__15828.cljs$lang$applyTo = (function (arglist__15830){
var k = cljs.core.first(arglist__15830);
arglist__15830 = cljs.core.next(arglist__15830);
var x = cljs.core.first(arglist__15830);
arglist__15830 = cljs.core.next(arglist__15830);
var y = cljs.core.first(arglist__15830);
var more = cljs.core.rest(arglist__15830);
return G__15828__delegate(k,x,y,more);
});
G__15828.cljs$core$IFn$_invoke$arity$variadic = G__15828__delegate;
return G__15828;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__15831 = null;
if (arguments.length > 3) {
var G__15832__i = 0, G__15832__a = new Array(arguments.length -  3);
while (G__15832__i < G__15832__a.length) {G__15832__a[G__15832__i] = arguments[G__15832__i + 3]; ++G__15832__i;}
G__15831 = new cljs.core.IndexedSeq(G__15832__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__15831);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__15849 = null;
var G__15849__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15849__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15844 = result;
var G__15845 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15844,G__15845) : rf.call(null,G__15844,G__15845));
})());
})());
var G__15846 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15846) : rf.call(null,G__15846));
});
var G__15849__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__15847 = result;
var G__15848 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15847,G__15848) : rf.call(null,G__15847,G__15848));
} else {
return result;
}
});
G__15849 = function(result,input){
switch(arguments.length){
case 0:
return G__15849__0.call(this);
case 1:
return G__15849__1.call(this,result);
case 2:
return G__15849__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15849.cljs$core$IFn$_invoke$arity$0 = G__15849__0;
G__15849.cljs$core$IFn$_invoke$arity$1 = G__15849__1;
G__15849.cljs$core$IFn$_invoke$arity$2 = G__15849__2;
return G__15849;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__15862 = null;
var G__15862__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15862__1 = (function (result){
var G__15857 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15857) : rf.call(null,G__15857));
});
var G__15862__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__15858 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15858) : pred.call(null,G__15858));
})())){
var G__15859 = result;
var G__15860 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15859,G__15860) : rf.call(null,G__15859,G__15860));
} else {
return cljs.core.reduced(result);
}
});
G__15862 = function(result,input){
switch(arguments.length){
case 0:
return G__15862__0.call(this);
case 1:
return G__15862__1.call(this,result);
case 2:
return G__15862__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15862.cljs$core$IFn$_invoke$arity$0 = G__15862__0;
G__15862.cljs$core$IFn$_invoke$arity$1 = G__15862__1;
G__15862.cljs$core$IFn$_invoke$arity$2 = G__15862__2;
return G__15862;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__15861 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__15861) : pred.call(null,G__15861));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__15867 = (function (){var G__15869 = cljs.core._entry_key(sc,e);
var G__15870 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__15869,G__15870) : comp.call(null,G__15869,G__15870));
})();
var G__15868 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__15867,G__15868) : test.call(null,G__15867,G__15868));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15874 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15874,(0),null);
var s = vec__15874;
if(cljs.core.truth_((function (){var G__15875 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15875) : include.call(null,G__15875));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15876 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15876,(0),null);
var s = vec__15876;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15880 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15880,(0),null);
var s = vec__15880;
if(cljs.core.truth_((function (){var G__15881 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__15881) : include.call(null,G__15881));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__15882 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15882,(0),null);
var s = vec__15882;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__15883 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__15883) : Math.ceil.call(null,G__15883));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4232__auto__ = self__.__hash;
if(!((h__4232__auto__ == null))){
return h__4232__auto__;
} else {
var h__4232__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4232__auto____$1;

return h__4232__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__15884 = ret;
var G__15885 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15884,G__15885) : f.call(null,G__15884,G__15885));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__15886 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15886) : cljs.core.deref.call(null,G__15886));
} else {
var G__15887 = (i + self__.step);
var G__15888 = ret__$1;
i = G__15887;
ret = G__15888;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__15906 = null;
var G__15906__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15906__1 = (function (result){
var G__15903 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15903) : rf.call(null,G__15903));
});
var G__15906__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__15904 = result;
var G__15905 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15904,G__15905) : rf.call(null,G__15904,G__15905));
} else {
return result;
}
});
G__15906 = function(result,input){
switch(arguments.length){
case 0:
return G__15906__0.call(this);
case 1:
return G__15906__1.call(this,result);
case 2:
return G__15906__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15906.cljs$core$IFn$_invoke$arity$0 = G__15906__0;
G__15906.cljs$core$IFn$_invoke$arity$1 = G__15906__1;
G__15906.cljs$core$IFn$_invoke$arity$2 = G__15906__2;
return G__15906;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (a,pa){
return (function() {
var G__15928 = null;
var G__15928__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__15928__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__15919 = result;
var G__15920 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15919,G__15920) : rf.call(null,G__15919,G__15920));
})());
})());
var G__15921 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__15921) : rf.call(null,G__15921));
});
var G__15928__2 = (function (result,input){
var pval = (function (){var G__15922 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15922) : cljs.core.deref.call(null,G__15922));
})();
var val = (function (){var G__15923 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15923) : f.call(null,G__15923));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__15924 = result;
var G__15925 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__15924,G__15925) : rf.call(null,G__15924,G__15925));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__15928 = function(result,input){
switch(arguments.length){
case 0:
return G__15928__0.call(this);
case 1:
return G__15928__1.call(this,result);
case 2:
return G__15928__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__15928.cljs$core$IFn$_invoke$arity$0 = G__15928__0;
G__15928.cljs$core$IFn$_invoke$arity$1 = G__15928__1;
G__15928.cljs$core$IFn$_invoke$arity$2 = G__15928__2;
return G__15928;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__15926 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15926) : f.call(null,G__15926));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__15907_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__15927 = p1__15907_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15927) : f.call(null,G__15927));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__15937 = init;
var G__15938 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15937,G__15938) : f.call(null,G__15937,G__15938));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__16033 = null;
var G__16033__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__16033__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15991 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15991) : f.call(null,G__15991));
})()],null));
});
var G__16033__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15992 = x;
var G__15993 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15992,G__15993) : f.call(null,G__15992,G__15993));
})()],null));
});
var G__16033__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15994 = x;
var G__15995 = y;
var G__15996 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__15994,G__15995,G__15996) : f.call(null,G__15994,G__15995,G__15996));
})()],null));
});
var G__16033__4 = (function() { 
var G__16034__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__16034 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16035__i = 0, G__16035__a = new Array(arguments.length -  3);
while (G__16035__i < G__16035__a.length) {G__16035__a[G__16035__i] = arguments[G__16035__i + 3]; ++G__16035__i;}
  args = new cljs.core.IndexedSeq(G__16035__a,0);
} 
return G__16034__delegate.call(this,x,y,z,args);};
G__16034.cljs$lang$maxFixedArity = 3;
G__16034.cljs$lang$applyTo = (function (arglist__16036){
var x = cljs.core.first(arglist__16036);
arglist__16036 = cljs.core.next(arglist__16036);
var y = cljs.core.first(arglist__16036);
arglist__16036 = cljs.core.next(arglist__16036);
var z = cljs.core.first(arglist__16036);
var args = cljs.core.rest(arglist__16036);
return G__16034__delegate(x,y,z,args);
});
G__16034.cljs$core$IFn$_invoke$arity$variadic = G__16034__delegate;
return G__16034;
})()
;
G__16033 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16033__0.call(this);
case 1:
return G__16033__1.call(this,x);
case 2:
return G__16033__2.call(this,x,y);
case 3:
return G__16033__3.call(this,x,y,z);
default:
var G__16037 = null;
if (arguments.length > 3) {
var G__16038__i = 0, G__16038__a = new Array(arguments.length -  3);
while (G__16038__i < G__16038__a.length) {G__16038__a[G__16038__i] = arguments[G__16038__i + 3]; ++G__16038__i;}
G__16037 = new cljs.core.IndexedSeq(G__16038__a,0);
}
return G__16033__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16037);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16033.cljs$lang$maxFixedArity = 3;
G__16033.cljs$lang$applyTo = G__16033__4.cljs$lang$applyTo;
G__16033.cljs$core$IFn$_invoke$arity$0 = G__16033__0;
G__16033.cljs$core$IFn$_invoke$arity$1 = G__16033__1;
G__16033.cljs$core$IFn$_invoke$arity$2 = G__16033__2;
G__16033.cljs$core$IFn$_invoke$arity$3 = G__16033__3;
G__16033.cljs$core$IFn$_invoke$arity$variadic = G__16033__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16033;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__16039 = null;
var G__16039__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__16039__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15997 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__15997) : f.call(null,G__15997));
})(),(function (){var G__15998 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__15998) : g.call(null,G__15998));
})()],null));
});
var G__16039__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__15999 = x;
var G__16000 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__15999,G__16000) : f.call(null,G__15999,G__16000));
})(),(function (){var G__16001 = x;
var G__16002 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__16001,G__16002) : g.call(null,G__16001,G__16002));
})()],null));
});
var G__16039__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16003 = x;
var G__16004 = y;
var G__16005 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16003,G__16004,G__16005) : f.call(null,G__16003,G__16004,G__16005));
})(),(function (){var G__16006 = x;
var G__16007 = y;
var G__16008 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__16006,G__16007,G__16008) : g.call(null,G__16006,G__16007,G__16008));
})()],null));
});
var G__16039__4 = (function() { 
var G__16040__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__16040 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16041__i = 0, G__16041__a = new Array(arguments.length -  3);
while (G__16041__i < G__16041__a.length) {G__16041__a[G__16041__i] = arguments[G__16041__i + 3]; ++G__16041__i;}
  args = new cljs.core.IndexedSeq(G__16041__a,0);
} 
return G__16040__delegate.call(this,x,y,z,args);};
G__16040.cljs$lang$maxFixedArity = 3;
G__16040.cljs$lang$applyTo = (function (arglist__16042){
var x = cljs.core.first(arglist__16042);
arglist__16042 = cljs.core.next(arglist__16042);
var y = cljs.core.first(arglist__16042);
arglist__16042 = cljs.core.next(arglist__16042);
var z = cljs.core.first(arglist__16042);
var args = cljs.core.rest(arglist__16042);
return G__16040__delegate(x,y,z,args);
});
G__16040.cljs$core$IFn$_invoke$arity$variadic = G__16040__delegate;
return G__16040;
})()
;
G__16039 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16039__0.call(this);
case 1:
return G__16039__1.call(this,x);
case 2:
return G__16039__2.call(this,x,y);
case 3:
return G__16039__3.call(this,x,y,z);
default:
var G__16043 = null;
if (arguments.length > 3) {
var G__16044__i = 0, G__16044__a = new Array(arguments.length -  3);
while (G__16044__i < G__16044__a.length) {G__16044__a[G__16044__i] = arguments[G__16044__i + 3]; ++G__16044__i;}
G__16043 = new cljs.core.IndexedSeq(G__16044__a,0);
}
return G__16039__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16043);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16039.cljs$lang$maxFixedArity = 3;
G__16039.cljs$lang$applyTo = G__16039__4.cljs$lang$applyTo;
G__16039.cljs$core$IFn$_invoke$arity$0 = G__16039__0;
G__16039.cljs$core$IFn$_invoke$arity$1 = G__16039__1;
G__16039.cljs$core$IFn$_invoke$arity$2 = G__16039__2;
G__16039.cljs$core$IFn$_invoke$arity$3 = G__16039__3;
G__16039.cljs$core$IFn$_invoke$arity$variadic = G__16039__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16039;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__16045 = null;
var G__16045__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__16045__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16009 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16009) : f.call(null,G__16009));
})(),(function (){var G__16010 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__16010) : g.call(null,G__16010));
})(),(function (){var G__16011 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__16011) : h.call(null,G__16011));
})()],null));
});
var G__16045__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16012 = x;
var G__16013 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__16012,G__16013) : f.call(null,G__16012,G__16013));
})(),(function (){var G__16014 = x;
var G__16015 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__16014,G__16015) : g.call(null,G__16014,G__16015));
})(),(function (){var G__16016 = x;
var G__16017 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__16016,G__16017) : h.call(null,G__16016,G__16017));
})()],null));
});
var G__16045__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__16018 = x;
var G__16019 = y;
var G__16020 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__16018,G__16019,G__16020) : f.call(null,G__16018,G__16019,G__16020));
})(),(function (){var G__16021 = x;
var G__16022 = y;
var G__16023 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__16021,G__16022,G__16023) : g.call(null,G__16021,G__16022,G__16023));
})(),(function (){var G__16024 = x;
var G__16025 = y;
var G__16026 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__16024,G__16025,G__16026) : h.call(null,G__16024,G__16025,G__16026));
})()],null));
});
var G__16045__4 = (function() { 
var G__16046__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__16046 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16047__i = 0, G__16047__a = new Array(arguments.length -  3);
while (G__16047__i < G__16047__a.length) {G__16047__a[G__16047__i] = arguments[G__16047__i + 3]; ++G__16047__i;}
  args = new cljs.core.IndexedSeq(G__16047__a,0);
} 
return G__16046__delegate.call(this,x,y,z,args);};
G__16046.cljs$lang$maxFixedArity = 3;
G__16046.cljs$lang$applyTo = (function (arglist__16048){
var x = cljs.core.first(arglist__16048);
arglist__16048 = cljs.core.next(arglist__16048);
var y = cljs.core.first(arglist__16048);
arglist__16048 = cljs.core.next(arglist__16048);
var z = cljs.core.first(arglist__16048);
var args = cljs.core.rest(arglist__16048);
return G__16046__delegate(x,y,z,args);
});
G__16046.cljs$core$IFn$_invoke$arity$variadic = G__16046__delegate;
return G__16046;
})()
;
G__16045 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16045__0.call(this);
case 1:
return G__16045__1.call(this,x);
case 2:
return G__16045__2.call(this,x,y);
case 3:
return G__16045__3.call(this,x,y,z);
default:
var G__16049 = null;
if (arguments.length > 3) {
var G__16050__i = 0, G__16050__a = new Array(arguments.length -  3);
while (G__16050__i < G__16050__a.length) {G__16050__a[G__16050__i] = arguments[G__16050__i + 3]; ++G__16050__i;}
G__16049 = new cljs.core.IndexedSeq(G__16050__a,0);
}
return G__16045__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16049);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16045.cljs$lang$maxFixedArity = 3;
G__16045.cljs$lang$applyTo = G__16045__4.cljs$lang$applyTo;
G__16045.cljs$core$IFn$_invoke$arity$0 = G__16045__0;
G__16045.cljs$core$IFn$_invoke$arity$1 = G__16045__1;
G__16045.cljs$core$IFn$_invoke$arity$2 = G__16045__2;
G__16045.cljs$core$IFn$_invoke$arity$3 = G__16045__3;
G__16045.cljs$core$IFn$_invoke$arity$variadic = G__16045__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16045;
})()
});
var juxt__4 = (function() { 
var G__16051__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__16052 = null;
var G__16052__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15939_SHARP_,p2__15940_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15939_SHARP_,(function (){return (p2__15940_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__15940_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__15940_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16052__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15941_SHARP_,p2__15942_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15941_SHARP_,(function (){var G__16027 = x;
return (p2__15942_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__15942_SHARP_.cljs$core$IFn$_invoke$arity$1(G__16027) : p2__15942_SHARP_.call(null,G__16027));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16052__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15943_SHARP_,p2__15944_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15943_SHARP_,(function (){var G__16028 = x;
var G__16029 = y;
return (p2__15944_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__15944_SHARP_.cljs$core$IFn$_invoke$arity$2(G__16028,G__16029) : p2__15944_SHARP_.call(null,G__16028,G__16029));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16052__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15945_SHARP_,p2__15946_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15945_SHARP_,(function (){var G__16030 = x;
var G__16031 = y;
var G__16032 = z;
return (p2__15946_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__15946_SHARP_.cljs$core$IFn$_invoke$arity$3(G__16030,G__16031,G__16032) : p2__15946_SHARP_.call(null,G__16030,G__16031,G__16032));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__16052__4 = (function() { 
var G__16053__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__15947_SHARP_,p2__15948_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__15947_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__15948_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__16053 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__16054__i = 0, G__16054__a = new Array(arguments.length -  3);
while (G__16054__i < G__16054__a.length) {G__16054__a[G__16054__i] = arguments[G__16054__i + 3]; ++G__16054__i;}
  args = new cljs.core.IndexedSeq(G__16054__a,0);
} 
return G__16053__delegate.call(this,x,y,z,args);};
G__16053.cljs$lang$maxFixedArity = 3;
G__16053.cljs$lang$applyTo = (function (arglist__16055){
var x = cljs.core.first(arglist__16055);
arglist__16055 = cljs.core.next(arglist__16055);
var y = cljs.core.first(arglist__16055);
arglist__16055 = cljs.core.next(arglist__16055);
var z = cljs.core.first(arglist__16055);
var args = cljs.core.rest(arglist__16055);
return G__16053__delegate(x,y,z,args);
});
G__16053.cljs$core$IFn$_invoke$arity$variadic = G__16053__delegate;
return G__16053;
})()
;
G__16052 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__16052__0.call(this);
case 1:
return G__16052__1.call(this,x);
case 2:
return G__16052__2.call(this,x,y);
case 3:
return G__16052__3.call(this,x,y,z);
default:
var G__16056 = null;
if (arguments.length > 3) {
var G__16057__i = 0, G__16057__a = new Array(arguments.length -  3);
while (G__16057__i < G__16057__a.length) {G__16057__a[G__16057__i] = arguments[G__16057__i + 3]; ++G__16057__i;}
G__16056 = new cljs.core.IndexedSeq(G__16057__a,0);
}
return G__16052__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__16056);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16052.cljs$lang$maxFixedArity = 3;
G__16052.cljs$lang$applyTo = G__16052__4.cljs$lang$applyTo;
G__16052.cljs$core$IFn$_invoke$arity$0 = G__16052__0;
G__16052.cljs$core$IFn$_invoke$arity$1 = G__16052__1;
G__16052.cljs$core$IFn$_invoke$arity$2 = G__16052__2;
G__16052.cljs$core$IFn$_invoke$arity$3 = G__16052__3;
G__16052.cljs$core$IFn$_invoke$arity$variadic = G__16052__4.cljs$core$IFn$_invoke$arity$variadic;
return G__16052;
})()
;})(fs__$1))
};
var G__16051 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__16058__i = 0, G__16058__a = new Array(arguments.length -  3);
while (G__16058__i < G__16058__a.length) {G__16058__a[G__16058__i] = arguments[G__16058__i + 3]; ++G__16058__i;}
  fs = new cljs.core.IndexedSeq(G__16058__a,0);
} 
return G__16051__delegate.call(this,f,g,h,fs);};
G__16051.cljs$lang$maxFixedArity = 3;
G__16051.cljs$lang$applyTo = (function (arglist__16059){
var f = cljs.core.first(arglist__16059);
arglist__16059 = cljs.core.next(arglist__16059);
var g = cljs.core.first(arglist__16059);
arglist__16059 = cljs.core.next(arglist__16059);
var h = cljs.core.first(arglist__16059);
var fs = cljs.core.rest(arglist__16059);
return G__16051__delegate(f,g,h,fs);
});
G__16051.cljs$core$IFn$_invoke$arity$variadic = G__16051__delegate;
return G__16051;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__16060 = null;
if (arguments.length > 3) {
var G__16061__i = 0, G__16061__a = new Array(arguments.length -  3);
while (G__16061__i < G__16061__a.length) {G__16061__a[G__16061__i] = arguments[G__16061__i + 3]; ++G__16061__i;}
G__16060 = new cljs.core.IndexedSeq(G__16061__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__16060);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__16062 = cljs.core.next(coll);
coll = G__16062;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__16063 = (n - (1));
var G__16064 = cljs.core.next(coll);
n = G__16063;
coll = G__16064;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__16068 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16068,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16068,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16068,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_16076 = cljs.core._STAR_print_level_STAR_;
try{cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__16077_16083 = cljs.core.first(coll);
var G__16078_16084 = writer;
var G__16079_16085 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16077_16083,G__16078_16084,G__16079_16085) : print_one.call(null,G__16077_16083,G__16078_16084,G__16079_16085));
} else {
}

var coll_16086__$1 = cljs.core.next(coll);
var n_16087 = (new cljs.core.Keyword(null,"print-length","print-length",1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_16086__$1) && (((n_16087 == null)) || (!((n_16087 === (0)))))){
cljs.core._write(writer,sep);

var G__16080_16088 = cljs.core.first(coll_16086__$1);
var G__16081_16089 = writer;
var G__16082_16090 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16080_16088,G__16081_16089,G__16082_16090) : print_one.call(null,G__16080_16088,G__16081_16089,G__16082_16090));

var G__16091 = cljs.core.next(coll_16086__$1);
var G__16092 = (n_16087 - (1));
coll_16086__$1 = G__16091;
n_16087 = G__16092;
continue;
} else {
if((cljs.core.seq(coll_16086__$1)) && ((n_16087 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_16076;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__16097 = cljs.core.seq(ss);
var chunk__16098 = null;
var count__16099 = (0);
var i__16100 = (0);
while(true){
if((i__16100 < count__16099)){
var s = chunk__16098.cljs$core$IIndexed$_nth$arity$2(null,i__16100);
cljs.core._write(writer,s);

var G__16101 = seq__16097;
var G__16102 = chunk__16098;
var G__16103 = count__16099;
var G__16104 = (i__16100 + (1));
seq__16097 = G__16101;
chunk__16098 = G__16102;
count__16099 = G__16103;
i__16100 = G__16104;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16097);
if(temp__4126__auto__){
var seq__16097__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16097__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__16097__$1);
var G__16105 = cljs.core.chunk_rest(seq__16097__$1);
var G__16106 = c__4598__auto__;
var G__16107 = cljs.core.count(c__4598__auto__);
var G__16108 = (0);
seq__16097 = G__16105;
chunk__16098 = G__16106;
count__16099 = G__16107;
i__16100 = G__16108;
continue;
} else {
var s = cljs.core.first(seq__16097__$1);
cljs.core._write(writer,s);

var G__16109 = cljs.core.next(seq__16097__$1);
var G__16110 = null;
var G__16111 = (0);
var G__16112 = (0);
seq__16097 = G__16109;
chunk__16098 = G__16110;
count__16099 = G__16111;
i__16100 = G__16112;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__16113__i = 0, G__16113__a = new Array(arguments.length -  1);
while (G__16113__i < G__16113__a.length) {G__16113__a[G__16113__i] = arguments[G__16113__i + 1]; ++G__16113__i;}
  ss = new cljs.core.IndexedSeq(G__16113__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__16114){
var writer = cljs.core.first(arglist__16114);
var ss = cljs.core.rest(arglist__16114);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj16116 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj16116;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__16119 = "[\\\\\"\b\f\n\r\t]";
var G__16120 = "g";
return RegExp(G__16119,G__16120);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3799__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"meta","meta",1499536964));
if(cljs.core.truth_(and__3799__auto__)){
var and__3799__auto____$1 = (function (){var G__16134 = obj;
if(G__16134){
var bit__4492__auto__ = (G__16134.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4492__auto__) || (G__16134.cljs$core$IMeta$)){
return true;
} else {
if((!G__16134.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__16134);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__16134);
}
})();
if(and__3799__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__16135 = obj;
if(G__16135){
var bit__4485__auto__ = (G__16135.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4485__auto__) || (G__16135.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__16136 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__16137 = pr_writer;
var G__16138 = writer;
var G__16139 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__16136,G__16137,G__16138,G__16139) : cljs.core.print_map.call(null,G__16136,G__16137,G__16138,G__16139));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__16140 = obj;
return goog.isString(G__16140);
})())){
if(cljs.core.truth_(new cljs.core.Keyword(null,"readably","readably",1129599760).cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__16142 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__16142;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__16141 = obj;
if(G__16141){
var bit__4492__auto__ = (G__16141.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4492__auto__) || (G__16141.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__16141.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__16141);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__16141);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__16147 = cljs.core.seq(cljs.core.next(objs));
var chunk__16148 = null;
var count__16149 = (0);
var i__16150 = (0);
while(true){
if((i__16150 < count__16149)){
var obj = chunk__16148.cljs$core$IIndexed$_nth$arity$2(null,i__16150);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__16151 = seq__16147;
var G__16152 = chunk__16148;
var G__16153 = count__16149;
var G__16154 = (i__16150 + (1));
seq__16147 = G__16151;
chunk__16148 = G__16152;
count__16149 = G__16153;
i__16150 = G__16154;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__16147);
if(temp__4126__auto__){
var seq__16147__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__16147__$1)){
var c__4598__auto__ = cljs.core.chunk_first(seq__16147__$1);
var G__16155 = cljs.core.chunk_rest(seq__16147__$1);
var G__16156 = c__4598__auto__;
var G__16157 = cljs.core.count(c__4598__auto__);
var G__16158 = (0);
seq__16147 = G__16155;
chunk__16148 = G__16156;
count__16149 = G__16157;
i__16150 = G__16158;
continue;
} else {
var obj = cljs.core.first(seq__16147__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__16159 = cljs.core.next(seq__16147__$1);
var G__16160 = null;
var G__16161 = (0);
var G__16162 = (0);
seq__16147 = G__16159;
chunk__16148 = G__16160;
count__16149 = G__16161;
i__16150 = G__16162;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,"flush-on-newline","flush-on-newline",-151457939)))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16163__i = 0, G__16163__a = new Array(arguments.length -  0);
while (G__16163__i < G__16163__a.length) {G__16163__a[G__16163__i] = arguments[G__16163__i + 0]; ++G__16163__i;}
  objs = new cljs.core.IndexedSeq(G__16163__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__16164){
var objs = cljs.core.seq(arglist__16164);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16165__i = 0, G__16165__a = new Array(arguments.length -  0);
while (G__16165__i < G__16165__a.length) {G__16165__a[G__16165__i] = arguments[G__16165__i + 0]; ++G__16165__i;}
  objs = new cljs.core.IndexedSeq(G__16165__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__16166){
var objs = cljs.core.seq(arglist__16166);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16167__i = 0, G__16167__a = new Array(arguments.length -  0);
while (G__16167__i < G__16167__a.length) {G__16167__a[G__16167__i] = arguments[G__16167__i + 0]; ++G__16167__i;}
  objs = new cljs.core.IndexedSeq(G__16167__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__16168){
var objs = cljs.core.seq(arglist__16168);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16169__i = 0, G__16169__a = new Array(arguments.length -  0);
while (G__16169__i < G__16169__a.length) {G__16169__a[G__16169__i] = arguments[G__16169__i + 0]; ++G__16169__i;}
  objs = new cljs.core.IndexedSeq(G__16169__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__16170){
var objs = cljs.core.seq(arglist__16170);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16171__i = 0, G__16171__a = new Array(arguments.length -  0);
while (G__16171__i < G__16171__a.length) {G__16171__a[G__16171__i] = arguments[G__16171__i + 0]; ++G__16171__i;}
  objs = new cljs.core.IndexedSeq(G__16171__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__16172){
var objs = cljs.core.seq(arglist__16172);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16173__i = 0, G__16173__a = new Array(arguments.length -  0);
while (G__16173__i < G__16173__a.length) {G__16173__a[G__16173__i] = arguments[G__16173__i + 0]; ++G__16173__i;}
  objs = new cljs.core.IndexedSeq(G__16173__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__16174){
var objs = cljs.core.seq(arglist__16174);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,"readably","readably",1129599760),false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16175__i = 0, G__16175__a = new Array(arguments.length -  0);
while (G__16175__i < G__16175__a.length) {G__16175__a[G__16175__i] = arguments[G__16175__i + 0]; ++G__16175__i;}
  objs = new cljs.core.IndexedSeq(G__16175__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__16176){
var objs = cljs.core.seq(arglist__16176);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__16177__i = 0, G__16177__a = new Array(arguments.length -  0);
while (G__16177__i < G__16177__a.length) {G__16177__a[G__16177__i] = arguments[G__16177__i + 0]; ++G__16177__i;}
  objs = new cljs.core.IndexedSeq(G__16177__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__16178){
var objs = cljs.core.seq(arglist__16178);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__16185_16191 = cljs.core.key(e);
var G__16186_16192 = w;
var G__16187_16193 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16185_16191,G__16186_16192,G__16187_16193) : print_one.call(null,G__16185_16191,G__16186_16192,G__16187_16193));

cljs.core._write(w," ");

var G__16188 = cljs.core.val(e);
var G__16189 = w;
var G__16190 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__16188,G__16189,G__16190) : print_one.call(null,G__16188,G__16189,G__16190));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__16194__i = 0, G__16194__a = new Array(arguments.length -  2);
while (G__16194__i < G__16194__a.length) {G__16194__a[G__16194__i] = arguments[G__16194__i + 2]; ++G__16194__i;}
  args = new cljs.core.IndexedSeq(G__16194__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__16195){
var iref = cljs.core.first(arglist__16195);
arglist__16195 = cljs.core.next(arglist__16195);
var f = cljs.core.first(arglist__16195);
var args = cljs.core.rest(arglist__16195);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__16198 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16198) : cljs.core.atom.call(null,G__16198));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__16200 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16200) : cljs.core.deref.call(null,G__16200));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__16201_SHARP_,p2__16202_SHARP_){
var ret = (function (){var G__16205 = p1__16201_SHARP_;
var G__16206 = p2__16202_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16205,G__16206) : rf.call(null,G__16205,G__16206));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__16209 = null;
var G__16209__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16209__1 = (function (result){
var G__16208 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16208) : rf.call(null,G__16208));
});
var G__16209__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__16209 = function(result,input){
switch(arguments.length){
case 0:
return G__16209__0.call(this);
case 1:
return G__16209__1.call(this,result);
case 2:
return G__16209__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16209.cljs$core$IFn$_invoke$arity$0 = G__16209__0;
G__16209.cljs$core$IFn$_invoke$arity$1 = G__16209__1;
G__16209.cljs$core$IFn$_invoke$arity$2 = G__16209__2;
return G__16209;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core","none","cljs.core/none",926646439));
return ((function (pa){
return (function() {
var G__16218 = null;
var G__16218__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__16218__1 = (function (result){
var G__16214 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__16214) : rf.call(null,G__16214));
});
var G__16218__2 = (function (result,input){
var prior = (function (){var G__16215 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16215) : cljs.core.deref.call(null,G__16215));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__16216 = result;
var G__16217 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__16216,G__16217) : rf.call(null,G__16216,G__16217));
}
});
G__16218 = function(result,input){
switch(arguments.length){
case 0:
return G__16218__0.call(this);
case 1:
return G__16218__1.call(this,result);
case 2:
return G__16218__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__16218.cljs$core$IFn$_invoke$arity$0 = G__16218__0;
G__16218.cljs$core$IFn$_invoke$arity$1 = G__16218__1;
G__16218.cljs$core$IFn$_invoke$arity$2 = G__16218__2;
return G__16218;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4789__auto__ = this;
return cljs.core.es6_iterator(this__4789__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__16220_SHARP_,p2__16219_SHARP_){
var G__16222 = p2__16219_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__16222) : proc.call(null,G__16222));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj16224 = {};
return obj16224;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._clj__GT_js[(function (){var G__16228 = x__4455__auto__;
return goog.typeOf(G__16228);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._key__GT_js[(function (){var G__16232 = x__4455__auto__;
return goog.typeOf(G__16232);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__16235 = k;
if(G__16235){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto__ = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return G__16235.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__16235.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16235);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16235);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__16236 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__16236) : cljs.core.clj__GT_js.call(null,G__16236));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__16252 = x;
if(G__16252){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto__ = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return G__16252.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__16252.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16252);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__16252);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj16254 = {};
return obj16254;
})();
var seq__16255_16265 = cljs.core.seq(x);
var chunk__16256_16266 = null;
var count__16257_16267 = (0);
var i__16258_16268 = (0);
while(true){
if((i__16258_16268 < count__16257_16267)){
var vec__16259_16269 = chunk__16256_16266.cljs$core$IIndexed$_nth$arity$2(null,i__16258_16268);
var k_16270 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16259_16269,(0),null);
var v_16271 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16259_16269,(1),null);
(m[cljs.core.key__GT_js(k_16270)] = clj__GT_js(v_16271));

var G__16272 = seq__16255_16265;
var G__16273 = chunk__16256_16266;
var G__16274 = count__16257_16267;
var G__16275 = (i__16258_16268 + (1));
seq__16255_16265 = G__16272;
chunk__16256_16266 = G__16273;
count__16257_16267 = G__16274;
i__16258_16268 = G__16275;
continue;
} else {
var temp__4126__auto___16276 = cljs.core.seq(seq__16255_16265);
if(temp__4126__auto___16276){
var seq__16255_16277__$1 = temp__4126__auto___16276;
if(cljs.core.chunked_seq_QMARK_(seq__16255_16277__$1)){
var c__4598__auto___16278 = cljs.core.chunk_first(seq__16255_16277__$1);
var G__16279 = cljs.core.chunk_rest(seq__16255_16277__$1);
var G__16280 = c__4598__auto___16278;
var G__16281 = cljs.core.count(c__4598__auto___16278);
var G__16282 = (0);
seq__16255_16265 = G__16279;
chunk__16256_16266 = G__16280;
count__16257_16267 = G__16281;
i__16258_16268 = G__16282;
continue;
} else {
var vec__16260_16283 = cljs.core.first(seq__16255_16277__$1);
var k_16284 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16260_16283,(0),null);
var v_16285 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16260_16283,(1),null);
(m[cljs.core.key__GT_js(k_16284)] = clj__GT_js(v_16285));

var G__16286 = cljs.core.next(seq__16255_16277__$1);
var G__16287 = null;
var G__16288 = (0);
var G__16289 = (0);
seq__16255_16265 = G__16286;
chunk__16256_16266 = G__16287;
count__16257_16267 = G__16288;
i__16258_16268 = G__16289;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__16261_16290 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__16262_16291 = null;
var count__16263_16292 = (0);
var i__16264_16293 = (0);
while(true){
if((i__16264_16293 < count__16263_16292)){
var x_16294__$1 = chunk__16262_16291.cljs$core$IIndexed$_nth$arity$2(null,i__16264_16293);
arr.push(x_16294__$1);

var G__16295 = seq__16261_16290;
var G__16296 = chunk__16262_16291;
var G__16297 = count__16263_16292;
var G__16298 = (i__16264_16293 + (1));
seq__16261_16290 = G__16295;
chunk__16262_16291 = G__16296;
count__16263_16292 = G__16297;
i__16264_16293 = G__16298;
continue;
} else {
var temp__4126__auto___16299 = cljs.core.seq(seq__16261_16290);
if(temp__4126__auto___16299){
var seq__16261_16300__$1 = temp__4126__auto___16299;
if(cljs.core.chunked_seq_QMARK_(seq__16261_16300__$1)){
var c__4598__auto___16301 = cljs.core.chunk_first(seq__16261_16300__$1);
var G__16302 = cljs.core.chunk_rest(seq__16261_16300__$1);
var G__16303 = c__4598__auto___16301;
var G__16304 = cljs.core.count(c__4598__auto___16301);
var G__16305 = (0);
seq__16261_16290 = G__16302;
chunk__16262_16291 = G__16303;
count__16263_16292 = G__16304;
i__16264_16293 = G__16305;
continue;
} else {
var x_16306__$1 = cljs.core.first(seq__16261_16300__$1);
arr.push(x_16306__$1);

var G__16307 = cljs.core.next(seq__16261_16300__$1);
var G__16308 = null;
var G__16309 = (0);
var G__16310 = (0);
seq__16261_16290 = G__16307;
chunk__16262_16291 = G__16308;
count__16263_16292 = G__16309;
i__16264_16293 = G__16310;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj16312 = {};
return obj16312;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3799__auto__ = x;
if(and__3799__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3799__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4455__auto__ = (((x == null))?null:x);
return (function (){var or__3811__auto__ = (cljs.core._js__GT_clj[(function (){var G__16316 = x__4455__auto__;
return goog.typeOf(G__16316);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252),false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__16373__delegate = function (x,opts){
var map__16346 = opts;
var map__16346__$1 = ((cljs.core.seq_QMARK_(map__16346))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__16346):map__16346);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__16346__$1,new cljs.core.Keyword(null,"keywordize-keys","keywordize-keys",1310784252));
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__16346,map__16346__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__16362 = x__$1;
if(G__16362){
var bit__4492__auto__ = null;
if(cljs.core.truth_((function (){var or__3811__auto__ = bit__4492__auto__;
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return G__16362.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__16362.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16362);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__16362);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4567__auto__ = ((function (map__16346,map__16346__$1,keywordize_keys,keyfn){
return (function iter__16363(s__16364){
return (new cljs.core.LazySeq(null,((function (map__16346,map__16346__$1,keywordize_keys,keyfn){
return (function (){
var s__16364__$1 = s__16364;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__16364__$1);
if(temp__4126__auto__){
var s__16364__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__16364__$2)){
var c__4565__auto__ = cljs.core.chunk_first(s__16364__$2);
var size__4566__auto__ = cljs.core.count(c__4565__auto__);
var b__16366 = cljs.core.chunk_buffer(size__4566__auto__);
if((function (){var i__16365 = (0);
while(true){
if((i__16365 < size__4566__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4565__auto__,i__16365);
cljs.core.chunk_append(b__16366,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16371 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16371) : keyfn.call(null,G__16371));
})(),thisfn((x__$1[k]))], null));

var G__16374 = (i__16365 + (1));
i__16365 = G__16374;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__16366),iter__16363(cljs.core.chunk_rest(s__16364__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__16366),null);
}
} else {
var k = cljs.core.first(s__16364__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__16372 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__16372) : keyfn.call(null,G__16372));
})(),thisfn((x__$1[k]))], null),iter__16363(cljs.core.rest(s__16364__$2)));
}
} else {
return null;
}
break;
}
});})(map__16346,map__16346__$1,keywordize_keys,keyfn))
,null,null));
});})(map__16346,map__16346__$1,keywordize_keys,keyfn))
;
return iter__4567__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__16346,map__16346__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__16373 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__16375__i = 0, G__16375__a = new Array(arguments.length -  1);
while (G__16375__i < G__16375__a.length) {G__16375__a[G__16375__i] = arguments[G__16375__i + 1]; ++G__16375__i;}
  opts = new cljs.core.IndexedSeq(G__16375__a,0);
} 
return G__16373__delegate.call(this,x,opts);};
G__16373.cljs$lang$maxFixedArity = 1;
G__16373.cljs$lang$applyTo = (function (arglist__16376){
var x = cljs.core.first(arglist__16376);
var opts = cljs.core.rest(arglist__16376);
return G__16373__delegate(x,opts);
});
G__16373.cljs$core$IFn$_invoke$arity$variadic = G__16373__delegate;
return G__16373;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__16377 = null;
if (arguments.length > 1) {
var G__16378__i = 0, G__16378__a = new Array(arguments.length -  1);
while (G__16378__i < G__16378__a.length) {G__16378__a[G__16378__i] = arguments[G__16378__i + 1]; ++G__16378__i;}
G__16377 = new cljs.core.IndexedSeq(G__16378__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__16377);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__16381 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16381) : cljs.core.atom.call(null,G__16381));
})();
return ((function (mem){
return (function() { 
var G__16383__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__16382 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16382) : cljs.core.deref.call(null,G__16382));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__16383 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__16384__i = 0, G__16384__a = new Array(arguments.length -  0);
while (G__16384__i < G__16384__a.length) {G__16384__a[G__16384__i] = arguments[G__16384__i + 0]; ++G__16384__i;}
  args = new cljs.core.IndexedSeq(G__16384__a,0);
} 
return G__16383__delegate.call(this,args);};
G__16383.cljs$lang$maxFixedArity = 0;
G__16383.cljs$lang$applyTo = (function (arglist__16385){
var args = cljs.core.seq(arglist__16385);
return G__16383__delegate(args);
});
G__16383.cljs$core$IFn$_invoke$arity$variadic = G__16383__delegate;
return G__16383;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__16387 = ret;
f = G__16387;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__16388__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__16388 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16389__i = 0, G__16389__a = new Array(arguments.length -  1);
while (G__16389__i < G__16389__a.length) {G__16389__a[G__16389__i] = arguments[G__16389__i + 1]; ++G__16389__i;}
  args = new cljs.core.IndexedSeq(G__16389__a,0);
} 
return G__16388__delegate.call(this,f,args);};
G__16388.cljs$lang$maxFixedArity = 1;
G__16388.cljs$lang$applyTo = (function (arglist__16390){
var f = cljs.core.first(arglist__16390);
var args = cljs.core.rest(arglist__16390);
return G__16388__delegate(f,args);
});
G__16388.cljs$core$IFn$_invoke$arity$variadic = G__16388__delegate;
return G__16388;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__16391 = null;
if (arguments.length > 1) {
var G__16392__i = 0, G__16392__a = new Array(arguments.length -  1);
while (G__16392__i < G__16392__a.length) {G__16392__a[G__16392__i] = arguments[G__16392__i + 1]; ++G__16392__i;}
G__16391 = new cljs.core.IndexedSeq(G__16392__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__16391);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__16395 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__16395) : Math.floor.call(null,G__16395));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__16397 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__16397) : f.call(null,G__16397));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"descendants","descendants",1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__16399 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__16399) : cljs.core.atom.call(null,G__16399));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__16400__i = 0, G__16400__a = new Array(arguments.length -  1);
while (G__16400__i < G__16400__a.length) {G__16400__a[G__16400__i] = arguments[G__16400__i + 1]; ++G__16400__i;}
  args = new cljs.core.IndexedSeq(G__16400__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__16401){
var f = cljs.core.first(arglist__16401);
var args = cljs.core.rest(arglist__16401);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16466 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16466) : cljs.core.deref.call(null,G__16466));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3811__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = cljs.core.contains_QMARK_(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
var and__3799__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3799__auto__){
var and__3799__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3799__auto____$1){
var and__3799__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3799__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__16491 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__16489 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__16489) : child.call(null,G__16489));
})(),(function (){var G__16490 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__16490) : parent.call(null,G__16490));
})());
var G__16492 = (i + (1));
ret = G__16491;
i = G__16492;
continue;
}
break;
}
} else {
return and__3799__auto____$2;
}
} else {
return and__3799__auto____$1;
}
} else {
return and__3799__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__16496 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16496) : cljs.core.deref.call(null,G__16496));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__16500 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16500) : cljs.core.deref.call(null,G__16500));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__16504 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16504) : cljs.core.deref.call(null,G__16504));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var td = new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h);
var ta = new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__16513 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__16513) : targets.call(null,G__16513));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__16514 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__16514) : sources.call(null,G__16514));
})()));
});})(tp,td,ta))
;
var or__3811__auto__ = ((cljs.core.contains_QMARK_((function (){var G__16518 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__16518) : tp.call(null,G__16518));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__16519 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16519) : ta.call(null,G__16519));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__16520 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__16520) : ta.call(null,G__16520));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,"parents","parents",-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,"ancestors","ancestors",-776045424),tf(new cljs.core.Keyword(null,"ancestors","ancestors",-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,"descendants","descendants",1824886031),tf(new cljs.core.Keyword(null,"descendants","descendants",1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = new cljs.core.Keyword(null,"parents","parents",-2027538891).cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__16527 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16527) : parentMap.call(null,G__16527));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__16528 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16528) : parentMap.call(null,G__16528));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__16521_SHARP_){
return cljs.core.cons(cljs.core.first(p1__16521_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__16521_SHARP_),cljs.core.second(p1__16521_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__16529 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__16529) : parentMap.call(null,G__16529));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__16522_SHARP_,p2__16523_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__16522_SHARP_,p2__16523_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__16532 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16532) : cljs.core.deref.call(null,G__16532));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__16533 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16533) : cljs.core.deref.call(null,G__16533));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__16549 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16549) : cljs.core.deref.call(null,G__16549));
})().call(null,x);
var or__3811__auto__ = (cljs.core.truth_((function (){var and__3799__auto__ = xprefs;
if(cljs.core.truth_(and__3799__auto__)){
var G__16551 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__16551) : xprefs.call(null,G__16551));
} else {
return and__3799__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__16552 = cljs.core.rest(ps);
ps = G__16552;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3811__auto____$1)){
return or__3811__auto____$1;
} else {
var or__3811__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__16553 = cljs.core.rest(ps);
ps = G__16553;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3811__auto____$2)){
return or__3811__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3811__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3811__auto__)){
return or__3811__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__16567){
var vec__16568 = p__16567;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16568,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__16568,(1),null);
var e = vec__16568;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__16569 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16569) : cljs.core.deref.call(null,G__16569));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3811__auto__ = (be == null);
if(or__3811__auto__){
return or__3811__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__16570 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16570) : cljs.core.deref.call(null,G__16570));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16571 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16571) : cljs.core.deref.call(null,G__16571));
})(),(function (){var G__16572 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16572) : cljs.core.deref.call(null,G__16572));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj16574 = {};
return obj16574;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._reset[(function (){var G__16578 = x__4455__auto__;
return goog.typeOf(G__16578);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._reset["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._add_method[(function (){var G__16582 = x__4455__auto__;
return goog.typeOf(G__16582);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._add_method["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._remove_method[(function (){var G__16586 = x__4455__auto__;
return goog.typeOf(G__16586);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._prefer_method[(function (){var G__16590 = x__4455__auto__;
return goog.typeOf(G__16590);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._get_method[(function (){var G__16594 = x__4455__auto__;
return goog.typeOf(G__16594);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._get_method["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._methods[(function (){var G__16598 = x__4455__auto__;
return goog.typeOf(G__16598);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._methods["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3799__auto__ = mf;
if(and__3799__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3799__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4455__auto__ = (((mf == null))?null:mf);
return (function (){var or__3811__auto__ = (cljs.core._prefers[(function (){var G__16602 = x__4455__auto__;
return goog.typeOf(G__16602);
})()]);
if(or__3811__auto__){
return or__3811__auto__;
} else {
var or__3811__auto____$1 = (cljs.core._prefers["_"]);
if(or__3811__auto____$1){
return or__3811__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__16604 = this$__$1;
return goog.getUid(G__16604);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__16605 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16605) : cljs.core.deref.call(null,G__16605));
})(),(function (){var G__16606 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16606) : cljs.core.deref.call(null,G__16606));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__16607 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16607) : cljs.core.deref.call(null,G__16607));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__16608 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16608) : cljs.core.deref.call(null,G__16608));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16609 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16609) : cljs.core.deref.call(null,G__16609));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__16610 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__16610) : cljs.core.deref.call(null,G__16610));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__17451 = null;
var G__17451__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__17451__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16611 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__16611) : self__.dispatch_fn.call(null,G__16611));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16612 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__16612) : target_fn.call(null,G__16612));
});
var G__17451__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16613 = a;
var G__16614 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__16613,G__16614) : self__.dispatch_fn.call(null,G__16613,G__16614));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16615 = a;
var G__16616 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__16615,G__16616) : target_fn.call(null,G__16615,G__16616));
});
var G__17451__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16617 = a;
var G__16618 = b;
var G__16619 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__16617,G__16618,G__16619) : self__.dispatch_fn.call(null,G__16617,G__16618,G__16619));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16620 = a;
var G__16621 = b;
var G__16622 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__16620,G__16621,G__16622) : target_fn.call(null,G__16620,G__16621,G__16622));
});
var G__17451__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16623 = a;
var G__16624 = b;
var G__16625 = c;
var G__16626 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__16623,G__16624,G__16625,G__16626) : self__.dispatch_fn.call(null,G__16623,G__16624,G__16625,G__16626));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16627 = a;
var G__16628 = b;
var G__16629 = c;
var G__16630 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__16627,G__16628,G__16629,G__16630) : target_fn.call(null,G__16627,G__16628,G__16629,G__16630));
});
var G__17451__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16631 = a;
var G__16632 = b;
var G__16633 = c;
var G__16634 = d;
var G__16635 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__16631,G__16632,G__16633,G__16634,G__16635) : self__.dispatch_fn.call(null,G__16631,G__16632,G__16633,G__16634,G__16635));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16636 = a;
var G__16637 = b;
var G__16638 = c;
var G__16639 = d;
var G__16640 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__16636,G__16637,G__16638,G__16639,G__16640) : target_fn.call(null,G__16636,G__16637,G__16638,G__16639,G__16640));
});
var G__17451__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16641 = a;
var G__16642 = b;
var G__16643 = c;
var G__16644 = d;
var G__16645 = e;
var G__16646 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__16641,G__16642,G__16643,G__16644,G__16645,G__16646) : self__.dispatch_fn.call(null,G__16641,G__16642,G__16643,G__16644,G__16645,G__16646));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16647 = a;
var G__16648 = b;
var G__16649 = c;
var G__16650 = d;
var G__16651 = e;
var G__16652 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__16647,G__16648,G__16649,G__16650,G__16651,G__16652) : target_fn.call(null,G__16647,G__16648,G__16649,G__16650,G__16651,G__16652));
});
var G__17451__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16653 = a;
var G__16654 = b;
var G__16655 = c;
var G__16656 = d;
var G__16657 = e;
var G__16658 = f;
var G__16659 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__16653,G__16654,G__16655,G__16656,G__16657,G__16658,G__16659) : self__.dispatch_fn.call(null,G__16653,G__16654,G__16655,G__16656,G__16657,G__16658,G__16659));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16660 = a;
var G__16661 = b;
var G__16662 = c;
var G__16663 = d;
var G__16664 = e;
var G__16665 = f;
var G__16666 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__16660,G__16661,G__16662,G__16663,G__16664,G__16665,G__16666) : target_fn.call(null,G__16660,G__16661,G__16662,G__16663,G__16664,G__16665,G__16666));
});
var G__17451__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16667 = a;
var G__16668 = b;
var G__16669 = c;
var G__16670 = d;
var G__16671 = e;
var G__16672 = f;
var G__16673 = g;
var G__16674 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__16667,G__16668,G__16669,G__16670,G__16671,G__16672,G__16673,G__16674) : self__.dispatch_fn.call(null,G__16667,G__16668,G__16669,G__16670,G__16671,G__16672,G__16673,G__16674));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16675 = a;
var G__16676 = b;
var G__16677 = c;
var G__16678 = d;
var G__16679 = e;
var G__16680 = f;
var G__16681 = g;
var G__16682 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682) : target_fn.call(null,G__16675,G__16676,G__16677,G__16678,G__16679,G__16680,G__16681,G__16682));
});
var G__17451__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16683 = a;
var G__16684 = b;
var G__16685 = c;
var G__16686 = d;
var G__16687 = e;
var G__16688 = f;
var G__16689 = g;
var G__16690 = h;
var G__16691 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__16683,G__16684,G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691) : self__.dispatch_fn.call(null,G__16683,G__16684,G__16685,G__16686,G__16687,G__16688,G__16689,G__16690,G__16691));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16692 = a;
var G__16693 = b;
var G__16694 = c;
var G__16695 = d;
var G__16696 = e;
var G__16697 = f;
var G__16698 = g;
var G__16699 = h;
var G__16700 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__16692,G__16693,G__16694,G__16695,G__16696,G__16697,G__16698,G__16699,G__16700) : target_fn.call(null,G__16692,G__16693,G__16694,G__16695,G__16696,G__16697,G__16698,G__16699,G__16700));
});
var G__17451__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16701 = a;
var G__16702 = b;
var G__16703 = c;
var G__16704 = d;
var G__16705 = e;
var G__16706 = f;
var G__16707 = g;
var G__16708 = h;
var G__16709 = i;
var G__16710 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__16701,G__16702,G__16703,G__16704,G__16705,G__16706,G__16707,G__16708,G__16709,G__16710) : self__.dispatch_fn.call(null,G__16701,G__16702,G__16703,G__16704,G__16705,G__16706,G__16707,G__16708,G__16709,G__16710));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16711 = a;
var G__16712 = b;
var G__16713 = c;
var G__16714 = d;
var G__16715 = e;
var G__16716 = f;
var G__16717 = g;
var G__16718 = h;
var G__16719 = i;
var G__16720 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__16711,G__16712,G__16713,G__16714,G__16715,G__16716,G__16717,G__16718,G__16719,G__16720) : target_fn.call(null,G__16711,G__16712,G__16713,G__16714,G__16715,G__16716,G__16717,G__16718,G__16719,G__16720));
});
var G__17451__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16721 = a;
var G__16722 = b;
var G__16723 = c;
var G__16724 = d;
var G__16725 = e;
var G__16726 = f;
var G__16727 = g;
var G__16728 = h;
var G__16729 = i;
var G__16730 = j;
var G__16731 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__16721,G__16722,G__16723,G__16724,G__16725,G__16726,G__16727,G__16728,G__16729,G__16730,G__16731) : self__.dispatch_fn.call(null,G__16721,G__16722,G__16723,G__16724,G__16725,G__16726,G__16727,G__16728,G__16729,G__16730,G__16731));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16732 = a;
var G__16733 = b;
var G__16734 = c;
var G__16735 = d;
var G__16736 = e;
var G__16737 = f;
var G__16738 = g;
var G__16739 = h;
var G__16740 = i;
var G__16741 = j;
var G__16742 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__16732,G__16733,G__16734,G__16735,G__16736,G__16737,G__16738,G__16739,G__16740,G__16741,G__16742) : target_fn.call(null,G__16732,G__16733,G__16734,G__16735,G__16736,G__16737,G__16738,G__16739,G__16740,G__16741,G__16742));
});
var G__17451__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16743 = a;
var G__16744 = b;
var G__16745 = c;
var G__16746 = d;
var G__16747 = e;
var G__16748 = f;
var G__16749 = g;
var G__16750 = h;
var G__16751 = i;
var G__16752 = j;
var G__16753 = k;
var G__16754 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__16743,G__16744,G__16745,G__16746,G__16747,G__16748,G__16749,G__16750,G__16751,G__16752,G__16753,G__16754) : self__.dispatch_fn.call(null,G__16743,G__16744,G__16745,G__16746,G__16747,G__16748,G__16749,G__16750,G__16751,G__16752,G__16753,G__16754));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16755 = a;
var G__16756 = b;
var G__16757 = c;
var G__16758 = d;
var G__16759 = e;
var G__16760 = f;
var G__16761 = g;
var G__16762 = h;
var G__16763 = i;
var G__16764 = j;
var G__16765 = k;
var G__16766 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__16755,G__16756,G__16757,G__16758,G__16759,G__16760,G__16761,G__16762,G__16763,G__16764,G__16765,G__16766) : target_fn.call(null,G__16755,G__16756,G__16757,G__16758,G__16759,G__16760,G__16761,G__16762,G__16763,G__16764,G__16765,G__16766));
});
var G__17451__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16767 = a;
var G__16768 = b;
var G__16769 = c;
var G__16770 = d;
var G__16771 = e;
var G__16772 = f;
var G__16773 = g;
var G__16774 = h;
var G__16775 = i;
var G__16776 = j;
var G__16777 = k;
var G__16778 = l;
var G__16779 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__16767,G__16768,G__16769,G__16770,G__16771,G__16772,G__16773,G__16774,G__16775,G__16776,G__16777,G__16778,G__16779) : self__.dispatch_fn.call(null,G__16767,G__16768,G__16769,G__16770,G__16771,G__16772,G__16773,G__16774,G__16775,G__16776,G__16777,G__16778,G__16779));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16780 = a;
var G__16781 = b;
var G__16782 = c;
var G__16783 = d;
var G__16784 = e;
var G__16785 = f;
var G__16786 = g;
var G__16787 = h;
var G__16788 = i;
var G__16789 = j;
var G__16790 = k;
var G__16791 = l;
var G__16792 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__16780,G__16781,G__16782,G__16783,G__16784,G__16785,G__16786,G__16787,G__16788,G__16789,G__16790,G__16791,G__16792) : target_fn.call(null,G__16780,G__16781,G__16782,G__16783,G__16784,G__16785,G__16786,G__16787,G__16788,G__16789,G__16790,G__16791,G__16792));
});
var G__17451__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16793 = a;
var G__16794 = b;
var G__16795 = c;
var G__16796 = d;
var G__16797 = e;
var G__16798 = f;
var G__16799 = g;
var G__16800 = h;
var G__16801 = i;
var G__16802 = j;
var G__16803 = k;
var G__16804 = l;
var G__16805 = m;
var G__16806 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__16793,G__16794,G__16795,G__16796,G__16797,G__16798,G__16799,G__16800,G__16801,G__16802,G__16803,G__16804,G__16805,G__16806) : self__.dispatch_fn.call(null,G__16793,G__16794,G__16795,G__16796,G__16797,G__16798,G__16799,G__16800,G__16801,G__16802,G__16803,G__16804,G__16805,G__16806));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16807 = a;
var G__16808 = b;
var G__16809 = c;
var G__16810 = d;
var G__16811 = e;
var G__16812 = f;
var G__16813 = g;
var G__16814 = h;
var G__16815 = i;
var G__16816 = j;
var G__16817 = k;
var G__16818 = l;
var G__16819 = m;
var G__16820 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__16807,G__16808,G__16809,G__16810,G__16811,G__16812,G__16813,G__16814,G__16815,G__16816,G__16817,G__16818,G__16819,G__16820) : target_fn.call(null,G__16807,G__16808,G__16809,G__16810,G__16811,G__16812,G__16813,G__16814,G__16815,G__16816,G__16817,G__16818,G__16819,G__16820));
});
var G__17451__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16821 = a;
var G__16822 = b;
var G__16823 = c;
var G__16824 = d;
var G__16825 = e;
var G__16826 = f;
var G__16827 = g;
var G__16828 = h;
var G__16829 = i;
var G__16830 = j;
var G__16831 = k;
var G__16832 = l;
var G__16833 = m;
var G__16834 = n;
var G__16835 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__16821,G__16822,G__16823,G__16824,G__16825,G__16826,G__16827,G__16828,G__16829,G__16830,G__16831,G__16832,G__16833,G__16834,G__16835) : self__.dispatch_fn.call(null,G__16821,G__16822,G__16823,G__16824,G__16825,G__16826,G__16827,G__16828,G__16829,G__16830,G__16831,G__16832,G__16833,G__16834,G__16835));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16836 = a;
var G__16837 = b;
var G__16838 = c;
var G__16839 = d;
var G__16840 = e;
var G__16841 = f;
var G__16842 = g;
var G__16843 = h;
var G__16844 = i;
var G__16845 = j;
var G__16846 = k;
var G__16847 = l;
var G__16848 = m;
var G__16849 = n;
var G__16850 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__16836,G__16837,G__16838,G__16839,G__16840,G__16841,G__16842,G__16843,G__16844,G__16845,G__16846,G__16847,G__16848,G__16849,G__16850) : target_fn.call(null,G__16836,G__16837,G__16838,G__16839,G__16840,G__16841,G__16842,G__16843,G__16844,G__16845,G__16846,G__16847,G__16848,G__16849,G__16850));
});
var G__17451__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16851 = a;
var G__16852 = b;
var G__16853 = c;
var G__16854 = d;
var G__16855 = e;
var G__16856 = f;
var G__16857 = g;
var G__16858 = h;
var G__16859 = i;
var G__16860 = j;
var G__16861 = k;
var G__16862 = l;
var G__16863 = m;
var G__16864 = n;
var G__16865 = o;
var G__16866 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__16851,G__16852,G__16853,G__16854,G__16855,G__16856,G__16857,G__16858,G__16859,G__16860,G__16861,G__16862,G__16863,G__16864,G__16865,G__16866) : self__.dispatch_fn.call(null,G__16851,G__16852,G__16853,G__16854,G__16855,G__16856,G__16857,G__16858,G__16859,G__16860,G__16861,G__16862,G__16863,G__16864,G__16865,G__16866));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16867 = a;
var G__16868 = b;
var G__16869 = c;
var G__16870 = d;
var G__16871 = e;
var G__16872 = f;
var G__16873 = g;
var G__16874 = h;
var G__16875 = i;
var G__16876 = j;
var G__16877 = k;
var G__16878 = l;
var G__16879 = m;
var G__16880 = n;
var G__16881 = o;
var G__16882 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__16867,G__16868,G__16869,G__16870,G__16871,G__16872,G__16873,G__16874,G__16875,G__16876,G__16877,G__16878,G__16879,G__16880,G__16881,G__16882) : target_fn.call(null,G__16867,G__16868,G__16869,G__16870,G__16871,G__16872,G__16873,G__16874,G__16875,G__16876,G__16877,G__16878,G__16879,G__16880,G__16881,G__16882));
});
var G__17451__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16883 = a;
var G__16884 = b;
var G__16885 = c;
var G__16886 = d;
var G__16887 = e;
var G__16888 = f;
var G__16889 = g;
var G__16890 = h;
var G__16891 = i;
var G__16892 = j;
var G__16893 = k;
var G__16894 = l;
var G__16895 = m;
var G__16896 = n;
var G__16897 = o;
var G__16898 = p;
var G__16899 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__16883,G__16884,G__16885,G__16886,G__16887,G__16888,G__16889,G__16890,G__16891,G__16892,G__16893,G__16894,G__16895,G__16896,G__16897,G__16898,G__16899) : self__.dispatch_fn.call(null,G__16883,G__16884,G__16885,G__16886,G__16887,G__16888,G__16889,G__16890,G__16891,G__16892,G__16893,G__16894,G__16895,G__16896,G__16897,G__16898,G__16899));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16900 = a;
var G__16901 = b;
var G__16902 = c;
var G__16903 = d;
var G__16904 = e;
var G__16905 = f;
var G__16906 = g;
var G__16907 = h;
var G__16908 = i;
var G__16909 = j;
var G__16910 = k;
var G__16911 = l;
var G__16912 = m;
var G__16913 = n;
var G__16914 = o;
var G__16915 = p;
var G__16916 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__16900,G__16901,G__16902,G__16903,G__16904,G__16905,G__16906,G__16907,G__16908,G__16909,G__16910,G__16911,G__16912,G__16913,G__16914,G__16915,G__16916) : target_fn.call(null,G__16900,G__16901,G__16902,G__16903,G__16904,G__16905,G__16906,G__16907,G__16908,G__16909,G__16910,G__16911,G__16912,G__16913,G__16914,G__16915,G__16916));
});
var G__17451__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16917 = a;
var G__16918 = b;
var G__16919 = c;
var G__16920 = d;
var G__16921 = e;
var G__16922 = f;
var G__16923 = g;
var G__16924 = h;
var G__16925 = i;
var G__16926 = j;
var G__16927 = k;
var G__16928 = l;
var G__16929 = m;
var G__16930 = n;
var G__16931 = o;
var G__16932 = p;
var G__16933 = q;
var G__16934 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__16917,G__16918,G__16919,G__16920,G__16921,G__16922,G__16923,G__16924,G__16925,G__16926,G__16927,G__16928,G__16929,G__16930,G__16931,G__16932,G__16933,G__16934) : self__.dispatch_fn.call(null,G__16917,G__16918,G__16919,G__16920,G__16921,G__16922,G__16923,G__16924,G__16925,G__16926,G__16927,G__16928,G__16929,G__16930,G__16931,G__16932,G__16933,G__16934));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16935 = a;
var G__16936 = b;
var G__16937 = c;
var G__16938 = d;
var G__16939 = e;
var G__16940 = f;
var G__16941 = g;
var G__16942 = h;
var G__16943 = i;
var G__16944 = j;
var G__16945 = k;
var G__16946 = l;
var G__16947 = m;
var G__16948 = n;
var G__16949 = o;
var G__16950 = p;
var G__16951 = q;
var G__16952 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__16935,G__16936,G__16937,G__16938,G__16939,G__16940,G__16941,G__16942,G__16943,G__16944,G__16945,G__16946,G__16947,G__16948,G__16949,G__16950,G__16951,G__16952) : target_fn.call(null,G__16935,G__16936,G__16937,G__16938,G__16939,G__16940,G__16941,G__16942,G__16943,G__16944,G__16945,G__16946,G__16947,G__16948,G__16949,G__16950,G__16951,G__16952));
});
var G__17451__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16953 = a;
var G__16954 = b;
var G__16955 = c;
var G__16956 = d;
var G__16957 = e;
var G__16958 = f;
var G__16959 = g;
var G__16960 = h;
var G__16961 = i;
var G__16962 = j;
var G__16963 = k;
var G__16964 = l;
var G__16965 = m;
var G__16966 = n;
var G__16967 = o;
var G__16968 = p;
var G__16969 = q;
var G__16970 = r;
var G__16971 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__16953,G__16954,G__16955,G__16956,G__16957,G__16958,G__16959,G__16960,G__16961,G__16962,G__16963,G__16964,G__16965,G__16966,G__16967,G__16968,G__16969,G__16970,G__16971) : self__.dispatch_fn.call(null,G__16953,G__16954,G__16955,G__16956,G__16957,G__16958,G__16959,G__16960,G__16961,G__16962,G__16963,G__16964,G__16965,G__16966,G__16967,G__16968,G__16969,G__16970,G__16971));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__16972 = a;
var G__16973 = b;
var G__16974 = c;
var G__16975 = d;
var G__16976 = e;
var G__16977 = f;
var G__16978 = g;
var G__16979 = h;
var G__16980 = i;
var G__16981 = j;
var G__16982 = k;
var G__16983 = l;
var G__16984 = m;
var G__16985 = n;
var G__16986 = o;
var G__16987 = p;
var G__16988 = q;
var G__16989 = r;
var G__16990 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__16972,G__16973,G__16974,G__16975,G__16976,G__16977,G__16978,G__16979,G__16980,G__16981,G__16982,G__16983,G__16984,G__16985,G__16986,G__16987,G__16988,G__16989,G__16990) : target_fn.call(null,G__16972,G__16973,G__16974,G__16975,G__16976,G__16977,G__16978,G__16979,G__16980,G__16981,G__16982,G__16983,G__16984,G__16985,G__16986,G__16987,G__16988,G__16989,G__16990));
});
var G__17451__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__16991 = a;
var G__16992 = b;
var G__16993 = c;
var G__16994 = d;
var G__16995 = e;
var G__16996 = f;
var G__16997 = g;
var G__16998 = h;
var G__16999 = i;
var G__17000 = j;
var G__17001 = k;
var G__17002 = l;
var G__17003 = m;
var G__17004 = n;
var G__17005 = o;
var G__17006 = p;
var G__17007 = q;
var G__17008 = r;
var G__17009 = s;
var G__17010 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__16991,G__16992,G__16993,G__16994,G__16995,G__16996,G__16997,G__16998,G__16999,G__17000,G__17001,G__17002,G__17003,G__17004,G__17005,G__17006,G__17007,G__17008,G__17009,G__17010) : self__.dispatch_fn.call(null,G__16991,G__16992,G__16993,G__16994,G__16995,G__16996,G__16997,G__16998,G__16999,G__17000,G__17001,G__17002,G__17003,G__17004,G__17005,G__17006,G__17007,G__17008,G__17009,G__17010));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17011 = a;
var G__17012 = b;
var G__17013 = c;
var G__17014 = d;
var G__17015 = e;
var G__17016 = f;
var G__17017 = g;
var G__17018 = h;
var G__17019 = i;
var G__17020 = j;
var G__17021 = k;
var G__17022 = l;
var G__17023 = m;
var G__17024 = n;
var G__17025 = o;
var G__17026 = p;
var G__17027 = q;
var G__17028 = r;
var G__17029 = s;
var G__17030 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17011,G__17012,G__17013,G__17014,G__17015,G__17016,G__17017,G__17018,G__17019,G__17020,G__17021,G__17022,G__17023,G__17024,G__17025,G__17026,G__17027,G__17028,G__17029,G__17030) : target_fn.call(null,G__17011,G__17012,G__17013,G__17014,G__17015,G__17016,G__17017,G__17018,G__17019,G__17020,G__17021,G__17022,G__17023,G__17024,G__17025,G__17026,G__17027,G__17028,G__17029,G__17030));
});
var G__17451__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__17451 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__17451__1.call(this,self__);
case 2:
return G__17451__2.call(this,self__,a);
case 3:
return G__17451__3.call(this,self__,a,b);
case 4:
return G__17451__4.call(this,self__,a,b,c);
case 5:
return G__17451__5.call(this,self__,a,b,c,d);
case 6:
return G__17451__6.call(this,self__,a,b,c,d,e);
case 7:
return G__17451__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__17451__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__17451__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__17451__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__17451__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__17451__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__17451__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__17451__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__17451__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__17451__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__17451__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__17451__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__17451__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__17451__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__17451__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__17451__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__17451.cljs$core$IFn$_invoke$arity$1 = G__17451__1;
G__17451.cljs$core$IFn$_invoke$arity$2 = G__17451__2;
G__17451.cljs$core$IFn$_invoke$arity$3 = G__17451__3;
G__17451.cljs$core$IFn$_invoke$arity$4 = G__17451__4;
G__17451.cljs$core$IFn$_invoke$arity$5 = G__17451__5;
G__17451.cljs$core$IFn$_invoke$arity$6 = G__17451__6;
G__17451.cljs$core$IFn$_invoke$arity$7 = G__17451__7;
G__17451.cljs$core$IFn$_invoke$arity$8 = G__17451__8;
G__17451.cljs$core$IFn$_invoke$arity$9 = G__17451__9;
G__17451.cljs$core$IFn$_invoke$arity$10 = G__17451__10;
G__17451.cljs$core$IFn$_invoke$arity$11 = G__17451__11;
G__17451.cljs$core$IFn$_invoke$arity$12 = G__17451__12;
G__17451.cljs$core$IFn$_invoke$arity$13 = G__17451__13;
G__17451.cljs$core$IFn$_invoke$arity$14 = G__17451__14;
G__17451.cljs$core$IFn$_invoke$arity$15 = G__17451__15;
G__17451.cljs$core$IFn$_invoke$arity$16 = G__17451__16;
G__17451.cljs$core$IFn$_invoke$arity$17 = G__17451__17;
G__17451.cljs$core$IFn$_invoke$arity$18 = G__17451__18;
G__17451.cljs$core$IFn$_invoke$arity$19 = G__17451__19;
G__17451.cljs$core$IFn$_invoke$arity$20 = G__17451__20;
G__17451.cljs$core$IFn$_invoke$arity$21 = G__17451__21;
G__17451.cljs$core$IFn$_invoke$arity$22 = G__17451__22;
return G__17451;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args16603){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args16603)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17031 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__17031) : self__.dispatch_fn.call(null,G__17031));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17032 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__17032) : target_fn.call(null,G__17032));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17033 = a;
var G__17034 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__17033,G__17034) : self__.dispatch_fn.call(null,G__17033,G__17034));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17035 = a;
var G__17036 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__17035,G__17036) : target_fn.call(null,G__17035,G__17036));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17037 = a;
var G__17038 = b;
var G__17039 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__17037,G__17038,G__17039) : self__.dispatch_fn.call(null,G__17037,G__17038,G__17039));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17040 = a;
var G__17041 = b;
var G__17042 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__17040,G__17041,G__17042) : target_fn.call(null,G__17040,G__17041,G__17042));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17043 = a;
var G__17044 = b;
var G__17045 = c;
var G__17046 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__17043,G__17044,G__17045,G__17046) : self__.dispatch_fn.call(null,G__17043,G__17044,G__17045,G__17046));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17047 = a;
var G__17048 = b;
var G__17049 = c;
var G__17050 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__17047,G__17048,G__17049,G__17050) : target_fn.call(null,G__17047,G__17048,G__17049,G__17050));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17051 = a;
var G__17052 = b;
var G__17053 = c;
var G__17054 = d;
var G__17055 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__17051,G__17052,G__17053,G__17054,G__17055) : self__.dispatch_fn.call(null,G__17051,G__17052,G__17053,G__17054,G__17055));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17056 = a;
var G__17057 = b;
var G__17058 = c;
var G__17059 = d;
var G__17060 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__17056,G__17057,G__17058,G__17059,G__17060) : target_fn.call(null,G__17056,G__17057,G__17058,G__17059,G__17060));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17061 = a;
var G__17062 = b;
var G__17063 = c;
var G__17064 = d;
var G__17065 = e;
var G__17066 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__17061,G__17062,G__17063,G__17064,G__17065,G__17066) : self__.dispatch_fn.call(null,G__17061,G__17062,G__17063,G__17064,G__17065,G__17066));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17067 = a;
var G__17068 = b;
var G__17069 = c;
var G__17070 = d;
var G__17071 = e;
var G__17072 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__17067,G__17068,G__17069,G__17070,G__17071,G__17072) : target_fn.call(null,G__17067,G__17068,G__17069,G__17070,G__17071,G__17072));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17073 = a;
var G__17074 = b;
var G__17075 = c;
var G__17076 = d;
var G__17077 = e;
var G__17078 = f;
var G__17079 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__17073,G__17074,G__17075,G__17076,G__17077,G__17078,G__17079) : self__.dispatch_fn.call(null,G__17073,G__17074,G__17075,G__17076,G__17077,G__17078,G__17079));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17080 = a;
var G__17081 = b;
var G__17082 = c;
var G__17083 = d;
var G__17084 = e;
var G__17085 = f;
var G__17086 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__17080,G__17081,G__17082,G__17083,G__17084,G__17085,G__17086) : target_fn.call(null,G__17080,G__17081,G__17082,G__17083,G__17084,G__17085,G__17086));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17087 = a;
var G__17088 = b;
var G__17089 = c;
var G__17090 = d;
var G__17091 = e;
var G__17092 = f;
var G__17093 = g;
var G__17094 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__17087,G__17088,G__17089,G__17090,G__17091,G__17092,G__17093,G__17094) : self__.dispatch_fn.call(null,G__17087,G__17088,G__17089,G__17090,G__17091,G__17092,G__17093,G__17094));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17095 = a;
var G__17096 = b;
var G__17097 = c;
var G__17098 = d;
var G__17099 = e;
var G__17100 = f;
var G__17101 = g;
var G__17102 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__17095,G__17096,G__17097,G__17098,G__17099,G__17100,G__17101,G__17102) : target_fn.call(null,G__17095,G__17096,G__17097,G__17098,G__17099,G__17100,G__17101,G__17102));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17103 = a;
var G__17104 = b;
var G__17105 = c;
var G__17106 = d;
var G__17107 = e;
var G__17108 = f;
var G__17109 = g;
var G__17110 = h;
var G__17111 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__17103,G__17104,G__17105,G__17106,G__17107,G__17108,G__17109,G__17110,G__17111) : self__.dispatch_fn.call(null,G__17103,G__17104,G__17105,G__17106,G__17107,G__17108,G__17109,G__17110,G__17111));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17112 = a;
var G__17113 = b;
var G__17114 = c;
var G__17115 = d;
var G__17116 = e;
var G__17117 = f;
var G__17118 = g;
var G__17119 = h;
var G__17120 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__17112,G__17113,G__17114,G__17115,G__17116,G__17117,G__17118,G__17119,G__17120) : target_fn.call(null,G__17112,G__17113,G__17114,G__17115,G__17116,G__17117,G__17118,G__17119,G__17120));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17121 = a;
var G__17122 = b;
var G__17123 = c;
var G__17124 = d;
var G__17125 = e;
var G__17126 = f;
var G__17127 = g;
var G__17128 = h;
var G__17129 = i;
var G__17130 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__17121,G__17122,G__17123,G__17124,G__17125,G__17126,G__17127,G__17128,G__17129,G__17130) : self__.dispatch_fn.call(null,G__17121,G__17122,G__17123,G__17124,G__17125,G__17126,G__17127,G__17128,G__17129,G__17130));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17131 = a;
var G__17132 = b;
var G__17133 = c;
var G__17134 = d;
var G__17135 = e;
var G__17136 = f;
var G__17137 = g;
var G__17138 = h;
var G__17139 = i;
var G__17140 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__17131,G__17132,G__17133,G__17134,G__17135,G__17136,G__17137,G__17138,G__17139,G__17140) : target_fn.call(null,G__17131,G__17132,G__17133,G__17134,G__17135,G__17136,G__17137,G__17138,G__17139,G__17140));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17141 = a;
var G__17142 = b;
var G__17143 = c;
var G__17144 = d;
var G__17145 = e;
var G__17146 = f;
var G__17147 = g;
var G__17148 = h;
var G__17149 = i;
var G__17150 = j;
var G__17151 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__17141,G__17142,G__17143,G__17144,G__17145,G__17146,G__17147,G__17148,G__17149,G__17150,G__17151) : self__.dispatch_fn.call(null,G__17141,G__17142,G__17143,G__17144,G__17145,G__17146,G__17147,G__17148,G__17149,G__17150,G__17151));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17152 = a;
var G__17153 = b;
var G__17154 = c;
var G__17155 = d;
var G__17156 = e;
var G__17157 = f;
var G__17158 = g;
var G__17159 = h;
var G__17160 = i;
var G__17161 = j;
var G__17162 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__17152,G__17153,G__17154,G__17155,G__17156,G__17157,G__17158,G__17159,G__17160,G__17161,G__17162) : target_fn.call(null,G__17152,G__17153,G__17154,G__17155,G__17156,G__17157,G__17158,G__17159,G__17160,G__17161,G__17162));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17163 = a;
var G__17164 = b;
var G__17165 = c;
var G__17166 = d;
var G__17167 = e;
var G__17168 = f;
var G__17169 = g;
var G__17170 = h;
var G__17171 = i;
var G__17172 = j;
var G__17173 = k;
var G__17174 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__17163,G__17164,G__17165,G__17166,G__17167,G__17168,G__17169,G__17170,G__17171,G__17172,G__17173,G__17174) : self__.dispatch_fn.call(null,G__17163,G__17164,G__17165,G__17166,G__17167,G__17168,G__17169,G__17170,G__17171,G__17172,G__17173,G__17174));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17175 = a;
var G__17176 = b;
var G__17177 = c;
var G__17178 = d;
var G__17179 = e;
var G__17180 = f;
var G__17181 = g;
var G__17182 = h;
var G__17183 = i;
var G__17184 = j;
var G__17185 = k;
var G__17186 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__17175,G__17176,G__17177,G__17178,G__17179,G__17180,G__17181,G__17182,G__17183,G__17184,G__17185,G__17186) : target_fn.call(null,G__17175,G__17176,G__17177,G__17178,G__17179,G__17180,G__17181,G__17182,G__17183,G__17184,G__17185,G__17186));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17187 = a;
var G__17188 = b;
var G__17189 = c;
var G__17190 = d;
var G__17191 = e;
var G__17192 = f;
var G__17193 = g;
var G__17194 = h;
var G__17195 = i;
var G__17196 = j;
var G__17197 = k;
var G__17198 = l;
var G__17199 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__17187,G__17188,G__17189,G__17190,G__17191,G__17192,G__17193,G__17194,G__17195,G__17196,G__17197,G__17198,G__17199) : self__.dispatch_fn.call(null,G__17187,G__17188,G__17189,G__17190,G__17191,G__17192,G__17193,G__17194,G__17195,G__17196,G__17197,G__17198,G__17199));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17200 = a;
var G__17201 = b;
var G__17202 = c;
var G__17203 = d;
var G__17204 = e;
var G__17205 = f;
var G__17206 = g;
var G__17207 = h;
var G__17208 = i;
var G__17209 = j;
var G__17210 = k;
var G__17211 = l;
var G__17212 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__17200,G__17201,G__17202,G__17203,G__17204,G__17205,G__17206,G__17207,G__17208,G__17209,G__17210,G__17211,G__17212) : target_fn.call(null,G__17200,G__17201,G__17202,G__17203,G__17204,G__17205,G__17206,G__17207,G__17208,G__17209,G__17210,G__17211,G__17212));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17213 = a;
var G__17214 = b;
var G__17215 = c;
var G__17216 = d;
var G__17217 = e;
var G__17218 = f;
var G__17219 = g;
var G__17220 = h;
var G__17221 = i;
var G__17222 = j;
var G__17223 = k;
var G__17224 = l;
var G__17225 = m;
var G__17226 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__17213,G__17214,G__17215,G__17216,G__17217,G__17218,G__17219,G__17220,G__17221,G__17222,G__17223,G__17224,G__17225,G__17226) : self__.dispatch_fn.call(null,G__17213,G__17214,G__17215,G__17216,G__17217,G__17218,G__17219,G__17220,G__17221,G__17222,G__17223,G__17224,G__17225,G__17226));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17227 = a;
var G__17228 = b;
var G__17229 = c;
var G__17230 = d;
var G__17231 = e;
var G__17232 = f;
var G__17233 = g;
var G__17234 = h;
var G__17235 = i;
var G__17236 = j;
var G__17237 = k;
var G__17238 = l;
var G__17239 = m;
var G__17240 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__17227,G__17228,G__17229,G__17230,G__17231,G__17232,G__17233,G__17234,G__17235,G__17236,G__17237,G__17238,G__17239,G__17240) : target_fn.call(null,G__17227,G__17228,G__17229,G__17230,G__17231,G__17232,G__17233,G__17234,G__17235,G__17236,G__17237,G__17238,G__17239,G__17240));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17241 = a;
var G__17242 = b;
var G__17243 = c;
var G__17244 = d;
var G__17245 = e;
var G__17246 = f;
var G__17247 = g;
var G__17248 = h;
var G__17249 = i;
var G__17250 = j;
var G__17251 = k;
var G__17252 = l;
var G__17253 = m;
var G__17254 = n;
var G__17255 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__17241,G__17242,G__17243,G__17244,G__17245,G__17246,G__17247,G__17248,G__17249,G__17250,G__17251,G__17252,G__17253,G__17254,G__17255) : self__.dispatch_fn.call(null,G__17241,G__17242,G__17243,G__17244,G__17245,G__17246,G__17247,G__17248,G__17249,G__17250,G__17251,G__17252,G__17253,G__17254,G__17255));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17256 = a;
var G__17257 = b;
var G__17258 = c;
var G__17259 = d;
var G__17260 = e;
var G__17261 = f;
var G__17262 = g;
var G__17263 = h;
var G__17264 = i;
var G__17265 = j;
var G__17266 = k;
var G__17267 = l;
var G__17268 = m;
var G__17269 = n;
var G__17270 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__17256,G__17257,G__17258,G__17259,G__17260,G__17261,G__17262,G__17263,G__17264,G__17265,G__17266,G__17267,G__17268,G__17269,G__17270) : target_fn.call(null,G__17256,G__17257,G__17258,G__17259,G__17260,G__17261,G__17262,G__17263,G__17264,G__17265,G__17266,G__17267,G__17268,G__17269,G__17270));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17271 = a;
var G__17272 = b;
var G__17273 = c;
var G__17274 = d;
var G__17275 = e;
var G__17276 = f;
var G__17277 = g;
var G__17278 = h;
var G__17279 = i;
var G__17280 = j;
var G__17281 = k;
var G__17282 = l;
var G__17283 = m;
var G__17284 = n;
var G__17285 = o;
var G__17286 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__17271,G__17272,G__17273,G__17274,G__17275,G__17276,G__17277,G__17278,G__17279,G__17280,G__17281,G__17282,G__17283,G__17284,G__17285,G__17286) : self__.dispatch_fn.call(null,G__17271,G__17272,G__17273,G__17274,G__17275,G__17276,G__17277,G__17278,G__17279,G__17280,G__17281,G__17282,G__17283,G__17284,G__17285,G__17286));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17287 = a;
var G__17288 = b;
var G__17289 = c;
var G__17290 = d;
var G__17291 = e;
var G__17292 = f;
var G__17293 = g;
var G__17294 = h;
var G__17295 = i;
var G__17296 = j;
var G__17297 = k;
var G__17298 = l;
var G__17299 = m;
var G__17300 = n;
var G__17301 = o;
var G__17302 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__17287,G__17288,G__17289,G__17290,G__17291,G__17292,G__17293,G__17294,G__17295,G__17296,G__17297,G__17298,G__17299,G__17300,G__17301,G__17302) : target_fn.call(null,G__17287,G__17288,G__17289,G__17290,G__17291,G__17292,G__17293,G__17294,G__17295,G__17296,G__17297,G__17298,G__17299,G__17300,G__17301,G__17302));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17303 = a;
var G__17304 = b;
var G__17305 = c;
var G__17306 = d;
var G__17307 = e;
var G__17308 = f;
var G__17309 = g;
var G__17310 = h;
var G__17311 = i;
var G__17312 = j;
var G__17313 = k;
var G__17314 = l;
var G__17315 = m;
var G__17316 = n;
var G__17317 = o;
var G__17318 = p;
var G__17319 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__17303,G__17304,G__17305,G__17306,G__17307,G__17308,G__17309,G__17310,G__17311,G__17312,G__17313,G__17314,G__17315,G__17316,G__17317,G__17318,G__17319) : self__.dispatch_fn.call(null,G__17303,G__17304,G__17305,G__17306,G__17307,G__17308,G__17309,G__17310,G__17311,G__17312,G__17313,G__17314,G__17315,G__17316,G__17317,G__17318,G__17319));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17320 = a;
var G__17321 = b;
var G__17322 = c;
var G__17323 = d;
var G__17324 = e;
var G__17325 = f;
var G__17326 = g;
var G__17327 = h;
var G__17328 = i;
var G__17329 = j;
var G__17330 = k;
var G__17331 = l;
var G__17332 = m;
var G__17333 = n;
var G__17334 = o;
var G__17335 = p;
var G__17336 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__17320,G__17321,G__17322,G__17323,G__17324,G__17325,G__17326,G__17327,G__17328,G__17329,G__17330,G__17331,G__17332,G__17333,G__17334,G__17335,G__17336) : target_fn.call(null,G__17320,G__17321,G__17322,G__17323,G__17324,G__17325,G__17326,G__17327,G__17328,G__17329,G__17330,G__17331,G__17332,G__17333,G__17334,G__17335,G__17336));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17337 = a;
var G__17338 = b;
var G__17339 = c;
var G__17340 = d;
var G__17341 = e;
var G__17342 = f;
var G__17343 = g;
var G__17344 = h;
var G__17345 = i;
var G__17346 = j;
var G__17347 = k;
var G__17348 = l;
var G__17349 = m;
var G__17350 = n;
var G__17351 = o;
var G__17352 = p;
var G__17353 = q;
var G__17354 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__17337,G__17338,G__17339,G__17340,G__17341,G__17342,G__17343,G__17344,G__17345,G__17346,G__17347,G__17348,G__17349,G__17350,G__17351,G__17352,G__17353,G__17354) : self__.dispatch_fn.call(null,G__17337,G__17338,G__17339,G__17340,G__17341,G__17342,G__17343,G__17344,G__17345,G__17346,G__17347,G__17348,G__17349,G__17350,G__17351,G__17352,G__17353,G__17354));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17355 = a;
var G__17356 = b;
var G__17357 = c;
var G__17358 = d;
var G__17359 = e;
var G__17360 = f;
var G__17361 = g;
var G__17362 = h;
var G__17363 = i;
var G__17364 = j;
var G__17365 = k;
var G__17366 = l;
var G__17367 = m;
var G__17368 = n;
var G__17369 = o;
var G__17370 = p;
var G__17371 = q;
var G__17372 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__17355,G__17356,G__17357,G__17358,G__17359,G__17360,G__17361,G__17362,G__17363,G__17364,G__17365,G__17366,G__17367,G__17368,G__17369,G__17370,G__17371,G__17372) : target_fn.call(null,G__17355,G__17356,G__17357,G__17358,G__17359,G__17360,G__17361,G__17362,G__17363,G__17364,G__17365,G__17366,G__17367,G__17368,G__17369,G__17370,G__17371,G__17372));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17373 = a;
var G__17374 = b;
var G__17375 = c;
var G__17376 = d;
var G__17377 = e;
var G__17378 = f;
var G__17379 = g;
var G__17380 = h;
var G__17381 = i;
var G__17382 = j;
var G__17383 = k;
var G__17384 = l;
var G__17385 = m;
var G__17386 = n;
var G__17387 = o;
var G__17388 = p;
var G__17389 = q;
var G__17390 = r;
var G__17391 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__17373,G__17374,G__17375,G__17376,G__17377,G__17378,G__17379,G__17380,G__17381,G__17382,G__17383,G__17384,G__17385,G__17386,G__17387,G__17388,G__17389,G__17390,G__17391) : self__.dispatch_fn.call(null,G__17373,G__17374,G__17375,G__17376,G__17377,G__17378,G__17379,G__17380,G__17381,G__17382,G__17383,G__17384,G__17385,G__17386,G__17387,G__17388,G__17389,G__17390,G__17391));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17392 = a;
var G__17393 = b;
var G__17394 = c;
var G__17395 = d;
var G__17396 = e;
var G__17397 = f;
var G__17398 = g;
var G__17399 = h;
var G__17400 = i;
var G__17401 = j;
var G__17402 = k;
var G__17403 = l;
var G__17404 = m;
var G__17405 = n;
var G__17406 = o;
var G__17407 = p;
var G__17408 = q;
var G__17409 = r;
var G__17410 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__17392,G__17393,G__17394,G__17395,G__17396,G__17397,G__17398,G__17399,G__17400,G__17401,G__17402,G__17403,G__17404,G__17405,G__17406,G__17407,G__17408,G__17409,G__17410) : target_fn.call(null,G__17392,G__17393,G__17394,G__17395,G__17396,G__17397,G__17398,G__17399,G__17400,G__17401,G__17402,G__17403,G__17404,G__17405,G__17406,G__17407,G__17408,G__17409,G__17410));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__17411 = a;
var G__17412 = b;
var G__17413 = c;
var G__17414 = d;
var G__17415 = e;
var G__17416 = f;
var G__17417 = g;
var G__17418 = h;
var G__17419 = i;
var G__17420 = j;
var G__17421 = k;
var G__17422 = l;
var G__17423 = m;
var G__17424 = n;
var G__17425 = o;
var G__17426 = p;
var G__17427 = q;
var G__17428 = r;
var G__17429 = s;
var G__17430 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__17411,G__17412,G__17413,G__17414,G__17415,G__17416,G__17417,G__17418,G__17419,G__17420,G__17421,G__17422,G__17423,G__17424,G__17425,G__17426,G__17427,G__17428,G__17429,G__17430) : self__.dispatch_fn.call(null,G__17411,G__17412,G__17413,G__17414,G__17415,G__17416,G__17417,G__17418,G__17419,G__17420,G__17421,G__17422,G__17423,G__17424,G__17425,G__17426,G__17427,G__17428,G__17429,G__17430));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__17431 = a;
var G__17432 = b;
var G__17433 = c;
var G__17434 = d;
var G__17435 = e;
var G__17436 = f;
var G__17437 = g;
var G__17438 = h;
var G__17439 = i;
var G__17440 = j;
var G__17441 = k;
var G__17442 = l;
var G__17443 = m;
var G__17444 = n;
var G__17445 = o;
var G__17446 = p;
var G__17447 = q;
var G__17448 = r;
var G__17449 = s;
var G__17450 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__17431,G__17432,G__17433,G__17434,G__17435,G__17436,G__17437,G__17438,G__17439,G__17440,G__17441,G__17442,G__17443,G__17444,G__17445,G__17446,G__17447,G__17448,G__17449,G__17450) : target_fn.call(null,G__17431,G__17432,G__17433,G__17434,G__17435,G__17436,G__17437,G__17438,G__17439,G__17440,G__17441,G__17442,G__17443,G__17444,G__17445,G__17446,G__17447,G__17448,G__17449,G__17450));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__17452 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__17452);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4398__auto__,writer__4399__auto__,opt__4400__auto__){
return cljs.core._write(writer__4399__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__17457 = msg;
return Error(G__17457);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__17462 = x;
var G__17463 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17462,G__17463) : pred.call(null,G__17462,G__17463));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__17464 = y;
var G__17465 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__17464,G__17465) : pred.call(null,G__17464,G__17465));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return new cljs.core.Keyword(null,"ok","ok",967785236);
} else {
return new cljs.core.Keyword(null,"no-test","no-test",-1679482642);
}
});
